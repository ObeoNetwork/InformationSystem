__Copyright (c) 2008, 2022 Obeo -  All rights reserved. This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0__

@Authors@ StÃ©phane Thibaudeau
@Contact@ stephane.thibaudeau@obeo.fr

h1. ISD - Using modeling projects as libraries

Since 1.8 version IS Designer allows one to export a modeling project as a library file (a MAR file) and import it into another modeling project.

This can be useful when one wants to model core concepts inside a core project and then use these core concepts in another modeling project without modifying the initial project.  

When exporting a modeling project as a library file (typically with _.mar_ extension) one can set a version number corresponding to the exported data. This version number is checked when importing the library into another modeling project.

h2. Export a modeling project as a library

To export a modeling project as a library, use the _File > Export..._ menu and choose _Export modeling project as library_ in _IS Designer_ category.

!pics/ExportMenu.png!

On the wizard's first page, the user can select the project to be exported and the destination for the generated MAR file.
The destinatin file can be located inside or outside an eclipse project. The recommended way is to use an external location.

!pics/exportWizardPage1.png!

On the wizard's next page, the user can define the following information :
* *Project ID* The default value is the name of the exported project. (required)
* *Version* The version number must be in the form x.y.z where x,y and z are integers.
* *Previous version* This table is not editable. It presents the previous versions that were exported from the same modeling project.
* *Comment*

!pics/exportWizardPage2.png!

Once this last step is completed, a MAR file is generated at the specified location .This file can then be imported into another modeling project.

h2. Import a library into a modeling project

To import a library file into a modeling project, use the _File > Import..._ menu and choose _Export library into modeling project_ in _IS Designer_ category.

!pics/importMenu.png!

On the wizard's page, the user can define :
* the target project. The project is already selected if the user launched the import from a selected project.
* the MAR file to import

!pics/importWizard.png!

Once the MAR file has been selected, informations are extracted from the file and displayed to the user :
* *Project ID*
* *Version*
* *Creation date*
* *Comment*
* *Dependencies* In this table, the dependencies found in the MAR file are displayed with a green or red tick to indicate if the dependency is valid regarding the target project.

If all dependencies are valid, the user can finish the wizard. The file is then imported into the _libraries_ folder in the target project.
A folder with the name and ID of the imported project is created. All semantic and graphical data are copied into this folder.

!pics/importedLibrary.png!

h2. Notes about dependencies

When importing a MAR file a dependencies table is displayed :
* the main project that was exported in the MAR file. A check against the version is done if this project had already been imported.
* the projects that were imported in this main project before the MAR file was created. A check against the version is done in case these projects had been already imported into the target project either directly or by importing another project.

Let's illustrate this with an example.

h3. Initial <Core project> before export

!pics/coreProject.png!

h3. Initial target project <Project 1>

!pics/initialProject1.png!

h3. <Project 1> after importing <Core project>

!pics/importedLibrary.png!

A _libraries_ folder has been created and a folder for _Core project_ V1.0.0 has been created too.

h3. Initial target project <Project 2>

!pics/initialProject2.png!

h3. <Project 2> after importing <Project 1>

!pics/project2AfterImport.png!

A _libraries_ folder has been created and a folder for _Project 1_ V1.0.0 has been created too.
Inside the _Project 1-1.0.0_ we can see a _libraries_ folder for the previously imported _Core project_.