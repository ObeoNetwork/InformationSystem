__Copyright (c) 2008, 2022 Obeo -  All rights reserved. This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0__

@Authors@ StÃ©phane Thibaudeau
@Contact@ stephane.thibaudeau@obeo.fr

h1. ISD - Using modeling projects as libraries

Since IS Designer 1.8.

Allows to export a modeling project as a library file and import it into other modeling projects.

When a library is exported, the user chooses a version number. This version number is checked when importing the library into another modeling project. References to elements contained in the library are updated automatically.

This is useful to reuse modeling libraries among different projects, keeping track of the versions.

The library files have the .mar extension (standing for Modeling ARchive).

h2. Export a modeling project as a library

To export a modeling project as a library, use the _File > Export..._ menu and choose _Export modeling project as library_ in _IS Designer_ category.

!pics/ExportMenu.png!

The wizard's first page allows to define the following information:
* *Modeling Project* The project to be exported. Already selected if the user launched the import from a selected project.
* *Export directory* The destination folder. Can be located inside or outside an Eclipse project. The recommended way is to use an external location.

!pics/exportWizardPage1.png!

The second page allows to define the following information:
* *Project ID* The default value is the name of the exported project. (required)
* *Version* The version number of the library. Must be in the form M.m.p.qualifier where M, m and p are integers.
* *Previous version* A read only table is showing the previous versions that were exported from the same modeling project.
* *Comment* A description of the library version.
* *MAR filename* The library filename (ending with the .mar file extension). This value is recomputed when the Project ID or version is changed but can still be overridden if necessary.

!pics/exportWizardPage2.png!

When the wizard is completed, a MAR file is generated at the specified location. This file can then be imported into another modeling project.

h2. Import a library into a modeling project

To import a library file into a modeling project, use the _File > Import..._ menu and choose _Import library into modeling project_ in _IS Designer_ category.

!pics/importMenu.png!

The wizard allows to define :
* *Modeling project* The target project. Already selected if the import was launched from a selected project.
* *Import file* The MAR file to import

!pics/importWizard.png!

Once the MAR file has been selected, the following information are extracted from the file and displayed:
* *Project ID*
* *Version*
* *Creation date*
* *Comment*
* *Dependencies* The dependencies found in the MAR file.

The dependencies are displayed with a green or red tick indicating if the dependency is valid or not regarding the target project.
If all dependencies are valid, the user can finish the wizard. The file is then imported into a _libraries_ folder in the target project.
A folder with the name and ID of the imported project is created. All semantic and graphical data are copied into this folder.

!pics/importedLibrary.png!

h2. Notes about dependencies

When importing a MAR file the dependencies table shows:
* the main project that was exported in the MAR file. A check against the version is done if this project had already been imported.
* the projects that were imported in this main project before the MAR file was created. A check against the version is done in case these projects had been already imported into the target project either directly or by importing another project.

Here is an illustrative example :

h4. Initial <Core project> before export

!pics/coreProject.png!

h4. Initial target project <Project 1>

!pics/initialProject1.png!

h4. <Project 1> after importing <Core project>

!pics/importedLibrary.png!

A _libraries_ folder has been created and a folder for _Core project_ V1.0.0 has been created too.

h4. Initial target project <Project 2>

!pics/initialProject2.png!

h4. <Project 2> after importing <Project 1>

!pics/project2AfterImport.png!

A _libraries_ folder has been created and a folder for _Project 1_ V1.0.0 has been created too.
Inside the _Project 1-1.0.0_ we can see a _libraries_ folder for the previously imported _Core project_.