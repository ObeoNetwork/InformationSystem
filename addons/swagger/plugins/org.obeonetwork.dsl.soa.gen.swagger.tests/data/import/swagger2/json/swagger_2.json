{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https",
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API v3 targets v2 functionality with a few minor additions. The API is accessible via https://api.thetvdb.com and provides the following REST endpoints in JSON format.\n\n\nHow to use this API documentation\n----------------\n\n\nYou may browse the API routes without authentication, but if you wish to send requests to the API and see response data, then you must authenticate.\n1. Obtain a JWT token by `POST`ing  to the `/login` route in the `Authentication` section with your API key and credentials.\n1. Paste the JWT token from the response into the \"JWT Token\" field at the top of the page and click the 'Add Token' button.\n\n\nYou will now be able to use the remaining routes to send requests to the API and get a response.\n\n\nLanguage Selection\n----------------\n\n\nLanguage selection is done via the `Accept-Language` header. At the moment, you may only pass one language abbreviation in the header at a time. Valid language abbreviations can be found at the `/languages` route..\n\n\nAuthentication\n----------------\n\n\nAuthentication to use the API is similar to the How-to section above. Users must `POST` to the `/login` route with their API key and credentials in the following format in order to obtain a JWT token.\n\n`{\"apikey\":\"APIKEY\",\"username\":\"USERNAME\",\"userkey\":\"USERKEY\"}`\n\nNote that the username and key are ONLY required for the `/user` routes. The user's key is labled `Account Identifier` in the account section of the main site.\nThe token is then used in all subsequent requests by providing it in the `Authorization` header. The header will look like: `Authorization: Bearer \u003cyourJWTtoken\u003e`. Currently, the token expires after 24 hours. You can `GET` the `/refresh_token` route to extend that expiration date.\n\n\nVersioning\n----------------\n\n\nYou may request a different version of the API by including an `Accept` header in your request with the following format: `Accept:application/vnd.thetvdb.v$VERSION`. This documentation automatically uses the version seen at the top and bottom of the page.",
    "title": "TheTVDB API v3",
    "version": "3.0.0"
  },
  "basePath": "/",
  "paths": {
    "/episodes/{id}": {
      "get": {
        "security": [
          {
            "jwtToken": []
          }
        ],
        "description": "Returns the full information for a given episode id. __Deprecation Warning:__ The _director_ key will be deprecated in favor of the new _directors_ key in a future release.",
        "tags": [
          "Episodes"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/episodeId"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of query keys as strings",
            "schema": {
              "$ref": "#/definitions/EpisodeRecordData"
            }
          },
          "401": {
            "description": "Returned if your JWT token is missing or expired",
            "schema": {
              "$ref": "#/definitions/NotAuthorized"
            }
          },
          "404": {
            "description": "Returned if the given episode ID does not exist.",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/languages": {
      "get": {
        "security": [
          {
            "jwtToken": []
          }
        ],
        "description": "All available languages. These language abbreviations can be used in the `Accept-Language` header for routes that return translation records.",
        "tags": [
          "Languages"
        ],
        "responses": {
          "200": {
            "description": "An array of language objects.",
            "schema": {
              "$ref": "#/definitions/LanguageData"
            }
          },
          "401": {
            "description": "Returned if your JWT token is missing or expired",
            "schema": {
              "$ref": "#/definitions/NotAuthorized"
            }
          }
        }
      }
    },
    "/languages/{id}": {
      "get": {
        "security": [
          {
            "jwtToken": []
          }
        ],
        "description": "Information about a particular language, given the language ID.",
        "tags": [
          "Languages"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/languageId"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of language objects.",
            "schema": {
              "$ref": "#/definitions/Language"
            }
          },
          "401": {
            "description": "Returned if your JWT token is missing or expired",
            "schema": {
              "$ref": "#/definitions/NotAuthorized"
            }
          },
          "404": {
            "description": "Returned if the given language ID does not exist.",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "description": "Returns a session token to be included in the rest of the requests. Note that API key authentication is required for all subsequent requests and user auth is required for routes in the `User` section",
        "tags": [
          "Authentication"
        ],
        "parameters": [
          {
            "description": "JSON string containing your authentication details.",
            "name": "Authentication string",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Auth"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a JWT token for use with the rest of the API routes",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          },
          "401": {
            "description": "Invalid credentials and/or API token",
            "schema": {
              "$ref": "#/definitions/NotAuthorized"
            }
          }
        }
      }
    },
    "/movies/{id}": {
      "get": {
        "security": [
          {
            "jwtToken": []
          }
        ],
        "description": "Returns a movies records that contains all information known about a particular movies id.",
        "tags": [
          "Movies"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/movieId"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "A movie record.",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          },
          "401": {
            "description": "Returned if your JWT token is missing or expired",
            "schema": {
              "$ref": "#/definitions/NotAuthorized"
            }
          },
          "404": {
            "description": "Returned if the given series ID does not exist",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/movieupdates": {
      "get": {
        "security": [
          {
            "jwtToken": []
          }
        ],
        "description": "Returns all movies ids updated since a given timestamp.",
        "tags": [
          "Movies"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/since"
          }
        ],
        "responses": {
          "200": {
            "description": "All movies ids updated since a given date",
            "schema": {
              "$ref": "#/definitions/UpdatedMovies"
            }
          },
          "401": {
            "description": "Returned if your JWT token is missing or expired",
            "schema": {
              "$ref": "#/definitions/NotAuthorized"
            }
          },
          "405": {
            "description": "Missing query params are given",
            "schema": {
              "$ref": "#/definitions/InvalidQueryParams"
            }
          },
          "422": {
            "description": "Invalid query params provided",
            "schema": {
              "$ref": "#/definitions/InvalidQueryParams"
            }
          }
        }
      }
    },
    "/refresh_token": {
      "get": {
        "security": [
          {
            "jwtToken": []
          }
        ],
        "description": "Refreshes your current, valid JWT token and returns a new token. Hit this route so that you do not have to post to `/login` with your API key and credentials once you have already been authenticated.",
        "tags": [
          "Authentication"
        ],
        "responses": {
          "200": {
            "description": "Returns a new token to use in your subsequent requests",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          },
          "401": {
            "description": "Returned if your JWT token is missing or expired",
            "schema": {
              "$ref": "#/definitions/NotAuthorized"
            }
          }
        }
      }
    },
    "/search/series": {
      "get": {
        "security": [
          {
            "jwtToken": []
          }
        ],
        "description": "Allows the user to search for a series based on the following parameters.",
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/seriesSearchName"
          },
          {
            "$ref": "#/parameters/imdbId"
          },
          {
            "$ref": "#/parameters/zap2itId"
          },
          {
            "$ref": "#/parameters/slug"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of results that match the provided query.",
            "schema": {
              "$ref": "#/definitions/SeriesSearchResults"
            }
          },
          "401": {
            "description": "Returned if your JWT token is missing or expired",
            "schema": {
              "$ref": "#/definitions/NotAuthorized"
            }
          },
          "404": {
            "description": "Returned if no records are found that match your query.",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/search/series/params": {
      "get": {
        "security": [
          {
            "jwtToken": []
          }
        ],
        "description": "Returns an array of parameters to query by in the `/search/series` route.",
        "tags": [
          "Search"
        ],
        "responses": {
          "200": {
            "description": "An array of query keys as strings",
            "schema": {
              "$ref": "#/definitions/EpisodeDataQueryParams"
            }
          },
          "401": {
            "description": "Returned if your JWT token is missing or expired",
            "schema": {
              "$ref": "#/definitions/NotAuthorized"
            }
          }
        }
      }
    },
    "/series/{id}": {
      "get": {
        "security": [
          {
            "jwtToken": []
          }
        ],
        "description": "Returns a series records that contains all information known about a particular series id.",
        "tags": [
          "Series"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/seriesId"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "A series record.",
            "schema": {
              "$ref": "#/definitions/SeriesData"
            }
          },
          "401": {
            "description": "Returned if your JWT token is missing or expired",
            "schema": {
              "$ref": "#/definitions/NotAuthorized"
            }
          },
          "404": {
            "description": "Returned if the given series ID does not exist",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      },
      "head": {
        "security": [
          {
            "jwtToken": []
          }
        ],
        "description": "Returns header information only about the given series ID.",
        "tags": [
          "Series"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/seriesId"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "Series header information. Good for getting the Last-Updated header to find out when the series was last modified."
          },
          "401": {
            "description": "Returned if your JWT token is missing or expired",
            "schema": {
              "$ref": "#/definitions/NotAuthorized"
            }
          },
          "404": {
            "description": "Returned if the given series ID does not exist",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/series/{id}/actors": {
      "get": {
        "security": [
          {
            "jwtToken": []
          }
        ],
        "description": "Returns actors for the given series id",
        "tags": [
          "Series"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/seriesId"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of actor objects for the given series id.",
            "schema": {
              "$ref": "#/definitions/SeriesActors"
            }
          },
          "401": {
            "description": "Returned if your JWT token is missing or expired",
            "schema": {
              "$ref": "#/definitions/NotAuthorized"
            }
          },
          "404": {
            "description": "Returned if the given series ID does not exist",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/series/{id}/episodes": {
      "get": {
        "security": [
          {
            "jwtToken": []
          }
        ],
        "description": "All episodes for a given series. Paginated with 100 results per page.",
        "tags": [
          "Series"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/seriesId"
          },
          {
            "$ref": "#/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of episode objects for the given series id.",
            "schema": {
              "$ref": "#/definitions/SeriesEpisodes"
            }
          },
          "401": {
            "description": "Returned if your JWT token is missing or expired",
            "schema": {
              "$ref": "#/definitions/NotAuthorized"
            }
          },
          "404": {
            "description": "Returned if the given series ID does not exist",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/series/{id}/episodes/query": {
      "get": {
        "security": [
          {
            "jwtToken": []
          }
        ],
        "description": "This route allows the user to query against episodes for the given series. The response is a paginated array of episode records.",
        "tags": [
          "Series"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/seriesId"
          },
          {
            "$ref": "#/parameters/absoluteNumber"
          },
          {
            "$ref": "#/parameters/airedSeason"
          },
          {
            "$ref": "#/parameters/airedEpisode"
          },
          {
            "$ref": "#/parameters/dvdSeason"
          },
          {
            "$ref": "#/parameters/dvdEpisode"
          },
          {
            "$ref": "#/parameters/imdbId"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of basic Episode results that matched the query",
            "schema": {
              "$ref": "#/definitions/SeriesEpisodesQuery"
            }
          },
          "401": {
            "description": "Returned if your JWT token is missing or expired",
            "schema": {
              "$ref": "#/definitions/NotAuthorized"
            }
          },
          "404": {
            "description": "Returned if the given series ID does not exist or the query returns no results.",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/series/{id}/episodes/query/params": {
      "get": {
        "security": [
          {
            "jwtToken": []
          }
        ],
        "description": "Returns the allowed query keys for the `/series/{id}/episodes/query` route",
        "tags": [
          "Series"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/seriesId"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of query keys as strings",
            "schema": {
              "$ref": "#/definitions/SeriesEpisodesQueryParams"
            }
          },
          "401": {
            "description": "Returned if your JWT token is missing or expired",
            "schema": {
              "$ref": "#/definitions/NotAuthorized"
            }
          },
          "404": {
            "description": "Returned if the given series ID does not exist or the query returns no results.",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/series/{id}/episodes/summary": {
      "get": {
        "security": [
          {
            "jwtToken": []
          }
        ],
        "description": "Returns a summary of the episodes and seasons available for the series.\n\n__Note__: Season \"0\" is for all episodes that are considered to be specials.",
        "tags": [
          "Series"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/seriesId"
          }
        ],
        "responses": {
          "200": {
            "description": "A summary of the episodes and seasons avaialable for the given series.",
            "schema": {
              "$ref": "#/definitions/SeriesEpisodesSummary"
            }
          },
          "401": {
            "description": "Returned if your JWT token is missing or expired",
            "schema": {
              "$ref": "#/definitions/NotAuthorized"
            }
          },
          "404": {
            "description": "Returned if the given series ID does not exist",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/series/{id}/filter": {
      "get": {
        "security": [
          {
            "jwtToken": []
          }
        ],
        "description": "Returns a series records, filtered by the supplied comma-separated list of keys. Query keys can be found at the `/series/{id}/filter/params` route.",
        "tags": [
          "Series"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/seriesId"
          },
          {
            "$ref": "#/parameters/filterKeys"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "A filtered series record",
            "schema": {
              "$ref": "#/definitions/SeriesData"
            }
          },
          "401": {
            "description": "Returned if your JWT token is missing or expired",
            "schema": {
              "$ref": "#/definitions/NotAuthorized"
            }
          },
          "404": {
            "description": "Returned if the given series ID does not exist",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/series/{id}/filter/params": {
      "get": {
        "security": [
          {
            "jwtToken": []
          }
        ],
        "description": "Returns the list of keys available for the `/series/{id}/filter` route",
        "tags": [
          "Series"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/seriesId"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of keys to filter by",
            "schema": {
              "$ref": "#/definitions/FilterKeys"
            }
          },
          "401": {
            "description": "Returned if your JWT token is missing or expired",
            "schema": {
              "$ref": "#/definitions/NotAuthorized"
            }
          },
          "404": {
            "description": "Returned if the given series ID does not exist",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/series/{id}/images": {
      "get": {
        "security": [
          {
            "jwtToken": []
          }
        ],
        "description": "Returns a summary of the images for a particular series",
        "tags": [
          "Series"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/seriesId"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "A summary of the image types and counts available for the given series.",
            "schema": {
              "$ref": "#/definitions/SeriesImagesCounts"
            }
          },
          "401": {
            "description": "Returned if your JWT token is missing or expired",
            "schema": {
              "$ref": "#/definitions/NotAuthorized"
            }
          },
          "404": {
            "description": "Returned if the given series ID does not exist",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/series/{id}/images/query": {
      "get": {
        "security": [
          {
            "jwtToken": []
          }
        ],
        "description": "Query images for the given series ID.",
        "tags": [
          "Series"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/seriesId"
          },
          {
            "$ref": "#/parameters/keyType"
          },
          {
            "$ref": "#/parameters/resolution"
          },
          {
            "$ref": "#/parameters/subKey"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of basic Episode results that matched the query",
            "schema": {
              "$ref": "#/definitions/SeriesImageQueryResults"
            }
          },
          "401": {
            "description": "Returned if your JWT token is missing or expired",
            "schema": {
              "$ref": "#/definitions/NotAuthorized"
            }
          },
          "404": {
            "description": "Returned if the given series ID does not exist or the query returns no results.",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/series/{id}/images/query/params": {
      "get": {
        "security": [
          {
            "jwtToken": []
          }
        ],
        "description": "Returns the allowed query keys for the `/series/{id}/images/query` route. Contains a parameter record for each unique `keyType`, listing values that will return results.",
        "tags": [
          "Series"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/seriesId"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of query keys as strings",
            "schema": {
              "$ref": "#/definitions/SeriesImagesQueryParams"
            }
          },
          "401": {
            "description": "Returned if your JWT token is missing or expired",
            "schema": {
              "$ref": "#/definitions/NotAuthorized"
            }
          },
          "404": {
            "description": "Returned if the given series ID does not exist or the query returns no results.",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/updated/query": {
      "get": {
        "security": [
          {
            "jwtToken": []
          }
        ],
        "description": "Returns an array of series that have changed in a maximum of one week blocks since the provided `fromTime`.\n\n\nThe user may specify a `toTime` to grab results for less than a week. Any timespan larger than a week will be reduced down to one week automatically.",
        "tags": [
          "Updates"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/fromTime"
          },
          {
            "$ref": "#/parameters/toTime"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Update objects that match the given timeframe.",
            "schema": {
              "$ref": "#/definitions/UpdateData"
            }
          },
          "401": {
            "description": "Returned if your JWT token is missing or expired",
            "schema": {
              "$ref": "#/definitions/NotAuthorized"
            }
          },
          "404": {
            "description": "Returned if no records exist for the given timespan",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/updated/query/params": {
      "get": {
        "security": [
          {
            "jwtToken": []
          }
        ],
        "description": "Returns an array of valid query keys for the `/updated/query/params` route.",
        "tags": [
          "Updates"
        ],
        "responses": {
          "200": {
            "description": "An array of Update objects that match the given timeframe.",
            "schema": {
              "$ref": "#/definitions/UpdateDataQueryParams"
            }
          },
          "401": {
            "description": "Returned if your JWT token is missing or expired",
            "schema": {
              "$ref": "#/definitions/NotAuthorized"
            }
          },
          "404": {
            "description": "Returned if no records exist for the given timespan",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "security": [
          {
            "jwtToken": []
          }
        ],
        "description": "Returns basic information about the currently authenticated user.",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "User information.",
            "schema": {
              "$ref": "#/definitions/UserData"
            }
          },
          "401": {
            "description": "Returned if your JWT token is missing or expired",
            "schema": {
              "$ref": "#/definitions/NotAuthorized"
            }
          },
          "404": {
            "description": "Returned if no information exists for the current user",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/user/favorites": {
      "get": {
        "security": [
          {
            "jwtToken": []
          }
        ],
        "description": "Returns an array of favorite series for a given user, will be a blank array if no favorites exist.",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "User favorites.",
            "schema": {
              "$ref": "#/definitions/UserFavoritesData"
            }
          },
          "401": {
            "description": "Returned if your JWT token is missing or expired",
            "schema": {
              "$ref": "#/definitions/NotAuthorized"
            }
          },
          "404": {
            "description": "Returned if no information exists for the current user",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/user/favorites/{id}": {
      "put": {
        "security": [
          {
            "jwtToken": []
          }
        ],
        "description": "Adds the supplied series ID to the user’s favorite’s list and returns the updated list.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/seriesId"
          }
        ],
        "responses": {
          "200": {
            "description": "List of user favorites.",
            "schema": {
              "$ref": "#/definitions/UserFavoritesData"
            }
          },
          "401": {
            "description": "Returned if your JWT token is missing or expired",
            "schema": {
              "$ref": "#/definitions/NotAuthorized"
            }
          },
          "404": {
            "description": "Returned if no information exists for the current user",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "409": {
            "description": "Returned if requested record could not be updated",
            "schema": {
              "$ref": "#/definitions/Conflict"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "jwtToken": []
          }
        ],
        "description": "Deletes the given series ID from the user’s favorite’s list and returns the updated list.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/seriesId"
          }
        ],
        "responses": {
          "200": {
            "description": "List of user favorites.",
            "schema": {
              "$ref": "#/definitions/UserFavoritesData"
            }
          },
          "401": {
            "description": "Returned if your JWT token is missing or expired",
            "schema": {
              "$ref": "#/definitions/NotAuthorized"
            }
          },
          "404": {
            "description": "Returned if no information exists for the current user",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "409": {
            "description": "Returned if requested record could not be deleted",
            "schema": {
              "$ref": "#/definitions/Conflict"
            }
          }
        }
      }
    },
    "/user/ratings": {
      "get": {
        "security": [
          {
            "jwtToken": []
          }
        ],
        "description": "Returns an array of ratings for the given user.",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Array of user ratings.",
            "schema": {
              "$ref": "#/definitions/UserRatingsData"
            }
          },
          "401": {
            "description": "Returned if your JWT token is missing or expired",
            "schema": {
              "$ref": "#/definitions/NotAuthorized"
            }
          },
          "404": {
            "description": "Returned if no information exists for the current user",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/user/ratings/query": {
      "get": {
        "security": [
          {
            "jwtToken": []
          }
        ],
        "description": "Returns an array of ratings for a given user that match the query.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/itemTypeNR"
          }
        ],
        "responses": {
          "200": {
            "description": "List of user ratings that match the given query.",
            "schema": {
              "$ref": "#/definitions/UserRatingsData"
            }
          },
          "401": {
            "description": "Returned if your JWT token is missing or expired",
            "schema": {
              "$ref": "#/definitions/NotAuthorized"
            }
          },
          "404": {
            "description": "Returned if no information exists for the current user",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/user/ratings/query/params": {
      "get": {
        "security": [
          {
            "jwtToken": []
          }
        ],
        "description": "Returns a list of query params for use in the `/user/ratings/query` route.",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Parameters to use for querying.",
            "schema": {
              "$ref": "#/definitions/UserRatingsQueryParams"
            }
          },
          "401": {
            "description": "Returned if your JWT token is missing or expired",
            "schema": {
              "$ref": "#/definitions/NotAuthorized"
            }
          },
          "404": {
            "description": "Returned if no information exists for the current user",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/user/ratings/{itemType}/{itemId}": {
      "delete": {
        "security": [
          {
            "jwtToken": []
          }
        ],
        "description": "This route deletes a given rating of a given type.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/itemType"
          },
          {
            "$ref": "#/parameters/itemId"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns OK if the delete was successful",
            "schema": {
              "$ref": "#/definitions/UserRatingsDataNoLinksEmptyArray"
            }
          },
          "401": {
            "description": "Returned if your JWT token is missing or expired",
            "schema": {
              "$ref": "#/definitions/NotAuthorized"
            }
          },
          "404": {
            "description": "Returned if no rating is found that matches your given parameters",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/user/ratings/{itemType}/{itemId}/{itemRating}": {
      "put": {
        "security": [
          {
            "jwtToken": []
          }
        ],
        "description": "This route updates a given rating of a given type.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/itemType"
          },
          {
            "$ref": "#/parameters/itemId"
          },
          {
            "$ref": "#/parameters/itemRating"
          }
        ],
        "responses": {
          "200": {
            "description": "Update OK if the update was successful",
            "schema": {
              "$ref": "#/definitions/UserRatingsDataNoLinks"
            }
          },
          "401": {
            "description": "Returned if your JWT token is missing or expired",
            "schema": {
              "$ref": "#/definitions/NotAuthorized"
            }
          },
          "404": {
            "description": "Returned if no rating is found that matches your given parameters",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Auth": {
      "properties": {
        "apikey": {
          "type": "string"
        },
        "userkey": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "BasicEpisode": {
      "type": "object",
      "properties": {
        "absoluteNumber": {
          "type": "integer"
        },
        "airedEpisodeNumber": {
          "type": "integer"
        },
        "airedSeason": {
          "type": "integer"
        },
        "dvdEpisodeNumber": {
          "type": "integer"
        },
        "dvdSeason": {
          "type": "integer"
        },
        "episodeName": {
          "type": "string"
        },
        "firstAired": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "language": {
          "$ref": "#/definitions/EpisodeLanguageInfo"
        },
        "lastUpdated": {
          "type": "integer"
        },
        "overview": {
          "type": "string"
        }
      }
    },
    "Conflict": {
      "properties": {
        "Error": {
          "type": "string",
          "default": "Conflict"
        }
      }
    },
    "Episode": {
      "type": "object",
      "properties": {
        "absoluteNumber": {
          "type": "integer"
        },
        "airedEpisodeNumber": {
          "type": "integer"
        },
        "airedSeason": {
          "type": "integer"
        },
        "airsAfterSeason": {
          "type": "integer"
        },
        "airsBeforeEpisode": {
          "type": "integer"
        },
        "airsBeforeSeason": {
          "type": "integer"
        },
        "director": {
          "type": "string"
        },
        "directors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dvdChapter": {
          "type": "number"
        },
        "dvdDiscid": {
          "type": "string"
        },
        "dvdEpisodeNumber": {
          "type": "number"
        },
        "dvdSeason": {
          "type": "integer"
        },
        "episodeName": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "firstAired": {
          "type": "string"
        },
        "guestStars": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer"
        },
        "imdbId": {
          "type": "string"
        },
        "lastUpdated": {
          "type": "integer"
        },
        "lastUpdatedBy": {
          "type": "string"
        },
        "overview": {
          "type": "string"
        },
        "productionCode": {
          "type": "string"
        },
        "seriesId": {
          "type": "string"
        },
        "showUrl": {
          "type": "string"
        },
        "siteRating": {
          "type": "number"
        },
        "siteRatingCount": {
          "type": "integer"
        },
        "thumbAdded": {
          "type": "string"
        },
        "thumbAuthor": {
          "type": "integer"
        },
        "thumbHeight": {
          "type": "string"
        },
        "thumbWidth": {
          "type": "string"
        },
        "writers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "EpisodeDataQueryParams": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "EpisodeLanguageInfo": {
      "type": "object",
      "properties": {
        "episodeName": {
          "type": "string"
        },
        "overview": {
          "type": "string"
        }
      }
    },
    "EpisodeRecordData": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Episode"
        },
        "errors": {
          "$ref": "#/definitions/JSONErrors"
        }
      }
    },
    "FilterKeys": {
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "InvalidQueryParams": {
      "properties": {
        "Error": {
          "type": "string",
          "default": "No valid query params given"
        }
      }
    },
    "JSONErrors": {
      "type": "object",
      "properties": {
        "invalidFilters": {
          "description": "Invalid filters passed to route",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "invalidLanguage": {
          "description": "Invalid language or translation missing",
          "type": "string"
        },
        "invalidQueryParams": {
          "description": "Invalid query params passed to route",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Language": {
      "type": "object",
      "properties": {
        "abbreviation": {
          "type": "string"
        },
        "englishName": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "LanguageData": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Language"
          }
        }
      }
    },
    "Links": {
      "type": "object",
      "properties": {
        "first": {
          "type": "integer"
        },
        "last": {
          "type": "integer"
        },
        "next": {
          "type": "integer"
        },
        "previous": {
          "type": "integer"
        }
      }
    },
    "Movie": {
      "properties": {
        "artworks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MovieArtwork"
          }
        },
        "genres": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MovieGenre"
          }
        },
        "id": {
          "type": "integer"
        },
        "people": {
          "properties": {
            "actors": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MoviePeople"
              }
            },
            "directors": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MoviePeople"
              }
            },
            "producers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MoviePeople"
              }
            },
            "writers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MoviePeople"
              }
            }
          }
        },
        "release_dates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MovieReleaseDate"
          }
        },
        "remoteids": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MovieRemoteId"
          }
        },
        "runtime": {
          "type": "integer"
        },
        "trailers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MovieTrailer"
          }
        },
        "translations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MovieTranslation"
          }
        },
        "url": {
          "type": "string"
        }
      }
    },
    "MovieArtwork": {
      "properties": {
        "artwork_type": {
          "type": "string"
        },
        "height": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "is_primary": {
          "type": "boolean"
        },
        "tags": {
          "type": "string"
        },
        "thumb_url": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "width": {
          "type": "integer"
        }
      }
    },
    "MovieGenre": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "MoviePeople": {
      "properties": {
        "id": {
          "type": "string"
        },
        "imdb_id": {
          "type": "string"
        },
        "is_featured": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "people_facebook": {
          "type": "string"
        },
        "people_id": {
          "type": "string"
        },
        "people_image": {
          "type": "string"
        },
        "people_instagram": {
          "type": "string"
        },
        "people_twitter": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "role_image": {
          "type": "string"
        }
      }
    },
    "MovieReleaseDate": {
      "properties": {
        "country": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "MovieRemoteId": {
      "properties": {
        "id": {
          "type": "string"
        },
        "source_id": {
          "type": "integer"
        },
        "source_name": {
          "type": "string"
        },
        "source_url": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "MovieTrailer": {
      "properties": {
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "MovieTranslation": {
      "properties": {
        "is_primary": {
          "type": "boolean"
        },
        "language_code": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "overview": {
          "type": "string"
        },
        "tagline": {
          "type": "string"
        }
      }
    },
    "NotAuthorized": {
      "properties": {
        "Error": {
          "type": "string",
          "default": "Not Authorized"
        }
      }
    },
    "NotFound": {
      "properties": {
        "Error": {
          "type": "string",
          "default": "Not Found"
        }
      }
    },
    "Series": {
      "type": "object",
      "properties": {
        "added": {
          "type": "string"
        },
        "airsDayOfWeek": {
          "type": "string"
        },
        "airsTime": {
          "type": "string"
        },
        "aliases": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "banner": {
          "type": "string"
        },
        "firstAired": {
          "type": "string"
        },
        "genre": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer"
        },
        "imdbId": {
          "type": "string"
        },
        "lastUpdated": {
          "type": "integer"
        },
        "network": {
          "type": "string"
        },
        "networkId": {
          "type": "string"
        },
        "overview": {
          "type": "string"
        },
        "rating": {
          "type": "string"
        },
        "runtime": {
          "type": "string"
        },
        "seriesId": {
          "type": "string"
        },
        "seriesName": {
          "type": "string"
        },
        "siteRating": {
          "type": "number"
        },
        "siteRatingCount": {
          "type": "integer"
        },
        "slug": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "zap2itId": {
          "type": "string"
        }
      }
    },
    "SeriesActors": {
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SeriesActorsData"
          }
        },
        "errors": {
          "$ref": "#/definitions/JSONErrors"
        }
      }
    },
    "SeriesActorsData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "image": {
          "type": "string"
        },
        "imageAdded": {
          "type": "string"
        },
        "imageAuthor": {
          "type": "integer"
        },
        "lastUpdated": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "seriesId": {
          "type": "integer"
        },
        "sortOrder": {
          "type": "integer"
        }
      }
    },
    "SeriesData": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Series"
        },
        "errors": {
          "description": "Informative error messages (optional)",
          "$ref": "#/definitions/JSONErrors"
        }
      }
    },
    "SeriesEpisodes": {
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Episode"
          }
        },
        "errors": {
          "$ref": "#/definitions/JSONErrors"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "SeriesEpisodesQuery": {
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Episode"
          }
        },
        "errors": {
          "$ref": "#/definitions/JSONErrors"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "SeriesEpisodesQueryParams": {
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SeriesEpisodesSummary": {
      "type": "object",
      "properties": {
        "airedEpisodes": {
          "description": "Number of all aired episodes for this series",
          "type": "string"
        },
        "airedSeasons": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dvdEpisodes": {
          "description": "Number of all dvd episodes for this series",
          "type": "string"
        },
        "dvdSeasons": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SeriesImageQueryResult": {
      "type": "object",
      "properties": {
        "fileName": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "keyType": {
          "type": "string"
        },
        "languageId": {
          "type": "integer"
        },
        "ratingsInfo": {
          "type": "object",
          "properties": {
            "average": {
              "description": "Average rating for the given record.",
              "type": "number"
            },
            "count": {
              "description": "Number of ratings for the given record.",
              "type": "integer"
            }
          }
        },
        "resolution": {
          "type": "string"
        },
        "subKey": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string"
        }
      }
    },
    "SeriesImageQueryResults": {
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SeriesImageQueryResult"
          }
        },
        "errors": {
          "$ref": "#/definitions/JSONErrors"
        }
      }
    },
    "SeriesImagesCount": {
      "type": "object",
      "properties": {
        "fanart": {
          "type": "integer"
        },
        "poster": {
          "type": "integer"
        },
        "season": {
          "type": "integer"
        },
        "seasonwide": {
          "type": "integer"
        },
        "series": {
          "type": "integer"
        }
      }
    },
    "SeriesImagesCounts": {
      "properties": {
        "data": {
          "$ref": "#/definitions/SeriesImagesCount"
        }
      }
    },
    "SeriesImagesQueryParam": {
      "properties": {
        "keyType": {
          "type": "string"
        },
        "languageId": {
          "type": "string"
        },
        "resolution": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subKey": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SeriesImagesQueryParams": {
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SeriesImagesQueryParam"
          }
        }
      }
    },
    "SeriesSearchResult": {
      "type": "object",
      "properties": {
        "aliases": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "banner": {
          "type": "string"
        },
        "firstAired": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "image": {
          "type": "string"
        },
        "network": {
          "type": "string"
        },
        "overview": {
          "type": "string"
        },
        "poster": {
          "type": "string"
        },
        "seriesName": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "SeriesSearchResults": {
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SeriesSearchResult"
          }
        }
      }
    },
    "Token": {
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "Update": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "lastUpdated": {
          "type": "integer"
        }
      }
    },
    "UpdateData": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Update"
          }
        },
        "errors": {
          "$ref": "#/definitions/JSONErrors"
        }
      }
    },
    "UpdateDataQueryParams": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UpdatedMovies": {
      "properties": {
        "movies": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "favoritesDisplaymode": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        }
      }
    },
    "UserData": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "UserFavorites": {
      "type": "object",
      "properties": {
        "favorites": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UserFavoritesData": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/UserFavorites"
        },
        "errors": {
          "$ref": "#/definitions/JSONErrors"
        }
      }
    },
    "UserRatings": {
      "type": "object",
      "properties": {
        "rating": {
          "type": "integer"
        },
        "ratingItemId": {
          "type": "integer"
        },
        "ratingType": {
          "type": "string"
        }
      }
    },
    "UserRatingsData": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserRatings"
          }
        },
        "errors": {
          "$ref": "#/definitions/JSONErrors"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "UserRatingsDataNoLinks": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserRatings"
          }
        }
      }
    },
    "UserRatingsDataNoLinksEmptyArray": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {}
        }
      }
    },
    "UserRatingsQueryParams": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "parameters": {
    "Accept-Language": {
      "type": "string",
      "description": "Records are returned with the some fields in the desired language, if it exists. If there is no translation for the given language, then the record is still returned but with empty values for the translated fields.",
      "name": "Accept-Language",
      "in": "header"
    },
    "absoluteNumber": {
      "type": "string",
      "description": "Absolute number of the episode",
      "name": "absoluteNumber",
      "in": "query"
    },
    "airedEpisode": {
      "type": "string",
      "description": "Aired episode number",
      "name": "airedEpisode",
      "in": "query"
    },
    "airedSeason": {
      "type": "string",
      "description": "Aired season number",
      "name": "airedSeason",
      "in": "query"
    },
    "dvdEpisode": {
      "type": "string",
      "description": "DVD episode number",
      "name": "dvdEpisode",
      "in": "query"
    },
    "dvdSeason": {
      "type": "string",
      "description": "DVD season number",
      "name": "dvdSeason",
      "in": "query"
    },
    "episodeId": {
      "type": "integer",
      "format": "int64",
      "description": "ID of the episode",
      "name": "id",
      "in": "path",
      "required": true
    },
    "filterKeys": {
      "type": "string",
      "description": "Comma-separated list of keys to filter by",
      "name": "keys",
      "in": "query",
      "required": true
    },
    "fromTime": {
      "type": "string",
      "description": "Epoch time to start your date range.",
      "name": "fromTime",
      "in": "query",
      "required": true
    },
    "imdbId": {
      "type": "string",
      "description": "IMDB id of the series",
      "name": "imdbId",
      "in": "query"
    },
    "itemId": {
      "type": "integer",
      "format": "int64",
      "description": "ID of the ratings record that you wish to modify",
      "name": "itemId",
      "in": "path",
      "required": true
    },
    "itemRating": {
      "type": "integer",
      "format": "int64",
      "description": "The updated rating number",
      "name": "itemRating",
      "in": "path",
      "required": true
    },
    "itemType": {
      "type": "string",
      "format": "string",
      "description": "Item to update. Can be either 'series', 'episode', or 'image'",
      "name": "itemType",
      "in": "path",
      "required": true
    },
    "itemTypeNR": {
      "type": "string",
      "format": "string",
      "description": "Item to query. Can be either 'series', 'episode', or 'banner'",
      "name": "itemType",
      "in": "query"
    },
    "keyType": {
      "type": "string",
      "description": "Type of image you're querying for (fanart, poster, etc. See ../images/query/params for more details).",
      "name": "keyType",
      "in": "query"
    },
    "languageId": {
      "type": "string",
      "description": "ID of the language",
      "name": "id",
      "in": "path",
      "required": true
    },
    "movieId": {
      "type": "integer",
      "format": "int64",
      "description": "ID of the movie",
      "name": "id",
      "in": "path",
      "required": true
    },
    "page": {
      "type": "string",
      "description": "Page of results to fetch. Defaults to page 1 if not provided.",
      "name": "page",
      "in": "query"
    },
    "resolution": {
      "type": "string",
      "description": "Resolution to filter by (1280x1024, for example)",
      "name": "resolution",
      "in": "query"
    },
    "seriesId": {
      "type": "integer",
      "format": "int64",
      "description": "ID of the series",
      "name": "id",
      "in": "path",
      "required": true
    },
    "seriesSearchName": {
      "type": "string",
      "description": "Name of the series to search for.",
      "name": "name",
      "in": "query"
    },
    "since": {
      "type": "string",
      "description": "Epoch time to start your date range.",
      "name": "since",
      "in": "query",
      "required": true
    },
    "slug": {
      "type": "string",
      "description": "Slug from site URL of series (https://www.thetvdb.com/series/$SLUG)",
      "name": "slug",
      "in": "query"
    },
    "subKey": {
      "type": "string",
      "description": "Subkey for the above query keys. See /series/{id}/images/query/params for more information",
      "name": "subKey",
      "in": "query"
    },
    "toTime": {
      "type": "string",
      "description": "Epoch time to end your date range. Must be one week from `fromTime`.",
      "name": "toTime",
      "in": "query"
    },
    "zap2itId": {
      "type": "string",
      "description": "Zap2it ID of the series to search for.",
      "name": "zap2itId",
      "in": "query"
    }
  },
  "securityDefinitions": {
    "jwtToken": {
      "description": "JWT token prefixed with \"Bearer \"",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "tags": [
    {
      "description": "Obtaining and refreshing your JWT token",
      "name": "Authentication"
    },
    {
      "description": "Information about a specific episode",
      "name": "Episodes"
    },
    {
      "description": "Information about a specific series",
      "name": "Series"
    },
    {
      "description": "Search for a particular series",
      "name": "Search"
    },
    {
      "description": "Series that have been recently updated.",
      "name": "Updates"
    },
    {
      "description": "Routes for handling user data.",
      "name": "Users"
    },
    {
      "description": "Available languages and information",
      "name": "Languages"
    },
    {
      "description": "Information about a specific movie",
      "name": "Movies"
    }
  ]
}