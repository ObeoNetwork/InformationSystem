__(c) Obeo 2012, 2016 -  All rights reserved. This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0__

@Authors@ Stéphane Thibaudeau
@Contact@ stephane.thibaudeau@obeo.fr

h1. Obeonetwork - Base de données et Scaffolding

h2. Vue d'ensemble

Le _Scaffolding_ est une technique popularisée par le socle de développement _Ruby on Rails_ qui vise à produire des livrables (code, modèle, documentation) à partir des informations structurelles d'une base de données.
En l’occurrence, l'outillage de scaffolding IS Designer propose les fonctionnalités suivantes : 
* un module capable d'extraire les informations structurelles d'une base de données relationnelles existantes (MySQL, Oracle, PostgreSQL, SQL Server ou H2) et de produire un modèle EMF conforme au méta-modèle _Database_ 
* un modeleur de base de données, basé sur Obeo Designer, permettant de réaliser des Modèles Physique et Logique de Données.
* un module de comparaison de deux modèles _Database_ et un générateur de scripts SQL capable de déduire les instructions SQL permettant la mise à jour de la base de données.
* un ensemble de transformationq permettant d'automatiser le passage d'un modèle physique à logique, puis d'un modèle logique à un modèle d'entités. Ces transformations sont aussi proposées dans le sens inverse (modèle entité jusqu'au modèle physique).

h2. Base de données

h3. Rétro-ingénierie

Cet outil permet d'initialiser un MPD à partir d'une base de donnée existante. Un assistant est accessible via le menu @File > Import … > Database > Import Database@. Voici un exemple permettant d'extraire les informations du schéma Oracle _RF_ :

!pics/BDD_Retro_01.png!

Il est à noter qu'il est possible de référencer (à l'aide de la zone _Referenced file_) des MPD existants. Ce référencement est utile lorsque vous souhaitez charger un schéma qui comporte des clés étrangères pointant sur des tables appartenant à une autre schéma.
Le résultat obtenu est le suivant :

!pics/BDD_Retro_02.png!

h3. Modélisation

h4. Vue d'ensemble

Pour manipuler graphiquement le contenu d'un fichier _.database_, vous devez glisser-déposer votre fichier dans la vue _Model Explorer_ d'Obeo Designer afin de créer une session de travail.
Vous devez ensuite sélectionner le point de vue _Database_ dans la boite de dialogue qui vous est proposée.
Ensuite ouvrez le diagramme _Database Diagram_ pour visualiser le contenu de votre fichier. Le résultat obtenu est le suivant :

!pics/BDD_Modelisation_01.png!

L'éditeur ci-dessus propose :
* un environnement de modélisation graphique,
* une palette d'outils permettant d'ajouter de nouvelles tables, colonnes, index, contraintes, ...
* un ensemble de filtres pour afficher ou masquer les contraintes, index et tables externes,
* une vue propriétés dédiée.

h4. Modèle Physique de Données

L'édition de Modèle Physique de Données se fait à l'aide du modeleur présenté précédemment. Un MPD est caractérisé par l'utilisation d'une librairie de type spécifique à un moteur de base de données : Oracle ou MySQL. Cette librairie est spécifiée à l'aide de la propriété suivante disponible sur l'élément _Database_  :

!pics/BDD_ModelePhysique_01.png!

h4. Modèle Logique de Données

L'édition de Modèle Logique de Données se fait à l'aide du modeleur présenté précédemment. Un MLD est caractérisé par l'utilisation d'une librairie de type logique indépendante de tout moteur de base de données. Cette librairie est spécifiée à l'aide de la propriété suivante disponible sur l'élément _Database_  :

!pics/BDD_ModeleLogique_01.png!

La sélection de cette librairie de types est également proposée dans l'assistant de création de modèle _database_, cf. capture ci-dessous :

!pics/BDD_ModeleLogique_02.png!

Il est a noter que la liste des types proposés dans chacune des librairies de types est paramétrable.

h3. Comparaison & génération des scripts SQL

h4. Comparaison et fusion

L'outillage de comparaison permet de comparer deux versions de MPD, soit deux fichiers stockés localement, soit une version locale avec une autre version stockée dans un référentiel de type subversion. L'outillage se base sur EMF Compare et fournit une extension permettant d'améliorer la pertinence de la comparaison sur ce type particulier de modèle.
	Pour comparer deux versions de MPD, sélectionnez les deux fichiers à comparer et utiliser le menu _Compare With > Each Other_ proposé dans le menu contextuel.  Lorsque vous utilisez la comparaison de fichiers locaux (par opposition à la comparaison via l'outillage subversion) EMF Compare utilise les fichiers dans l'ordre alphabétique. Par conséquent, vous devez les nommer de manière à ce que la version la plus récente de votre MPD se trouve en première position. Cf. l'exemple ci-dessous : 

!pics/BDD_SQL_01.png!


h4. Génération des scripts SQL

*Génération des scripts de modification*

Il est possible de générer les scripts SQL permettant de passer d'une version d'une base de données à une suivante. Pour cela il faut commencer par comparer les 2 modèles de bases de données en s'assurant que le plus récent est en première position (cf. paragraphe précédent). 

Une fois la comparaison effectuée, vous pouvez demander la génération du script SQL en cliquant sur le bouton _Generate SQL Scripts_ présent dans la barre d'outils. Ainsi le script généré vous permettra de mettre à jour le schéma correspondant au MPD le plus ancien :

!pics/BDD_GenSQL_01.png!

Un répertoire _sql_, contenant l'ensemble des scripts, sera créé à la racine du projet.

*Génération complète*

Il est possible de générer les scripts SQL pour générer complètement une base de données. Pour cela il suffit d'utiliser le menu clic droit sur le modèle et sélectionner _IS Designer > Generate SQL Scripts_ 

!pics/BDD_GenSQL_02.png!

h2. Transformations

Les transformations suivantes sont proposées afin d'initialiser un modèle à partir d'un autre :
* transformation d'un MPD en MLD,
* transformation d'un MLD en modèle d'entités,
* transformation d'un modèle d'entités en MLD,
* transformation d'un MLD en MPD.

Le mode opératoire est le même pour chacune des transformations.

h3. Transformation depuis les modèles source et cible

Pour lancer une transformation, le modèle cible doit exister. Pour une transformation d'un MPD en MLD par exemple il vous faudra commencer par créer un MLD vide avant toute chose.

Vous devez ensuite sélectionner un objet source et un objet cible en dépliant les modèles dans la vue _Model Explorer_. Si vous sélectionnez les fichiers le traitement ne pourra pas être lancé.

Pour un MPD ou un MLD, les objets source ou cible doivent être des _Data Base_ ou des _Schema_.
Pour un modèle d'entités,  les objets source ou cible doivent être des _Entities_ ou des _Namespace_.


* A l'aide du menu contextuel _Safr@n > Scaffolding_ sélectionnez le type de transformation à effectuer. Seules les transformations possibles selon les objets sélectionnés seront activées. :
!pics/BDD_Transfo_05.png!!
* Un assistant s'ouvre. Il permet de sélectionner les ressources permettant la résolution des dépendances externes. En effet, lorsque vous effectuez par exemple une transformation d'un MLD vers un MPD, il est possible que votre MLD contiennent des tables référençant des tables issues dans un autre MLD. Par conséquent vous devrez référencer le MPD correspondant à ce MLD externe afin que les clés étrangères référencent correctement les tables externes :
!pics/BDD_Transfo_06.png!

Une fois le traitement exécuté, un message de confirmation s'affiche. Un modèle contenant les informations de scaffolding est créé dans le répertoire _scaffold_. Ce modèle peut être utilisé pour lancer un nouveau traitement de scaffolding sur les mêmes éléments. 

h3. Transformation depuis un modèle de scaffold

Une transformation peut être lancée directement depuis un modèle de scaffold :

* Sélectionnez le modèle
* Utilisez le menu contextuel _Safr@n > Scaffolding _

Les transformations proposées dépendent des objets source et cible utilisés par le modèle de scaffolding.
Un menu permet également d'ajouter des ressources pour résoudre les dépendances externes comme lorsque l'assistant est utilisé.

A noter que lorsque vous lancez une transformation en sélectionnant des objets source et cible pour lesquels un modèle de scaffold existe déjà, il vous est proposé d'utiliser le modèle existant ou d'en créer un nouveau.  


h2. Notes
	
Les équivalences entre les types logiques et physiques, etc … ainsi que les règles de nommage sont  paramétrables.

Aussi, dans le cas où vous disposez déjà d'une version du modèle cible nous vous conseillons d'effectuer la transformation vers un nouveau modèle puis d'utiliser l'outillage de comparaison/fusion afin de gérer l’incrémentalité des modifications. Prenons un exemple pour illustrer ce scénario :
* l'équipe de développement fait évoluer le modèle d'entités et le livre à l'équipe DBA,
* l'équipe DBA peut ainsi lancer une transformation du modèle d'entités vers un nouveau MLD V2,
* l'équipe DBA peut ensuite comparer et fusionner le MLD V1 (incluant des modifications ajouter préalablement par l'équipe DBA) et le MLD V2,
* l'équipe DBA peut ensuite effectuer une transformation MLD V2 fusionné vers un MPD Oracle par exemple. Elle peut ensuite demander la comparaison et génération du script SQL par rapport à un version plus ancienne du MPD.
