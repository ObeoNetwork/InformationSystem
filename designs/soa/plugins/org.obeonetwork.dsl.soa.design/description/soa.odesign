<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:properties="http://www.eclipse.org/sirius/properties/1.0.0" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/description/tool/1.1.0" xmlns:validation="http://www.eclipse.org/sirius/description/validation/1.1.0" documentation="Copyright (c) 2008, 2021 Obeo.&#xD;&#xA;All rights reserved. This program and the accompanying materials&#xD;&#xA;are made available under the terms of the Eclipse Public License v1.0&#xD;&#xA;which accompanies this distribution, and is available at&#xD;&#xA;http://www.eclipse.org/legal/epl-v10.html&#xD;&#xA;&#xD;&#xA;Contributors:&#xD;&#xA;   Obeo - initial API and implementation" name="Soa" version="12.0.0.2017041100">
  <ownedViewpoints endUserDocumentation="The &lt;b>SOA Views&lt;/b> viewpoint provides four representations : &#xD;&#xA;&lt;ul>&#xD;&#xA;&lt;li>&lt;b>Component Contract Diagram&lt;/b> : a diagram allowing to represent and edit the required and provided Services of a Component,&lt;/li>&#xD;&#xA;&lt;li>&lt;b>DTO Diagram&lt;/b> : a diagram allowing to represent and edit the DTOs of a Namespace,&lt;/li>&#xD;&#xA;&lt;li>&lt;b>DTO Namespaces Hierarchy&lt;/b> : a diagram allowing to represent and edit the Namespace hierarchy of a System,&lt;/li>&#xD;&#xA;&lt;li>&lt;b>SOA Diagram&lt;/b> : a diagram allowing to represent and edit the Components of a System.&lt;/li>&#xD;&#xA;&lt;/ul>&#xA;" name="SOA Views" modelFileExtension="soa ois">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" dropDescriptions="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Relation']/@subSections[name='Usability%20Tools']/@ownedTools[name='DAD_Component']" name="SOA Diagram" titleExpression="[name + ' SOA Diagram'/]" domainClass="soa.System">
      <metamodel href="platform:/plugin/org.obeonetwork.dsl.environment/model/environment.ecore#/"/>
      <metamodel href="platform:/plugin/org.obeonetwork.dsl.entity/model/entity.ecore#/"/>
      <metamodel href="platform:/plugin/org.obeonetwork.dsl.soa/model/soa.ecore#/"/>
      <defaultLayer name="Default Layer">
        <edgeMappings name="SOAD_Wire" labelDirectEdit="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Relation']/@subSections[name='Usability%20Tools']/@ownedTools[name='Name%20Direct%20Edit%20SOA']" semanticCandidatesExpression="" semanticElements="var:self" sourceMapping="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@defaultLayer/@containerMappings[name='SOAD_Component']/@borderedNodeMappings[name='SOAD_Service_Required']" targetMapping="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@defaultLayer/@containerMappings[name='SOAD_Component']/@borderedNodeMappings[name='SOAD_Service_Provided']" targetFinderExpression="feature:dest" sourceFinderExpression="feature:source" domainClass="soa.Wire" useDomainElement="true" reconnections="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Relation']/@subSections[name='Usability%20Tools']/@ownedTools[name='REC_Wire_Target'] //@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Relation']/@subSections[name='Usability%20Tools']/@ownedTools[name='REC_Wire_Source']">
          <style>
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="SOAD_Component" detailDescriptions="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Relation']/@subSections[name='Usability%20Tools']/@ownedTools[name='Component%20Contract']" labelDirectEdit="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Relation']/@subSections[name='Usability%20Tools']/@ownedTools[name='Name%20Direct%20Edit%20SOA']" semanticCandidatesExpression="feature:ownedComponents" doubleClickDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Relation']/@subSections[name='Usability%20Tools']/@ownedTools[name='Go%20to%20component%20contract%20diagram']" domainClass="soa.Component" dropDescriptions="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Relation']/@subSections[name='Usability%20Tools']/@ownedTools[name='DAD_Service']">
          <borderedNodeMappings name="SOAD_Service_Provided" labelDirectEdit="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Relation']/@subSections[name='Usability%20Tools']/@ownedTools[name='Name%20Direct%20Edit%20SOA']" semanticCandidatesExpression="feature:providedServices" doubleClickDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Relation']/@subSections[name='Usability%20Tools']/@ownedTools[name='Go%20to%20component%20contract%20diagram']" domainClass="soa.Service">
            <style xsi:type="style:WorkspaceImageDescription" showIcon="false" sizeComputationExpression="2" workspacePath="/org.obeonetwork.dsl.soa.edit/icons/full/obj16/Service.gif">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </borderedNodeMappings>
          <borderedNodeMappings name="SOAD_Service_Required" labelDirectEdit="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Relation']/@subSections[name='Usability%20Tools']/@ownedTools[name='Name%20Direct%20Edit%20SOA']" semanticCandidatesExpression="feature:requiredServices" doubleClickDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Relation']/@subSections[name='Usability%20Tools']/@ownedTools[name='Go%20to%20component%20contract%20diagram']" domainClass="soa.Service">
            <style xsi:type="style:WorkspaceImageDescription" showIcon="false" sizeComputationExpression="2" workspacePath="/org.obeonetwork.dsl.soa.edit/icons/full/obj16/Reference.gif">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </borderedNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" showIcon="false" roundedCorner="true" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
          </style>
        </containerMappings>
        <toolSections name="SOA">
          <subSections name="Component">
            <ownedTools xsi:type="tool:ContainerCreationDescription" name="Component" forceRefresh="true" containerMappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@defaultLayer/@containerMappings[name='SOAD_Component']" iconPath="/org.obeonetwork.dsl.soa.edit/icons/full/obj16/Component.gif">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="soa.Component" referenceName="ownedComponents">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['Component ' + eContainer().oclAsType(soa::System).ownedComponents->size()/]"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
          </subSections>
          <subSections name="Service">
            <ownedTools xsi:type="tool:NodeCreationDescription" name="Provided" nodeMappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@defaultLayer/@containerMappings[name='SOAD_Component']/@borderedNodeMappings[name='SOAD_Service_Provided']" iconPath="/org.obeonetwork.dsl.soa.edit/icons/full/obj16/Service.gif">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="soa.Service" referenceName="ownedServices">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="kind" valueExpression="service:getProvidedLiteral()"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['ProvidedService'+container.oclAsType(soa::Component).providedServices->size()/]"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
            <ownedTools xsi:type="tool:NodeCreationDescription" name="Required" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@defaultLayer/@containerMappings[name='SOAD_Component']/@borderedNodeMappings[name='SOAD_Service_Provided']" iconPath="/org.obeonetwork.dsl.soa.edit/icons/full/obj16/Reference.gif">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="soa.Service" referenceName="ownedServices">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="kind" valueExpression="service:getRequiredLiteral()"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['RequiredService' + container.oclAsType(soa::Component).requiredServices->size()/]"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
          </subSections>
          <subSections name="Relation">
            <ownedTools xsi:type="tool:EdgeCreationDescription" name="Wire" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@defaultLayer/@edgeMappings[name='SOAD_Wire']" iconPath="/org.obeonetwork.dsl.soa.edit/icons/full/obj16/Wire.gif">
              <sourceVariable name="source"/>
              <targetVariable name="target"/>
              <sourceViewVariable name="sourceView"/>
              <targetViewVariable name="targetView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[source.eContainer(soa::System)/]">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="soa.Wire" referenceName="ownedWires">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="source" valueExpression="var:source"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="dest" valueExpression="var:target"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
            <subSections name="Usability Tools">
              <ownedTools xsi:type="tool:DiagramCreationDescription" name="Component Contract" forceRefresh="true" titleExpression="[name + ' Component Contract'/]" diagramDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='Component%20Contract%20Diagram']">
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                </initialOperation>
                <containerViewVariable name="containerView"/>
                <representationNameVariable name="diagramName"/>
              </ownedTools>
              <ownedTools xsi:type="tool:DirectEditLabel" documentation="Edit the name feature of the element" name="Name Direct Edit SOA">
                <mask mask="{0}"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:arg0"/>
                </initialOperation>
              </ownedTools>
              <ownedTools xsi:type="tool:ContainerDropDescription" name="DAD_Component" precondition="[oclIsKindOf(soa::Component)/]" dragSource="PROJECT_EXPLORER">
                <oldContainer name="oldSemanticContainer"/>
                <newContainer name="newSemanticContainer"/>
                <element name="element"/>
                <newViewContainer name="newContainerView"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                    <subModelOperations xsi:type="tool_1:MoveElement" newContainerExpression="var:newSemanticContainer" featureName="ownedComponents"/>
                  </firstModelOperations>
                </initialOperation>
              </ownedTools>
              <ownedTools xsi:type="tool:ContainerDropDescription" name="DAD_Service" precondition="[oclIsKindOf(soa::Service)/]" mappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@defaultLayer/@containerMappings[name='SOAD_Component']/@borderedNodeMappings[name='SOAD_Service_Provided'] //@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@defaultLayer/@containerMappings[name='SOAD_Component']/@borderedNodeMappings[name='SOAD_Service_Required']" dragSource="BOTH">
                <oldContainer name="oldSemanticContainer"/>
                <newContainer name="newSemanticContainer"/>
                <element name="element"/>
                <newViewContainer name="newContainerView"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                    <subModelOperations xsi:type="tool_1:MoveElement" newContainerExpression="var:newSemanticContainer" featureName="ownedServices"/>
                  </firstModelOperations>
                </initialOperation>
              </ownedTools>
              <ownedTools xsi:type="tool:DoubleClickDescription" name="Go to component contract diagram" forceRefresh="true" mappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@defaultLayer/@containerMappings[name='SOAD_Component'] //@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@defaultLayer/@containerMappings[name='SOAD_Component']/@borderedNodeMappings[name='SOAD_Service_Provided'] //@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@defaultLayer/@containerMappings[name='SOAD_Component']/@borderedNodeMappings[name='SOAD_Service_Required'] //@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@additionalLayers[name='External%20Components']/@containerMappings[name='SOAD_NonReferenced_External_Component'] //@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@additionalLayers[name='External%20Components']/@containerMappings[name='SOAD_Referenced_External_Component']">
                <element name="element"/>
                <elementView name="elementView"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[element.eContainer(soa::Component)/]">
                    <subModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='Component%20Contract%20Diagram']"/>
                  </firstModelOperations>
                </initialOperation>
              </ownedTools>
              <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="REC_Wire_Target">
                <source name="source"/>
                <target name="target"/>
                <sourceView name="sourceView"/>
                <targetView name="targetView"/>
                <element name="element"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="dest" valueExpression="var:target"/>
                  </firstModelOperations>
                </initialOperation>
                <edgeView name="edgeView"/>
              </ownedTools>
              <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="REC_Wire_Source" reconnectionKind="RECONNECT_SOURCE">
                <source name="source"/>
                <target name="target"/>
                <sourceView name="sourceView"/>
                <targetView name="targetView"/>
                <element name="element"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="source" valueExpression="var:target"/>
                  </firstModelOperations>
                </initialOperation>
                <edgeView name="edgeView"/>
              </ownedTools>
            </subSections>
          </subSections>
        </toolSections>
      </defaultLayer>
      <additionalLayers name="External Components">
        <containerMappings name="SOAD_Referenced_External_Component" detailDescriptions="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Relation']/@subSections[name='Usability%20Tools']/@ownedTools[name='Component%20Contract']" deletionDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@additionalLayers[name='External%20Components']/@toolSections.0/@ownedTools[name='Prevent%20deletion%20of%20external%20components']" semanticCandidatesExpression="service:allReferencedExternalComponents()" doubleClickDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Relation']/@subSections[name='Usability%20Tools']/@ownedTools[name='Go%20to%20component%20contract%20diagram']" domainClass="soa.Component" reusedBorderedNodeMappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@defaultLayer/@containerMappings[name='SOAD_Component']/@borderedNodeMappings[name='SOAD_Service_Provided'] //@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@defaultLayer/@containerMappings[name='SOAD_Component']/@borderedNodeMappings[name='SOAD_Service_Required']" dropDescriptions="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Relation']/@subSections[name='Usability%20Tools']/@ownedTools[name='DAD_Service']">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" showIcon="false" roundedCorner="true" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_red']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
          </style>
        </containerMappings>
        <containerMappings name="SOAD_NonReferenced_External_Component" detailDescriptions="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Relation']/@subSections[name='Usability%20Tools']/@ownedTools[name='Component%20Contract']" deletionDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@additionalLayers[name='External%20Components']/@toolSections.0/@ownedTools[name='Delete%20view%20on%20non%20referenced%20external%20components']" semanticCandidatesExpression="service:allNonReferencedExternalComponents()" createElements="false" doubleClickDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Relation']/@subSections[name='Usability%20Tools']/@ownedTools[name='Go%20to%20component%20contract%20diagram']" domainClass="soa.Component" reusedBorderedNodeMappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@defaultLayer/@containerMappings[name='SOAD_Component']/@borderedNodeMappings[name='SOAD_Service_Provided'] //@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@defaultLayer/@containerMappings[name='SOAD_Component']/@borderedNodeMappings[name='SOAD_Service_Required']" dropDescriptions="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Relation']/@subSections[name='Usability%20Tools']/@ownedTools[name='DAD_Service']">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" showIcon="false" roundedCorner="true" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_red']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
          </style>
        </containerMappings>
        <toolSections name="External Components">
          <ownedTools xsi:type="tool_1:SelectionWizardDescription" name="Ext. Component" precondition="[oclIsKindOf(soa::System)/]" forceRefresh="true" candidatesExpression="service:containerView.allSelectableExternalComponentsAndAncestors()" tree="true" rootExpression="service:allRoots()" childrenExpression="feature:eContents" iconPath="/org.obeonetwork.dsl.soa.edit/icons/full/obj16/Component.gif" windowTitle="Import external Component" windowImagePath="/org.obeonetwork.dsl.soa.edit/icons/full/obj16/Component.gif">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='SOA%20Diagram']/@additionalLayers[name='External%20Components']/@containerMappings[name='SOAD_NonReferenced_External_Component']" containerViewExpression="var:containerView"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="Prevent deletion of external components">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="Delete view on non referenced external components">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:elementView">
                <subModelOperations xsi:type="tool_1:DeleteView"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" dropDescriptions="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='Component%20Contract%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Usability%20tools']/@ownedTools[name='DAD_Service']" name="Component Contract Diagram" titleExpression="[name + ' Component Contract'/]" domainClass="soa.Component">
      <metamodel href="platform:/plugin/org.obeonetwork.dsl.environment/model/environment.ecore#/"/>
      <metamodel href="platform:/plugin/org.obeonetwork.dsl.entity/model/entity.ecore#/"/>
      <metamodel href="platform:/plugin/org.obeonetwork.dsl.soa/model/soa.ecore#/"/>
      <validationSet>
        <ownedRules xsi:type="validation:SemanticValidationRule" level="ERROR" message="The parameter name cannot use reserved words." targetClass="soa.Parameter">
          <audits auditExpression="[name&lt;>'return' and name&lt;>'public' and name&lt;>'private' and name&lt;>'protected' and name&lt;>'class' and name&lt;>'interface' and name&lt;>'package' and name&lt;>'extends' and name&lt;>'implements' and name&lt;>'int' and name&lt;>'double' and name&lt;>'float'/]"/>
        </ownedRules>
        <ownedRules xsi:type="validation:SemanticValidationRule" level="ERROR" message="The operation name cannot use reserved words." targetClass="soa.Operation">
          <audits auditExpression="[name&lt;>'return' and name&lt;>'public' and name&lt;>'private' and name&lt;>'protected' and name&lt;>'class' and name&lt;>'interface' and name&lt;>'package' and name&lt;>'extends' and name&lt;>'implements' and name&lt;>'int' and name&lt;>'double' and name&lt;>'float'/]"/>
        </ownedRules>
      </validationSet>
      <defaultLayer name="Default Layer">
        <containerMappings name="Cc_ServiceInterface_CM" labelDirectEdit="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='Reused%20Tools']/@defaultLayer/@toolSections.0/@ownedTools[name='Reused%20Name%20Direct%20Edit']" semanticCandidatesExpression="feature:ownedServices" domainClass="soa.Service" dropDescriptions="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='Component%20Contract%20Diagram']/@defaultLayer/@toolSections.1/@subSections[name='Usability%20tools']/@ownedTools[name='DAD_Operation']">
          <subContainerMappings name="Cc_Operation_CM" labelDirectEdit="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='Reused%20Tools']/@defaultLayer/@toolSections.0/@ownedTools[name='Reused%20Name%20Direct%20Edit']" semanticCandidatesExpression="[ownedInterface.ownedOperations/]" domainClass="soa.Operation" childrenPresentation="List">
            <subNodeMappings name="Cc_In_Param" labelDirectEdit="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='Reused%20Tools']/@defaultLayer/@toolSections.0/@ownedTools[name='Reused%20Name%20Direct%20Edit']" semanticCandidatesExpression="feature:input" domainClass="soa.Parameter">
              <style xsi:type="style:SquareDescription" labelExpression="service:computeSoaLabel()" labelAlignment="LEFT">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </subNodeMappings>
            <subNodeMappings name="Cc_Out_Param" labelDirectEdit="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='Reused%20Tools']/@defaultLayer/@toolSections.0/@ownedTools[name='Reused%20Name%20Direct%20Edit']" semanticCandidatesExpression="feature:output" domainClass="soa.Parameter">
              <style xsi:type="style:SquareDescription" labelExpression="service:computeSoaLabel()" labelAlignment="LEFT">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFormat>italic</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </subNodeMappings>
            <subNodeMappings name="Cc_Fault_Param" labelDirectEdit="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='Reused%20Tools']/@defaultLayer/@toolSections.0/@ownedTools[name='Reused%20Name%20Direct%20Edit']" semanticCandidatesExpression="feature:fault" domainClass="soa.Parameter">
              <style xsi:type="style:SquareDescription" labelExpression="service:computeSoaLabel()" labelAlignment="LEFT">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </subNodeMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="10">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="10" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_gray']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
          </style>
          <conditionnalStyles predicateExpression="service:isRequiredService()">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="10" backgroundStyle="GradientTopToBottom">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_purple']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_purple']"/>
            </style>
          </conditionnalStyles>
        </containerMappings>
        <toolSections name="Service">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="CRE_ProvidedService" label="Provided" containerMappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='Component%20Contract%20Diagram']/@defaultLayer/@containerMappings[name='Cc_ServiceInterface_CM']" iconPath="/org.obeonetwork.dsl.soa.edit/icons/full/obj16/Service.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="soa.Service" referenceName="ownedServices">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="kind" valueExpression="service:getProvidedLiteral()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['ProvidedService'+container.oclAsType(soa::Component).providedServices->size()/]"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="CRE_RequiredService" label="Required" containerMappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='Component%20Contract%20Diagram']/@defaultLayer/@containerMappings[name='Cc_ServiceInterface_CM']" iconPath="/org.obeonetwork.dsl.soa.edit/icons/full/obj16/Reference.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="soa.Service" referenceName="ownedServices">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="kind" valueExpression="service:getRequiredLiteral()"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['RequiredService' + container.oclAsType(soa::Component).requiredServices->size()/]"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <subSections name="Usability tools">
            <ownedTools xsi:type="tool:ContainerDropDescription" name="DAD_Service" precondition="[oclIsKindOf(soa::Service)/]" dragSource="PROJECT_EXPLORER">
              <oldContainer name="oldSemanticContainer"/>
              <newContainer name="newSemanticContainer"/>
              <element name="element"/>
              <newViewContainer name="newContainerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                  <subModelOperations xsi:type="tool_1:MoveElement" newContainerExpression="var:newSemanticContainer" featureName="ownedServices"/>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
          </subSections>
        </toolSections>
        <toolSections name="Contract">
          <subSections name="Operation">
            <ownedTools xsi:type="tool:ContainerCreationDescription" name="Operation" containerMappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='Component%20Contract%20Diagram']/@defaultLayer/@containerMappings[name='Cc_ServiceInterface_CM']/@subContainerMappings[name='Cc_Operation_CM']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="[oclAsType(soa::Service).ownedInterface.oclIsUndefined()/]">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="soa.Interface" referenceName="ownedInterface">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="[container.oclAsType(soa::Service).name/]"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="feature:ownedInterface">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="soa.Operation" referenceName="ownedOperations">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['Operation' + eContainer().oclAsType(soa::Interface).ownedOperations->size()/]"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
          </subSections>
          <subSections name="Parameter">
            <ownedTools xsi:type="tool:NodeCreationDescription" name="Input" nodeMappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='Component%20Contract%20Diagram']/@defaultLayer/@containerMappings[name='Cc_ServiceInterface_CM']/@subContainerMappings[name='Cc_Operation_CM']/@subNodeMappings[name='Cc_In_Param']" iconPath="/org.obeonetwork.dsl.soa.edit/icons/full/obj16/Input.gif">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="soa.Parameter" referenceName="input">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['input' + eContainer(soa::Operation).input->size()/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="service:getStringPrimitiveType()"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
            <ownedTools xsi:type="tool:NodeCreationDescription" name="Output" nodeMappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='Component%20Contract%20Diagram']/@defaultLayer/@containerMappings[name='Cc_ServiceInterface_CM']/@subContainerMappings[name='Cc_Operation_CM']/@subNodeMappings[name='Cc_Out_Param']" iconPath="/org.obeonetwork.dsl.soa.edit/icons/full/obj16/Output.gif">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="soa.Parameter" referenceName="output">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['output' + eContainer(soa::Operation).input->size()/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="service:getStringPrimitiveType()"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
            <ownedTools xsi:type="tool:NodeCreationDescription" name="Fault" nodeMappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='Component%20Contract%20Diagram']/@defaultLayer/@containerMappings[name='Cc_ServiceInterface_CM']/@subContainerMappings[name='Cc_Operation_CM']/@subNodeMappings[name='Cc_Fault_Param']" iconPath="/org.obeonetwork.dsl.soa.edit/icons/full/obj16/Fault.gif">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="soa.Parameter" referenceName="fault">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['fault' + eContainer(soa::Operation).fault->size()/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="service:getStringPrimitiveType()"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
          </subSections>
          <subSections name="Usability tools">
            <ownedTools xsi:type="tool:ContainerDropDescription" name="DAD_Operation" precondition="[oclIsKindOf(soa::Operation)/]" mappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='Component%20Contract%20Diagram']/@defaultLayer/@containerMappings[name='Cc_ServiceInterface_CM']/@subContainerMappings[name='Cc_Operation_CM']" dragSource="BOTH">
              <oldContainer name="oldSemanticContainer"/>
              <newContainer name="newSemanticContainer"/>
              <element name="element"/>
              <newViewContainer name="newContainerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newSemanticContainer">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="[oclAsType(soa::Service).ownedInterface.oclIsUndefined()/]">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="soa.Interface" referenceName="ownedInterface">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="[newSemanticContainer.oclAsType(soa::Service).name/]"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                    <subModelOperations xsi:type="tool_1:MoveElement" newContainerExpression="[newSemanticContainer.oclAsType(soa::Service).ownedInterface/]" featureName="ownedOperations"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
          </subSections>
        </toolSections>
        <decorationDescriptionsSet>
          <decorationDescriptions xsi:type="description_1:MappingBasedDecoration" name="DEC_Operation_has_security_requirements" position="NORTH_EAST" preconditionExpression="aql:self.securitySchemes->notEmpty()" imageExpression="/org.obeonetwork.dsl.soa.edit/icons/full/obj16/SecurityScheme.gif" mappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='Component%20Contract%20Diagram']/@defaultLayer/@containerMappings[name='Cc_ServiceInterface_CM']/@subContainerMappings[name='Cc_Operation_CM']"/>
        </decorationDescriptionsSet>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" dropDescriptions="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Namespaces%20Hierarchy']/@defaultLayer/@toolSections.1/@ownedTools[name='DAD_Namespace']" name="DTO Namespaces Hierarchy" label="DTO Namespaces Hierarchy" titleExpression="DTO Namespaces Hierarchy" domainClass="soa.System">
      <metamodel href="http://www.obeonetwork.org/dsl/environment/3.0.0#/"/>
      <metamodel href="http://www.eclipse.org/sirius/diagram/1.1.0#/"/>
      <metamodel href="http://www.obeonetwork.org/dsl/soa/3.0.0#/"/>
      <defaultLayer name="Default">
        <containerMappings name="ND_Namespace" detailDescriptions="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Namespaces%20Hierarchy']/@defaultLayer/@toolSections.1/@ownedTools[name='New%20Class%20Diagram']" deletionDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@toolSections.5/@ownedTools[name='DEL_Generic']" labelDirectEdit="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Namespaces%20Hierarchy']/@defaultLayer/@toolSections.1/@ownedTools[name='Namespace%20Name%20Direct%20Edit']" semanticCandidatesExpression="feature:ownedNamespaces" doubleClickDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Namespaces%20Hierarchy']/@defaultLayer/@toolSections.1/@ownedTools[name='Go%20to%20Class%20Diagram']" domainClass="environment.Namespace" dropDescriptions="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Namespaces%20Hierarchy']/@defaultLayer/@toolSections.1/@ownedTools[name='DAD_Namespace']" reusedContainerMappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Namespaces%20Hierarchy']/@defaultLayer/@containerMappings[name='ND_Namespace']">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" borderColor="//@userColorsPalettes[name='Palette']/@entries[name='Namespace_border']" labelColor="//@userColorsPalettes[name='Palette']/@entries[name='Namespace_color']" backgroundStyle="GradientTopToBottom" backgroundColor="//@userColorsPalettes[name='Palette']/@entries[name='Namespace_background']" foregroundColor="//@userColorsPalettes[name='Palette']/@entries[name='Namespace_foreground']"/>
        </containerMappings>
        <toolSections name="Namespace" label="Namespace">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Namespace" label="Namespace" forceRefresh="true" containerMappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Namespaces%20Hierarchy']/@defaultLayer/@containerMappings[name='ND_Namespace']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="environment.Namespace" referenceName="ownedNamespaces">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['namespace_' + eContainer().oclAsType(environment::NamespacesContainer).ownedNamespaces->size()/]"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Usability Tools">
          <ownedTools xsi:type="tool:DirectEditLabel" documentation="Edit the name feature of the element" name="Namespace Name Direct Edit" forceRefresh="true">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:arg0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DiagramCreationDescription" name="New Class Diagram" label="New DTO Diagram" forceRefresh="true" diagramDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
            </initialOperation>
            <containerViewVariable name="containerView"/>
            <representationNameVariable name="diagramName"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="Go to Class Diagram" mappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Namespaces%20Hierarchy']/@defaultLayer/@containerMappings[name='ND_Namespace']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="DAD_Namespace" precondition="[oclIsKindOf(environment::Namespace)/]" forceRefresh="true" mappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Namespaces%20Hierarchy']/@defaultLayer/@containerMappings[name='ND_Namespace']" dragSource="BOTH">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:Switch">
                  <cases conditionExpression="[newSemanticContainer.ancestors()->includes(element)/]">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:displayWarningDropNamespaceOnChild()"/>
                  </cases>
                  <default>
                    <subModelOperations xsi:type="tool_1:Switch">
                      <cases conditionExpression="[oclIsKindOf(environment::Namespace)/]">
                        <subModelOperations xsi:type="tool_1:MoveElement" newContainerExpression="var:newSemanticContainer" featureName="ownedNamespaces"/>
                      </cases>
                      <default>
                        <subModelOperations xsi:type="tool_1:MoveElement" newContainerExpression="var:newSemanticContainer" featureName="ownedNamespaces"/>
                      </default>
                    </subModelOperations>
                  </default>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="DEL_ND_External" precondition="false">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation/>
          </ownedTools>
        </toolSections>
      </defaultLayer>
      <additionalLayers name="Dependencies" activeByDefault="true">
        <edgeMappings name="ND_Dependency" sourceMapping="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Namespaces%20Hierarchy']/@defaultLayer/@containerMappings[name='ND_Namespace']" targetMapping="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Namespaces%20Hierarchy']/@defaultLayer/@containerMappings[name='ND_Namespace']" targetFinderExpression="aql:self.getDependenciesToNamespaces(diagram)">
          <style targetArrow="NoDecoration">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <beginLabelStyleDescription showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </beginLabelStyleDescription>
            <endLabelStyleDescription showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </endLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ND_Dependency_External" deletionDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Namespaces%20Hierarchy']/@defaultLayer/@toolSections.1/@ownedTools[name='DEL_ND_External']" sourceMapping="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Namespaces%20Hierarchy']/@defaultLayer/@containerMappings[name='ND_Namespace']" targetMapping="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Namespaces%20Hierarchy']/@additionalLayers[name='Dependencies']/@containerMappings[name='ND_Namespace_External']" targetFinderExpression="service:self.getExternalNamespaces()">
          <style targetArrow="NoDecoration">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <beginLabelStyleDescription showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </beginLabelStyleDescription>
            <endLabelStyleDescription showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </endLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="ND_Namespace_External" deletionDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Namespaces%20Hierarchy']/@defaultLayer/@toolSections.1/@ownedTools[name='DEL_ND_External']" semanticCandidatesExpression="service:self.getExternalNamespacesRecursive()" domainClass="environment.Namespace">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" borderColor="//@userColorsPalettes[name='Palette']/@entries[name='ExternalNamespace_border']" labelExpression="service:self.getEnvironmentQualifiedName()" labelColor="//@userColorsPalettes[name='Palette']/@entries[name='ExternalNamespace_color']" backgroundStyle="GradientTopToBottom" backgroundColor="//@userColorsPalettes[name='Palette']/@entries[name='ExternalNamespace_background']" foregroundColor="//@userColorsPalettes[name='Palette']/@entries[name='ExternalNamespace_foreground']"/>
        </containerMappings>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:view.isDependencyBeginDecorated()">
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Namespaces%20Hierarchy']/@additionalLayers[name='Dependencies']/@edgeMappings[name='ND_Dependency']/@style/@beginLabelStyleDescription //@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Namespaces%20Hierarchy']/@additionalLayers[name='Dependencies']/@edgeMappings[name='ND_Dependency_External']/@style/@beginLabelStyleDescription" attributeName="labelExpression" value="aql:view.getDependencyBeginLabel()"/>
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Namespaces%20Hierarchy']/@additionalLayers[name='Dependencies']/@edgeMappings[name='ND_Dependency']/@style //@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Namespaces%20Hierarchy']/@additionalLayers[name='Dependencies']/@edgeMappings[name='ND_Dependency_External']/@style" attributeName="sourceArrow" value="InputArrow"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:view.isDependencyEndDecorated()">
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Namespaces%20Hierarchy']/@additionalLayers[name='Dependencies']/@edgeMappings[name='ND_Dependency']/@style/@endLabelStyleDescription //@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Namespaces%20Hierarchy']/@additionalLayers[name='Dependencies']/@edgeMappings[name='ND_Dependency_External']/@style/@endLabelStyleDescription" attributeName="labelExpression" value="aql:view.getDependencyEndLabel()"/>
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Namespaces%20Hierarchy']/@additionalLayers[name='Dependencies']/@edgeMappings[name='ND_Dependency']/@style //@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Namespaces%20Hierarchy']/@additionalLayers[name='Dependencies']/@edgeMappings[name='ND_Dependency_External']/@style" attributeName="targetArrow" value="InputArrow"/>
          </vsmElementCustomizations>
        </customization>
      </additionalLayers>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" dropDescriptions="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@toolSections.5/@ownedTools[name='DAD_DD_DTO'] //@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@toolSections.5/@ownedTools[name='DAD_ED_Enumeration'] //@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ED_Namespace']" name="DTO Diagram" label="DTO Diagram" titleExpression="[name + ' - DTO diagram'/]" domainClass="environment.Namespace" preconditionExpression="[ancestors()->filter(soa::System)->notEmpty()/]">
      <metamodel href="http://www.obeonetwork.org/dsl/environment/3.0.0#/"/>
      <metamodel href="http://www.obeonetwork.org/dsl/entity/3.0.0#/"/>
      <metamodel href="http://www.obeonetwork.org/dsl/soa/3.0.0#/"/>
      <defaultLayer name="Default">
        <edgeMappings name="ED_Reference_Type_Type" preconditionExpression="[oppositeOf.oclIsUndefined()/]" labelDirectEdit="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@toolSections.5/@ownedTools[name='EDT_ED_Reference']" semanticCandidatesExpression="service:diagram.getReferences()" sourceMapping="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@containerMappings[name='DD_DTO'] //@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@additionalLayers[name='External%20DTOs']/@containerMappings[name='ED_ExternalStructuredType_Referenced'] //@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@additionalLayers[name='External%20DTOs']/@containerMappings[name='ED_ExternalStructuredType_NotReferenced']" targetMapping="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@containerMappings[name='DD_DTO'] //@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@additionalLayers[name='External%20DTOs']/@containerMappings[name='ED_ExternalStructuredType_Referenced'] //@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@additionalLayers[name='External%20DTOs']/@containerMappings[name='ED_ExternalStructuredType_NotReferenced']" targetFinderExpression="feature:referencedType" sourceFinderExpression="feature:containingType" domainClass="environment.Reference" useDomainElement="true" reconnections="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@toolSections.5/@ownedTools[name='REC_ED_Reference_Target'] //@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@toolSections.5/@ownedTools[name='REC_ED_Reference_Source']">
          <style targetArrow="NoDecoration">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription showIcon="false" labelExpression="[name + ' [' + multiplicity.toString() + ']'/]">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="feature:isComposite">
            <style sourceArrow="Diamond">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <centerLabelStyleDescription showIcon="false" labelExpression="[name + ' [' + multiplicity.toString() + ']'/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="feature:navigable">
            <style>
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <centerLabelStyleDescription showIcon="false" labelExpression="[name + ' [' + multiplicity.toString() + ']'/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="ED_Inheritance_Type_Type" deletionDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@toolSections.5/@ownedTools[name='DEL_ED_Inheritance']" sourceMapping="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@containerMappings[name='DD_DTO'] //@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@additionalLayers[name='External%20DTOs']/@containerMappings[name='ED_ExternalStructuredType_NotReferenced'] //@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@additionalLayers[name='External%20DTOs']/@containerMappings[name='ED_ExternalStructuredType_Referenced']" targetMapping="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@containerMappings[name='DD_DTO'] //@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@additionalLayers[name='External%20DTOs']/@containerMappings[name='ED_ExternalStructuredType_NotReferenced'] //@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@additionalLayers[name='External%20DTOs']/@containerMappings[name='ED_ExternalStructuredType_Referenced']" targetFinderExpression="feature:supertype" reconnections="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@toolSections.5/@ownedTools[name='REC_ED_Inheritance_Target'] //@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@toolSections.5/@ownedTools[name='REC_ED_Inheritance_Source']">
          <style targetArrow="InputClosedArrow">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ED_BidiReference_Type_Type" deletionDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@toolSections.5/@ownedTools[name='DEL_ED_BidiReference']" labelDirectEdit="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@toolSections.5/@ownedTools[name='EDT_ED_BidiReference']" semanticCandidatesExpression="service:diagram.getOppositeReferences()" semanticElements="[self->asSequence()->including(oppositeOf)/]" sourceMapping="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@containerMappings[name='DD_DTO'] //@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@additionalLayers[name='External%20DTOs']/@containerMappings[name='ED_ExternalStructuredType_Referenced'] //@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@additionalLayers[name='External%20DTOs']/@containerMappings[name='ED_ExternalStructuredType_NotReferenced']" targetMapping="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@containerMappings[name='DD_DTO'] //@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@additionalLayers[name='External%20DTOs']/@containerMappings[name='ED_ExternalStructuredType_Referenced'] //@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@additionalLayers[name='External%20DTOs']/@containerMappings[name='ED_ExternalStructuredType_NotReferenced']" targetFinderExpression="feature:referencedType" sourceFinderExpression="feature:containingType" domainClass="environment.Reference" useDomainElement="true" reconnections="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@toolSections.5/@ownedTools[name='REC_ED_BidiReference_Target'] //@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@toolSections.5/@ownedTools[name='REC_ED_BidiReference_Source']">
          <style targetArrow="NoDecoration">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <beginLabelStyleDescription showIcon="false" labelExpression="[oppositeOf.name + ' [' + oppositeOf.multiplicity.toString() + ']'/]">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </beginLabelStyleDescription>
            <centerLabelStyleDescription showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
            <endLabelStyleDescription showIcon="false" labelExpression="[name + ' [' + multiplicity.toString() + ']'/]">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </endLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="ED_Namespace" detailDescriptions="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='New%20Class%20Diagram']" deletionDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@toolSections.5/@ownedTools[name='DEL_Generic']" labelDirectEdit="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@toolSections.5/@ownedTools[name='EDT_Generic']" semanticCandidatesExpression="feature:ownedNamespaces" doubleClickDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Go%20to%20Class%20Diagram']" domainClass="environment.Namespace">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" borderColor="//@userColorsPalettes[name='Palette']/@entries[name='Namespace_border']" labelColor="//@userColorsPalettes[name='Palette']/@entries[name='Namespace_color']" backgroundStyle="GradientTopToBottom" backgroundColor="//@userColorsPalettes[name='Palette']/@entries[name='Namespace_background']" foregroundColor="//@userColorsPalettes[name='Palette']/@entries[name='Namespace_foreground']"/>
        </containerMappings>
        <containerMappings name="DD_DTO" label="DD_DTO" deletionDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@toolSections.5/@ownedTools[name='DEL_Generic']" labelDirectEdit="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@toolSections.5/@ownedTools[name='EDT_Generic']" semanticCandidatesExpression="feature:types" domainClass="environment.DTO" dropDescriptions="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@toolSections.5/@ownedTools[name='DAD_ED_Attribute']" childrenPresentation="List">
          <subNodeMappings name="ED_Attribute" labelDirectEdit="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@toolSections.5/@ownedTools[name='EDT_ED_Attribute']" semanticCandidatesExpression="feature:ownedAttributes" domainClass="environment.Attribute">
            <style xsi:type="style:SquareDescription" labelExpression="service:self.getEnvironmentLabel()" labelAlignment="LEFT">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="ED_AssociatedAttribute" deletionDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@toolSections.5/@ownedTools[name='DEL_PreventDeletion']" semanticCandidatesExpression="[associatedTypes.attributes/]" domainClass="environment.Attribute">
            <style xsi:type="style:SquareDescription" labelExpression="service:self.getEnvironmentLabel()" labelAlignment="LEFT">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>italic</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" borderColor="//@userColorsPalettes[name='Palette']/@entries[name='StructuredType_border']" labelSize="10" labelExpression="service:self.getEnvironmentLabel()" labelColor="//@userColorsPalettes[name='Palette']/@entries[name='StructuredType_color']" backgroundStyle="GradientTopToBottom" backgroundColor="//@userColorsPalettes[name='Palette']/@entries[name='StructuredType_background']" foregroundColor="//@userColorsPalettes[name='Palette']/@entries[name='StructuredType_foreground']"/>
        </containerMappings>
        <containerMappings name="ED_Enumeration" deletionDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@toolSections.5/@ownedTools[name='DEL_Generic']" labelDirectEdit="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@toolSections.5/@ownedTools[name='EDT_Generic']" semanticCandidatesExpression="feature:types" domainClass="environment.Enumeration" dropDescriptions="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@toolSections.5/@ownedTools[name='DAD_ED_Literal']" childrenPresentation="List">
          <subNodeMappings name="ED_Literal" labelDirectEdit="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@toolSections.5/@ownedTools[name='EDT_Generic']" semanticCandidatesExpression="feature:literals" domainClass="environment.Literal">
            <style xsi:type="style:SquareDescription" labelAlignment="LEFT">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" borderColor="//@userColorsPalettes[name='Palette']/@entries[name='Enumeration_border']" labelSize="10" labelColor="//@userColorsPalettes[name='Palette']/@entries[name='Enumeration_color']" backgroundStyle="GradientTopToBottom" backgroundColor="//@userColorsPalettes[name='Palette']/@entries[name='Enumeration_background']" foregroundColor="//@userColorsPalettes[name='Palette']/@entries[name='Enumeration_foreground']"/>
        </containerMappings>
        <toolSections name="Namespace" label="Namespace">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Namespace" label="Namespace" forceRefresh="true" containerMappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@containerMappings[name='ED_Namespace']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="environment.Namespace" referenceName="ownedNamespaces">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['namespace_' + eContainer().oclAsType(environment::NamespacesContainer).ownedNamespaces->size()/]"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DiagramCreationDescription" name="New Class Diagram" label="New DTO Diagram" forceRefresh="true" diagramDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
            </initialOperation>
            <containerViewVariable name="containerView"/>
            <representationNameVariable name="diagramName"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="Go to Class Diagram" mappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@containerMappings[name='ED_Namespace']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="ED_Namespace" precondition="[oclIsKindOf(environment::Namespace)/]" forceRefresh="true" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:Switch">
                  <cases conditionExpression="[newSemanticContainer.ancestors()->includes(element)/]">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:displayWarningDropNamespaceOnChild()"/>
                  </cases>
                  <default>
                    <subModelOperations xsi:type="tool_1:Switch">
                      <cases conditionExpression="[oclIsKindOf(environment::Namespace)/]">
                        <subModelOperations xsi:type="tool_1:MoveElement" newContainerExpression="var:newSemanticContainer" featureName="ownedNamespaces"/>
                      </cases>
                      <default>
                        <subModelOperations xsi:type="tool_1:MoveElement" newContainerExpression="var:newSemanticContainer" featureName="ownedNamespaces"/>
                      </default>
                    </subModelOperations>
                  </default>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="DTO">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="DTO" forceRefresh="true" containerMappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@containerMappings[name='DD_DTO']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="environment.DTO" referenceName="types">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['DTO' + eContainer().oclAsType(environment::Namespace).types->size()/]"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="DTO from Entity" forceRefresh="true" containerMappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@containerMappings[name='DD_DTO']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:container.openCreateDTOsFromEntitiesWizard()"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Attribute" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@containerMappings[name='DD_DTO']/@subNodeMappings[name='ED_Attribute']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="environment.Attribute" referenceName="ownedAttributes">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['attribute' + eContainer().oclAsType(environment::StructuredType).ownedAttributes->size()/]"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="service:getStringPrimitiveType()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name=" Enumeration">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Enumeration" forceRefresh="true" containerMappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@containerMappings[name='ED_Enumeration']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="environment.Enumeration" referenceName="types">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['Enum' + eContainer().oclAsType(environment::Namespace).types->size()/]"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Literal" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@containerMappings[name='ED_Enumeration']/@subNodeMappings[name='ED_Literal']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="environment.Literal" referenceName="literals">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['literal' + eContainer().oclAsType(environment::Enumeration).literals->size()/]"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name=" Relation">
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Relation" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@edgeMappings[name='ED_Reference_Type_Type']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="environment.Reference" referenceName="ownedReferences">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="referencedType" valueExpression="var:target"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="[target.oclAsType(environment::StructuredType).name.trim() + 's'/]"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="multiplicity" valueExpression="ZERO_STAR"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="navigable" valueExpression="true"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Composition" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@edgeMappings[name='ED_Reference_Type_Type']" iconPath="/org.obeonetwork.dsl.is.design/description/images/environment/Composition.gif">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="environment.Reference" referenceName="ownedReferences">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="referencedType" valueExpression="var:target"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="[target.oclAsType(environment::StructuredType).name.trim() + 's'/]"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="multiplicity" valueExpression="ZERO_STAR"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="navigable" valueExpression="true"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isComposite" valueExpression="true"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Inheritance" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@edgeMappings[name='ED_Inheritance_Type_Type']" iconPath="/org.obeonetwork.dsl.is.design/description/images/environment/Inheritance.gif">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:source.createInheritance(target)"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Bidirectional Relation">
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Bidirectional Relation" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@edgeMappings[name='ED_BidiReference_Type_Type']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="environment.Reference" referenceName="ownedReferences" variableName="firstReference">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="referencedType" valueExpression="var:target"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isComposite" valueExpression="false"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="[target.oclAsType(environment::StructuredType).name.trim() + 's'/]"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="multiplicity" valueExpression="ZERO_STAR"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="navigable" valueExpression="true"/>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:target">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="environment.Reference" referenceName="ownedReferences" variableName="secondReference">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="referencedType" valueExpression="var:source"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="isComposite" valueExpression="false"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="[source.oclAsType(environment::StructuredType).name.trim() + 's'/]"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="multiplicity" valueExpression="ZERO_STAR"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="navigable" valueExpression="true"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="oppositeOf" valueExpression="var:firstReference"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Bidirectional Composition" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@edgeMappings[name='ED_BidiReference_Type_Type']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="environment.Reference" referenceName="ownedReferences" variableName="firstReference">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="referencedType" valueExpression="var:target"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="isComposite" valueExpression="true"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="[target.oclAsType(environment::StructuredType).name.trim() + 's'/]"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="multiplicity" valueExpression="ZERO_STAR"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="navigable" valueExpression="true"/>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:target">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="environment.Reference" referenceName="ownedReferences" variableName="secondReference">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="referencedType" valueExpression="var:source"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="isComposite" valueExpression="false"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="[source.oclAsType(environment::StructuredType).name.trim() + 's'/]"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="multiplicity" valueExpression="ZERO_STAR"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="navigable" valueExpression="true"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="oppositeOf" valueExpression="var:firstReference"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Usability tools">
          <ownedTools xsi:type="tool:DirectEditLabel" documentation="Edit the name feature of the element" name="EDT_Generic" forceRefresh="true" inputLabelExpression="feature:name">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:arg0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="EDT_ED_Attribute" forceRefresh="true">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:self.getAttrNameFromString(arg0)"/>
                <subModelOperations xsi:type="tool_1:SetValue" featureName="multiplicity" valueExpression="service:self.getMultKindFromString(arg0)"/>
                <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="service:self.getAttrTypeFromString(arg0)"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="EDT_ED_Reference">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:self.getRefNameFromString(arg0)"/>
                <subModelOperations xsi:type="tool_1:SetValue" featureName="multiplicity" valueExpression="service:self.getMultKindFromString(arg0)"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="EDT_ED_BidiReference">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="DAD_DD_DTO" precondition="[oclIsKindOf(environment::DTO)/]" forceRefresh="true" mappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@containerMappings[name='DD_DTO']" dragSource="BOTH">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:MoveElement" newContainerExpression="var:newSemanticContainer" featureName="types"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="DAD_ED_Enumeration" precondition="[oclIsKindOf(environment::Enumeration)/]" forceRefresh="true" mappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@containerMappings[name='ED_Enumeration']" dragSource="BOTH">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:MoveElement" newContainerExpression="var:newSemanticContainer" featureName="types"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="DAD_ED_Attribute" precondition="[oclIsKindOf(environment::Attribute)/]" forceRefresh="true" mappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@containerMappings[name='DD_DTO']/@subNodeMappings[name='ED_Attribute']" dragSource="BOTH">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:MoveElement" newContainerExpression="var:newSemanticContainer" featureName="ownedAttributes"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="DAD_ED_Literal" precondition="[oclIsKindOf(environment::Literal)/]" forceRefresh="true" mappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@containerMappings[name='ED_Enumeration']/@subNodeMappings[name='ED_Literal']" dragSource="BOTH">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:MoveElement" newContainerExpression="var:newSemanticContainer" featureName="literals"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="DEL_Generic" forceRefresh="true">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:deleteObeoDSMObject()"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="DEL_ED_Inheritance" forceRefresh="true">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:Unset" featureName="supertype" elementExpression="feature:supertype"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="DEL_ED_BidiReference" forceRefresh="true">
            <element name="element">
              <subVariables xsi:type="tool_1:SelectModelElementVariable" name="selectedElements" candidatesExpression="[self->asSequence()->including(oppositeOf)/]" multiple="true" message="Select references to be deleted"/>
            </element>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:For" expression="var:selectedElements" iteratorName="selectedReference">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:deleteObeoDSMObject()"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="DEL_PreventDeletion">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="REC_ED_Reference_Target" forceRefresh="true">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="referencedType" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="REC_ED_Reference_Source" forceRefresh="true" reconnectionKind="RECONNECT_SOURCE">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="containingType" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="REC_ED_Inheritance_Target" forceRefresh="true">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:element.createInheritance(target)"/>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="REC_ED_Inheritance_Source" forceRefresh="true" reconnectionKind="RECONNECT_SOURCE">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:target.reconnectSourceOnInheritanceEdge(source, edgeView)"/>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="REC_ED_BidiReference_Target" forceRefresh="true">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:element.reconnectBidiReferenceTarget(source, target)"/>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="REC_ED_BidiReference_Source" forceRefresh="true" reconnectionKind="RECONNECT_SOURCE">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:element.reconnectBidiReferenceSource(source, target)"/>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
        </toolSections>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="feature:isComposite">
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@edgeMappings[name='ED_BidiReference_Type_Type']/@style" attributeName="sourceArrow" value="Diamond"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="[oppositeOf.isComposite/]">
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@edgeMappings[name='ED_BidiReference_Type_Type']/@style" attributeName="targetArrow" value="Diamond"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="[not isComposite and oppositeOf.navigable/]">
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@edgeMappings[name='ED_BidiReference_Type_Type']/@style" attributeName="sourceArrow" value="InputArrow"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="[not oppositeOf.isComposite and navigable/]">
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@edgeMappings[name='ED_BidiReference_Type_Type']/@style" attributeName="targetArrow" value="InputArrow"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="[oclAsType(environment::StructuredType).associatedTypes->notEmpty()/]">
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@containerMappings[name='DD_DTO']/@style" attributeName="labelFormat" value="italic"/>
          </vsmElementCustomizations>
        </customization>
      </defaultLayer>
      <additionalLayers name="External DTOs" activeByDefault="true">
        <containerMappings name="ED_ExternalStructuredType_Referenced" detailDescriptions="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@additionalLayers[name='External%20DTOs']/@toolSections.1/@ownedTools[name='New%20external%20Entities%20diagram']" navigationDescriptions="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@additionalLayers[name='External%20DTOs']/@toolSections.1/@ownedTools[name='Go%20to%20external%20Entities%20diagram']" deletionDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@toolSections.5/@ownedTools[name='DEL_PreventDeletion']" semanticCandidatesExpression="service:self.getAllReferencedStructuredTypes(diagram)" doubleClickDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@additionalLayers[name='External%20DTOs']/@toolSections.1/@ownedTools[name='DBL_Go%20to%20external%20class%20diagram']" domainClass="environment.DTO" childrenPresentation="List">
          <subNodeMappings name="ED_ExternalAttribute" detailDescriptions="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@additionalLayers[name='External%20DTOs']/@toolSections.1/@ownedTools[name='New%20external%20Entities%20diagram']" navigationDescriptions="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@additionalLayers[name='External%20DTOs']/@toolSections.1/@ownedTools[name='Go%20to%20external%20Entities%20diagram']" deletionDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@toolSections.5/@ownedTools[name='DEL_PreventDeletion']" semanticCandidatesExpression="feature:ownedAttributes" doubleClickDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@additionalLayers[name='External%20DTOs']/@toolSections.1/@ownedTools[name='DBL_Go%20to%20external%20class%20diagram']" domainClass="environment.Attribute">
            <style xsi:type="style:SquareDescription" labelExpression="service:self.getEnvironmentLabel()" labelAlignment="LEFT">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="ED_ExternalAssociatedAttribute" detailDescriptions="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@additionalLayers[name='External%20DTOs']/@toolSections.1/@ownedTools[name='New%20external%20Entities%20diagram']" navigationDescriptions="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@additionalLayers[name='External%20DTOs']/@toolSections.1/@ownedTools[name='Go%20to%20external%20Entities%20diagram']" deletionDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@toolSections.5/@ownedTools[name='DEL_PreventDeletion']" semanticCandidatesExpression="[associatedTypes.attributes/]" doubleClickDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@additionalLayers[name='External%20DTOs']/@toolSections.1/@ownedTools[name='DBL_Go%20to%20external%20class%20diagram']" domainClass="environment.Attribute">
            <style xsi:type="style:SquareDescription" labelExpression="service:self.getEnvironmentLabel()" labelAlignment="LEFT">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>italic</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" borderColor="//@userColorsPalettes[name='Palette']/@entries[name='ExternalType_border']" showIcon="false" labelExpression="service:getEnvironmentQualifiedName()" labelColor="//@userColorsPalettes[name='Palette']/@entries[name='ExternalType_color']" backgroundColor="//@userColorsPalettes[name='Palette']/@entries[name='ExternalType_background']" foregroundColor="//@userColorsPalettes[name='Palette']/@entries[name='ExternalType_foreground']"/>
        </containerMappings>
        <containerMappings name="ED_ExternalStructuredType_NotReferenced" detailDescriptions="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@additionalLayers[name='External%20DTOs']/@toolSections.1/@ownedTools[name='New%20external%20Entities%20diagram']" navigationDescriptions="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@additionalLayers[name='External%20DTOs']/@toolSections.1/@ownedTools[name='Go%20to%20external%20Entities%20diagram']" deletionDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@additionalLayers[name='External%20DTOs']/@toolSections.1/@ownedTools[name='DEL_ED_ExternalStructuredType_NotReferenced']" semanticCandidatesExpression="service:self.getAllNotReferencedStructuredTypes(diagram)" createElements="false" doubleClickDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@additionalLayers[name='External%20DTOs']/@toolSections.1/@ownedTools[name='DBL_Go%20to%20external%20class%20diagram']" domainClass="environment.DTO" reusedNodeMappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@containerMappings[name='DD_DTO']/@subNodeMappings[name='ED_Attribute'] //@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@defaultLayer/@containerMappings[name='DD_DTO']/@subNodeMappings[name='ED_AssociatedAttribute']" childrenPresentation="List">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" borderColor="//@userColorsPalettes[name='Palette']/@entries[name='ExternalType_border']" showIcon="false" labelExpression="service:getEnvironmentQualifiedName()" labelColor="//@userColorsPalettes[name='Palette']/@entries[name='ExternalType_color']" backgroundColor="//@userColorsPalettes[name='Palette']/@entries[name='ExternalType_background']" foregroundColor="//@userColorsPalettes[name='Palette']/@entries[name='ExternalType_foreground']"/>
        </containerMappings>
        <toolSections name="External DTOs">
          <ownedTools xsi:type="tool_1:SelectionWizardDescription" name="External DTO" label="External DTO" precondition="[oclIsKindOf(environment::Namespace)/]" forceRefresh="true" candidatesExpression="service:self.getAllSelectableExternalStructuredTypesWithAncestorsDTOs(diagram)" multiple="true" tree="true" rootExpression="service:self.getAllSelectableExternalStructuredTypesWithAncestorsDTOsRoots(diagram)" childrenExpression="feature:eContents" message="Select an external DTO" iconPath="/org.obeonetwork.dsl.entity.edit/icons/full/obj16/Entity.gif">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:For" expression="var:element" iteratorName="selectedElement">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="[oclIsKindOf(environment::DTO)/]">
                  <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@additionalLayers[name='External%20DTOs']/@containerMappings[name='ED_ExternalStructuredType_NotReferenced']" containerViewExpression="var:containerView"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Usability tools">
          <ownedTools xsi:type="tool:DeleteElementDescription" name="DEL_ED_ExternalStructuredType_NotReferenced" forceRefresh="true">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:elementView">
                <subModelOperations xsi:type="tool_1:DeleteView"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DiagramCreationDescription" name="New external Entities diagram" label="New DTO Diagram" forceRefresh="true" browseExpression="[eContainer(environment::Namespace)/]" diagramDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
            </initialOperation>
            <containerViewVariable name="containerView"/>
            <representationNameVariable name="diagramName"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DiagramNavigationDescription" name="Go to external Entities diagram" label="New DTO Diagram" forceRefresh="true" browseExpression="[eContainer(environment::Namespace)/]" diagramDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']">
            <containerViewVariable name="containerView"/>
            <containerVariable name="container"/>
            <representationNameVariable name="diagramName"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="DBL_Go to external class diagram" forceRefresh="true" mappings="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@additionalLayers[name='External%20DTOs']/@containerMappings[name='ED_ExternalStructuredType_NotReferenced'] //@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@additionalLayers[name='External%20DTOs']/@containerMappings[name='ED_ExternalStructuredType_Referenced'] //@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@additionalLayers[name='External%20DTOs']/@containerMappings[name='ED_ExternalStructuredType_Referenced']/@subNodeMappings[name='ED_ExternalAssociatedAttribute'] //@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']/@additionalLayers[name='External%20DTOs']/@containerMappings[name='ED_ExternalStructuredType_Referenced']/@subNodeMappings[name='ED_ExternalAttribute']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[element.eContainer(environment::Namespace)/]">
                <subModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='SOA%20Views']/@ownedRepresentations[name='DTO%20Diagram']"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="Reused Tools" domainClass="overview.Root" preconditionExpression="false">
      <defaultLayer name="Default">
        <toolSections name="Usability Tools">
          <ownedTools xsi:type="tool:DirectEditLabel" documentation="Edit the name feature of the element" name="Reused Name Direct Edit" forceRefresh="true">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:arg0"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="org.obeonetwork.dsl.environment.design.services.DeleteServices"/>
    <ownedJavaExtensions qualifiedClassName="org.obeonetwork.dsl.environment.design.services.DesignServices"/>
    <ownedJavaExtensions qualifiedClassName="org.obeonetwork.dsl.environment.design.services.EnvironmentLabelServices"/>
    <ownedJavaExtensions qualifiedClassName="org.obeonetwork.utils.sirius.services.EObjectUtils"/>
    <ownedJavaExtensions qualifiedClassName="org.obeonetwork.dsl.environment.design.services.PropertiesServices"/>
    <ownedJavaExtensions qualifiedClassName="org.obeonetwork.dsl.environment.design.services.ReferencesService"/>
    <ownedJavaExtensions qualifiedClassName="org.obeonetwork.dsl.environment.design.services.TypesServices"/>
    <ownedJavaExtensions qualifiedClassName="org.obeonetwork.dsl.environment.design.services.UIServices"/>
    <ownedJavaExtensions qualifiedClassName="org.obeonetwork.dsl.soa.design.services.EcoreService"/>
    <ownedJavaExtensions qualifiedClassName="org.obeonetwork.dsl.soa.design.services.SOALabelService"/>
    <ownedJavaExtensions qualifiedClassName="org.obeonetwork.dsl.soa.design.services.SOAService"/>
    <ownedJavaExtensions qualifiedClassName="org.obeonetwork.dsl.soa.design.services.SOAValidators"/>
  </ownedViewpoints>
  <userColorsPalettes name="Palette">
    <entries xsi:type="description:UserFixedColor" red="209" green="209" blue="209" name="Namespace_background"/>
    <entries xsi:type="description:UserFixedColor" red="255" green="255" blue="255" name="Namespace_foreground"/>
    <entries xsi:type="description:UserFixedColor" red="0" green="0" blue="0" name="Namespace_color"/>
    <entries xsi:type="description:UserFixedColor" red="136" green="136" blue="136" name="Namespace_border"/>
    <entries xsi:type="description:UserFixedColor" red="209" green="156" blue="84" name="StructuredType_background"/>
    <entries xsi:type="description:UserFixedColor" red="255" green="255" blue="255" name="StructuredType_foreground"/>
    <entries xsi:type="description:UserFixedColor" red="0" green="0" blue="0" name="StructuredType_color"/>
    <entries xsi:type="description:UserFixedColor" red="128" green="64" blue="0" name="StructuredType_border"/>
    <entries xsi:type="description:UserFixedColor" red="255" green="245" blue="181" name="Enumeration_background"/>
    <entries xsi:type="description:UserFixedColor" red="255" green="255" blue="255" name="Enumeration_foreground"/>
    <entries xsi:type="description:UserFixedColor" red="0" green="0" blue="0" name="Enumeration_color"/>
    <entries xsi:type="description:UserFixedColor" red="214" green="197" blue="66" name="Enumeration_border"/>
    <entries xsi:type="description:UserFixedColor" red="253" green="206" blue="137" name="ExternalType_background"/>
    <entries xsi:type="description:UserFixedColor" red="255" green="255" blue="255" name="ExternalType_foreground"/>
    <entries xsi:type="description:UserFixedColor" red="0" green="0" blue="0" name="ExternalType_color"/>
    <entries xsi:type="description:UserFixedColor" red="252" green="175" blue="62" name="ExternalType_border"/>
    <entries xsi:type="description:UserFixedColor" red="253" green="206" blue="137" name="ExternalNamespace_background"/>
    <entries xsi:type="description:UserFixedColor" red="255" green="255" blue="255" name="ExternalNamespace_foreground"/>
    <entries xsi:type="description:UserFixedColor" red="0" green="0" blue="0" name="ExternalNamespace_color"/>
    <entries xsi:type="description:UserFixedColor" red="252" green="175" blue="62" name="ExternalNamespace_border"/>
  </userColorsPalettes>
  <extensions xsi:type="properties:ViewExtensionDescription" name="Properties">
    <metamodels href="http://www.obeonetwork.org/dsl/soa/3.0.0#/"/>
    <metamodels href="http://www.obeonetwork.org/dsl/environment/3.0.0#/"/>
    <categories name="Default Category">
      <pages name="DTO Page" labelExpression="DTO" domainClass="environment::DTO" semanticCandidateExpression="var:self">
        <groups href="platform:/plugin/org.obeonetwork.dsl.environment.properties/description/environment-properties.odesign#//@extensions.0/@categories.0/@groups.0"/>
      </pages>
    </categories>
    <categories name="Component">
      <pages name="Operation Page" labelExpression="Operation" domainClass="soa::Operation" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.1/@groups.0"/>
      <pages name="Component Page" labelExpression="Component" domainClass="soa::Component" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.1/@groups.1"/>
      <pages name="Service Page" labelExpression="Service" domainClass="soa::Service" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.1/@groups.2"/>
      <pages name="Wire Page" labelExpression="Wire" domainClass="soa::Wire" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.1/@groups.3"/>
      <pages name="Parameter Page" labelExpression="Parameter" domainClass="soa::Parameter" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.1/@groups.4"/>
      <pages name="Component Exposition Page" labelExpression="Exposition" domainClass="soa::Component" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.1/@groups.12 //@extensions.0/@categories.1/@groups.14 //@extensions.0/@categories.1/@groups.15 //@extensions.0/@categories.1/@groups.16"/>
      <pages name="Service Exposition Page" labelExpression="Exposition" domainClass="soa::Service" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.1/@groups.5 //@extensions.0/@categories.1/@groups.8"/>
      <pages name="Operation Exposition Page" labelExpression="Exposition" domainClass="soa::Operation" semanticCandidateExpression="var:self" preconditionExpression="aql:self.eContainer(soa::Service).kind=soa::InterfaceKind::provided and self.exposition&lt;>soa::ExpositionKind::NONE" groups="//@extensions.0/@categories.1/@groups.6 //@extensions.0/@categories.1/@groups.8 //@extensions.0/@categories.1/@groups.9 //@extensions.0/@categories.1/@groups.11"/>
      <pages name="Parameter Exposition Page" labelExpression="Exposition" domainClass="soa::Parameter" semanticCandidateExpression="var:self" preconditionExpression="aql:self.eContainer(soa::Service).kind=soa::InterfaceKind::provided and self.exposition&lt;>soa::ExpositionKind::NONE" groups="//@extensions.0/@categories.1/@groups.7 //@extensions.0/@categories.1/@groups.8 //@extensions.0/@categories.1/@groups.17"/>
      <pages name="Security Scheme Page" labelExpression="Security Scheme" domainClass="soa::SecurityScheme" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.1/@groups.10"/>
      <pages name="Component Security Schemes Page" labelExpression="Security Schemes" domainClass="soa::Component" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.1/@groups.13"/>
      <pages name="MediaType Page" labelExpression="Media type" domainClass="soa::MediaType" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.1/@groups.18"/>
      <pages name="Example Page" labelExpression="Example" domainClass="soa::Example" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.1/@groups.19"/>
      <groups name="Operation Group" labelExpression="Properties" domainClass="soa::Operation" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="soa::Operation name" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
          </initialOperation>
          <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('name').lowerBound = 1">
            <style>
              <labelFontFormat>bold</labelFontFormat>
            </style>
          </conditionalStyles>
        </controls>
        <controls xsi:type="properties:CheckboxDescription" name="soa::Operation public" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('public'))" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('public'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('public').changeable" valueExpression="aql:self.public">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="public" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:CheckboxDescription" name="soa::Operation paged" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('paged'))" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('paged'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('paged').changeable" valueExpression="feature:paged">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="paged" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="soa::Operation exposition" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('exposition')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('exposition'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('exposition').changeable" valueExpression="aql:self.eClass().getEStructuralFeature('exposition').eType.getEEnumLiteralByLiteral(self.exposition.toString())" candidatesExpression="aql:self.eClass().getEStructuralFeature('exposition').eType.eLiterals" candidateDisplayExpression="aql:candidate.literal">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.setExpositionKind(newValue.instance)"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="soa::Operation description" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('description')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('description'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('description').changeable" valueExpression="aql:self.description">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="description" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="Component Group" labelExpression="Properties" domainClass="soa::Component" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="soa::Component name" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
          </initialOperation>
          <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('name').lowerBound = 1">
            <style>
              <labelFontFormat>bold</labelFontFormat>
            </style>
          </conditionalStyles>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="soa::Component description" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('description')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('description'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('description').changeable" valueExpression="aql:self.description">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="description" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:CheckboxDescription" name="soa::Component deprecated" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('deprecated'))" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('deprecated'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('deprecated').changeable" valueExpression="aql:self.deprecated">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="deprecated" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="Service Group" labelExpression="Properties" domainClass="soa::Service" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:SelectDescription" name="soa::Service synchronization" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('synchronization')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('synchronization'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('synchronization').changeable" valueExpression="aql:self.eClass().getEStructuralFeature('synchronization').eType.getEEnumLiteralByLiteral(self.synchronization.toString())" candidatesExpression="aql:self.eClass().getEStructuralFeature('synchronization').eType.eLiterals" candidateDisplayExpression="aql:candidate.literal">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="synchronization" valueExpression="aql:newValue.instance"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="soa::Service kind" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('kind')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('kind'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('kind').changeable" valueExpression="aql:self.eClass().getEStructuralFeature('kind').eType.getEEnumLiteralByLiteral(self.kind.toString())" candidatesExpression="aql:self.eClass().getEStructuralFeature('kind').eType.eLiterals" candidateDisplayExpression="aql:candidate.literal">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="kind" valueExpression="aql:newValue.instance"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="soa::Component name" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
          </initialOperation>
          <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('name').lowerBound = 1">
            <style>
              <labelFontFormat>bold</labelFontFormat>
            </style>
          </conditionalStyles>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="soa::Component description" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('description')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('description'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('description').changeable" valueExpression="aql:self.description">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="description" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="Wire Group" labelExpression="Properties" domainClass="soa::Wire" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:CustomDescription" name="org.obeonetwork.is.eef.custom.reference" label="soa::Component source" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('source')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('source'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('source').changeable">
          <customExpressions name="referenceNameExpression" customExpression="aql:'source'"/>
        </controls>
        <controls xsi:type="properties:CustomDescription" name="org.obeonetwork.is.eef.custom.reference" label="soa::Component dest" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('dest')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('dest'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('dest').changeable">
          <customExpressions name="referenceNameExpression" customExpression="aql:'dest'"/>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="soa::Component description" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('description')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('description'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('description').changeable" valueExpression="aql:self.description">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="description" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="Parameter Group" labelExpression="Properties" domainClass="soa::Parameter" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="soa::Component name" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
          </initialOperation>
          <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('name').lowerBound = 1">
            <style>
              <labelFontFormat>bold</labelFontFormat>
            </style>
          </conditionalStyles>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="soa::Parameter multiplicity" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('multiplicity')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('multiplicity'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('multiplicity').changeable" valueExpression="aql:self.eClass().getEStructuralFeature('multiplicity').eType.getEEnumLiteralByLiteral(self.multiplicity.toString())" candidatesExpression="aql:self.eClass().getEStructuralFeature('multiplicity').eType.eLiterals" candidateDisplayExpression="aql:candidate.literal">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="multiplicity" valueExpression="aql:newValue.instance"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:CheckboxDescription" name="soa::Parameter isUnique" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('isUnique'))" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('isUnique'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('isUnique').changeable" valueExpression="feature:isUnique">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="isUnique" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:CheckboxDescription" name="soa::Parameter isOrdered" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('isOrdered'))" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('isOrdered'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('isOrdered').changeable" valueExpression="aql:self.isOrdered">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="isOrdered" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:CustomDescription" name="org.obeonetwork.is.eef.custom.reference" label="soa::Parameter type" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('type')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('type'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('type').changeable">
          <customExpressions name="referenceNameExpression" customExpression="aql:'type'"/>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="soa::Component description" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('description')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('description'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('description').changeable" valueExpression="aql:self.description">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="description" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="Service Exposition Group" labelExpression="Exposition" domainClass="soa::Service" semanticCandidateExpression="var:self" preconditionExpression="aql:self.kind=soa::InterfaceKind::provided">
        <controls xsi:type="properties:TextDescription" name="soa::Service URI" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('URI')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('URI'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('URI').changeable" valueExpression="aql:self.URI">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="URI" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="Operation Exposition Group" labelExpression="Exposition" domainClass="soa::Operation" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="soa::Operation URI" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('URI')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('URI'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('URI').changeable" valueExpression="aql:self.URI">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="URI" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="soa::Operation verb" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('verb')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('verb'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('verb').changeable" valueExpression="aql:self.eClass().getEStructuralFeature('verb').eType.getEEnumLiteralByLiteral(self.verb.toString())" candidatesExpression="aql:self.eClass().getEStructuralFeature('verb').eType.eLiterals" candidateDisplayExpression="aql:candidate.literal">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="verb" valueExpression="aql:newValue.instance"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="Parameter Exposition Group" labelExpression="Exposition" domainClass="soa::Parameter" semanticCandidateExpression="var:self" preconditionExpression="aql:self.eContainer(soa::Service).kind=soa::InterfaceKind::provided">
        <controls xsi:type="properties:ContainerDescription">
          <controls xsi:type="properties:DynamicMappingForDescription" iterator="single" iterableExpression="aql:Sequence{self}" forceRefresh="true">
            <ifs name="Is input parameter" predicateExpression="aql:single.eContainingFeature().name='input'">
              <widget xsi:type="properties:SelectDescription" name="soa::ParameterRestData passingMode" labelExpression="aql:input.emfEditServices(single.restData).getText(single.restData.eClass().getEStructuralFeature('passingMode')) + ':'" helpExpression="aql:input.emfEditServices(single.restData).getDescription(single.restData.eClass().getEStructuralFeature('passingMode'))" isEnabledExpression="aql:single.restData.eClass().getEStructuralFeature('passingMode').changeable" valueExpression="aql:single.restData.eClass().getEStructuralFeature('passingMode').eType.getEEnumLiteralByLiteral(single.restData.passingMode.toString())" candidatesExpression="aql:single.restData.eClass().getEStructuralFeature('passingMode').eType.eLiterals" candidateDisplayExpression="aql:candidate.literal">
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:single.restData">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="passingMode" valueExpression="aql:newValue.instance"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs name="Is input parameter and passingMode=BODY" predicateExpression="aql:single.eContainingFeature().name='input' and single.restData.passingMode=soa::ParameterPassingMode::BODY">
              <widget xsi:type="properties:TextDescription" name="soa::ParameterRestData restId BODY" labelExpression="aql:input.emfEditServices(single.restData).getText(single.restData.eClass().getEStructuralFeature('restId')) + ':'" helpExpression="aql:input.emfEditServices(single.restData).getDescription(single.restData.eClass().getEStructuralFeature('restId'))" isEnabledExpression="aql:false" valueExpression="aql:'body'">
                <initialOperation/>
              </widget>
            </ifs>
            <ifs name="Is input parameter and passingMode=PATH" predicateExpression="aql:single.eContainingFeature().name='input' and single.restData.passingMode=soa::ParameterPassingMode::PATH">
              <widget xsi:type="properties:SelectDescription" name="soa::ParameterRestData restId PATH" labelExpression="aql:input.emfEditServices(single.restData).getText(single.restData.eClass().getEStructuralFeature('restId')) + ':'" helpExpression="aql:input.emfEditServices(single.restData).getDescription(single.restData.eClass().getEStructuralFeature('restId'))" isEnabledExpression="aql:single.restData.eClass().getEStructuralFeature('restId').changeable" valueExpression="aql:single.restData.restId" candidatesExpression="aql:single.eContainer(soa::Operation).getParamIdsFromURI()" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:single.restData">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="restId" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs name="Is input parameter and passingMode=COOKIE or QUERY or HEADER" predicateExpression="aql:single.eContainingFeature().name='input' and Sequence{soa::ParameterPassingMode::COOKIE,soa::ParameterPassingMode::QUERY,soa::ParameterPassingMode::HEADER}->includes(single.restData.passingMode)">
              <widget xsi:type="properties:TextDescription" name="soa::ParameterRestData restId COOKIE QUERY HEADER" labelExpression="aql:input.emfEditServices(single.restData).getText(single.restData.eClass().getEStructuralFeature('restId')) + ':'" helpExpression="aql:input.emfEditServices(single.restData).getDescription(single.restData.eClass().getEStructuralFeature('restId'))" isEnabledExpression="aql:single.restData.eClass().getEStructuralFeature('restId').changeable" valueExpression="aql:single.restData.restId">
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:single.restData">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="restId" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs name="Is output or fault parameter" predicateExpression="aql:single.eContainingFeature().name='output' or single.eContainingFeature().name='fault'">
              <widget xsi:type="properties:TextDescription" name="soa::Parameter statusCode" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('statusCode')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('statusCode'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('statusCode').changeable" valueExpression="aql:self.statusCode">
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.setStatusCode(newValue)"/>
                </initialOperation>
              </widget>
            </ifs>
            <ifs name="Is output or fault parameter" predicateExpression="aql:single.eContainingFeature().name='output' or single.eContainingFeature().name='fault'">
              <widget xsi:type="properties:ButtonDescription" name="soa::Parameter statusCode button" buttonLabelExpression="...">
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:single.openStatusCodeSelectionDialog()"/>
                </initialOperation>
              </widget>
            </ifs>
            <ifs name="Is output or fault parameter" predicateExpression="aql:single.eContainingFeature().name='output' or single.eContainingFeature().name='fault'">
              <widget xsi:type="properties:TextAreaDescription" name="soa::Parameter statusMessage" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('statusMessage')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('statusMessage'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('statusMessage').changeable" valueExpression="aql:self.statusMessage">
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:SetValue" featureName="statusMessage" valueExpression="var:newValue"/>
                </initialOperation>
              </widget>
            </ifs>
          </controls>
          <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="2"/>
        </controls>
        <validationSet>
          <propertyValidationRules name="Invalid rest id" level="ERROR" message="The rest id is not defined in the operation URI." targets="//@extensions.0/@categories.1/@groups.7/@controls.0/@controls.0/@ifs.2/@widget">
            <audits auditExpression="aql:self.eContainer(soa::Operation).getParamIdsFromURI()->includes(self.restData.restId)"/>
          </propertyValidationRules>
        </validationSet>
      </groups>
      <groups name="Exposition Not Applicable Group" labelExpression="Properties" domainClass="environment::ObeoDSMObject" semanticCandidateExpression="var:self" preconditionExpression="aql:self.eContainerOrSelf(soa::Service)&lt;>null and self.eContainerOrSelf(soa::Service).kind=soa::InterfaceKind::required">
        <controls xsi:type="properties:LabelDescription" name="Exposition Parameters Not Applicable Label" labelExpression="Exposition parameters not available on a required service."/>
      </groups>
      <groups name="Operation Input Parameters Exposition Group" labelExpression="Input Parameters" domainClass="soa::Operation" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ContainerDescription">
          <controls xsi:type="properties:DynamicMappingForDescription" iterator="restData" iterableExpression="aql:self.input.restData" forceRefresh="true">
            <ifs name="true" predicateExpression="aql:true">
              <widget xsi:type="properties:LabelDescription" name="restData.eContainer(soa::Parameter).name" valueExpression="aql:restData.eContainer(soa::Parameter).name"/>
            </ifs>
            <ifs name="true" predicateExpression="aql:true">
              <widget xsi:type="properties:SelectDescription" name="soa::ParameterRestData passingMode" labelExpression="aql:input.emfEditServices(restData).getText(restData.eClass().getEStructuralFeature('passingMode')) + ':'" helpExpression="aql:input.emfEditServices(restData).getDescription(restData.eClass().getEStructuralFeature('passingMode'))" isEnabledExpression="aql:restData.eClass().getEStructuralFeature('passingMode').changeable" valueExpression="aql:restData.eClass().getEStructuralFeature('passingMode').eType.getEEnumLiteralByLiteral(restData.passingMode.toString())" candidatesExpression="aql:restData.eClass().getEStructuralFeature('passingMode').eType.eLiterals" candidateDisplayExpression="aql:candidate.literal">
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:restData">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="passingMode" valueExpression="aql:newValue.instance"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs name="passingMode=BODY" predicateExpression="aql:restData.passingMode=soa::ParameterPassingMode::BODY">
              <widget xsi:type="properties:TextDescription" name="soa::ParameterRestData restId BODY" labelExpression="aql:input.emfEditServices(restData).getText(restData.eClass().getEStructuralFeature('restId')) + ':'" helpExpression="aql:input.emfEditServices(restData).getDescription(restData.eClass().getEStructuralFeature('restId'))" isEnabledExpression="aql:false" valueExpression="aql:'body'">
                <initialOperation/>
              </widget>
            </ifs>
            <ifs name="passingMode=PATH" predicateExpression="aql:restData.passingMode=soa::ParameterPassingMode::PATH">
              <widget xsi:type="properties:SelectDescription" name="soa::ParameterRestData restId PATH" labelExpression="aql:input.emfEditServices(restData).getText(restData.eClass().getEStructuralFeature('restId')) + ':'" helpExpression="aql:input.emfEditServices(restData).getDescription(restData.eClass().getEStructuralFeature('restId'))" isEnabledExpression="aql:restData.eClass().getEStructuralFeature('restId').changeable" valueExpression="aql:restData.restId" candidatesExpression="aql:restData.eContainer(soa::Operation).getParamIdsFromURI()" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:restData">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="restId" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs name="passingMode=COOKIE or QUERY or HEADER" predicateExpression="aql:Sequence{soa::ParameterPassingMode::COOKIE,soa::ParameterPassingMode::QUERY,soa::ParameterPassingMode::HEADER}->includes(restData.passingMode)">
              <widget xsi:type="properties:TextDescription" name="soa::ParameterRestData restId COOKIE QUERY HEADER" labelExpression="aql:input.emfEditServices(restData).getText(restData.eClass().getEStructuralFeature('restId')) + ':'" helpExpression="aql:input.emfEditServices(restData).getDescription(restData.eClass().getEStructuralFeature('restId'))" isEnabledExpression="aql:restData.eClass().getEStructuralFeature('restId').changeable" valueExpression="aql:restData.restId">
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:restData">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="restId" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
          </controls>
          <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="3"/>
        </controls>
        <validationSet>
          <propertyValidationRules name="Invalid rest id" level="ERROR" message="The rest id is not defined in the operation URI." targets="//@extensions.0/@categories.1/@groups.9/@controls.0/@controls.0/@ifs.3/@widget">
            <audits auditExpression="aql:self.getParamIdsFromURI()->includes(restData.restId)"/>
          </propertyValidationRules>
        </validationSet>
      </groups>
      <groups name="SecurityScheme Group" labelExpression="Properties" domainClass="soa::SecurityScheme" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="soa::SecurityScheme key" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('key')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('key'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('key').changeable" valueExpression="aql:self.key">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="key" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="soa::SecurityScheme type" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('type')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('type'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('type').changeable" valueExpression="aql:self.eClass().getEStructuralFeature('type').eType.getEEnumLiteralByLiteral(self.type.toString())" candidatesExpression="aql:self.eClass().getEStructuralFeature('type').eType.eLiterals" candidateDisplayExpression="aql:candidate.literal">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="aql:newValue.instance"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="soa::SecurityScheme description" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('description')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('description'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('description').changeable" valueExpression="aql:self.description">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="description" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="soa::SecurityScheme name" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="soa::SecurityScheme apiKeyLocation" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('apiKeyLocation')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('apiKeyLocation'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('apiKeyLocation').changeable" valueExpression="aql:self.eClass().getEStructuralFeature('apiKeyLocation').eType.getEEnumLiteralByLiteral(self.apiKeyLocation.toString())" candidatesExpression="aql:self.eClass().getEStructuralFeature('apiKeyLocation').eType.eLiterals" candidateDisplayExpression="aql:candidate.literal">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="apiKeyLocation" valueExpression="aql:newValue.instance"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="Operation Security Group" labelExpression="Security" domainClass="soa::Operation" semanticCandidateExpression="var:self" preconditionExpression="aql:self.eContainer(soa::Component).securitySchemes->notEmpty()">
        <controls xsi:type="properties:CustomDescription" name="org.obeonetwork.is.eef.custom.reference" label="soa::Operation securitySchemes" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('securitySchemes')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('securitySchemes'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('securitySchemes').changeable">
          <customExpressions name="referenceNameExpression" customExpression="securitySchemes"/>
          <customExpressions name="hideAddButtonExpression" customExpression="aql:true"/>
          <customOperations name="browseButtonOperation">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ExternalJavaAction" name="soa::Operation securitySchemes ReferenceEdition" id="org.obeonetwork.dsl.environment.design.actions.PaneBasedReferenceEditionWizard">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:returnCode='OK'">
                  <subModelOperations xsi:type="tool_1:Unset" featureName="securitySchemes" elementExpression="feature:securitySchemes"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="securitySchemes" valueExpression="var:selectedElements"/>
                </subModelOperations>
                <parameters name="windowTitle" value="Security Schemes Selection"/>
                <parameters name="message" value="Select the Security Schemes requirements for this operation."/>
                <parameters name="candidates" value="aql:self.eContainer(soa::Component).securitySchemes"/>
                <parameters name="referenceName" value="aql:'securitySchemes'"/>
                <parameters name="choiceOfValuesMessage" value="Available Security Schemes"/>
                <parameters name="selectedValuesMessage" value="Selected Security Schemes"/>
              </firstModelOperations>
            </initialOperation>
          </customOperations>
        </controls>
      </groups>
      <groups name="Component Exposition Group" labelExpression="Exposition" domainClass="soa::Component" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="soa::System URL" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('URL')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('URL'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('URL').changeable" valueExpression="aql:self.URL">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="URL" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="soa::Component URI" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('URI')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('URI'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('URI').changeable" valueExpression="aql:self.URI">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="URI" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <validationSet>
          <propertyValidationRules name=" soa::Component Exposition URL Validation" level="WARNING" message="Invalid URL" targets="//@extensions.0/@categories.1/@groups.12/@controls.0">
            <audits auditExpression="aql:self.URL.isValidURL()"/>
          </propertyValidationRules>
        </validationSet>
      </groups>
      <groups name="Component Security Schemes Group" labelExpression="Security Schemes" domainClass="soa::Component" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:CustomDescription" name="org.obeonetwork.is.eef.custom.reference" label="soa::Component Security Schemes" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('securitySchemes')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('securitySchemes'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('securitySchemes').changeable">
          <customExpressions name="referenceNameExpression" customExpression="securitySchemes"/>
          <customOperations name="addButtonOperation">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="soa::SecurityScheme" referenceName="securitySchemes" variableName="securityScheme">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Security Scheme Creation">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:RemoveElement"/>
                    </initialOperation>
                  </buttons>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation/>
                  </buttons>
                  <page name="Security Scheme Edition Dialog Page" labelExpression="Security Scheme" domainClass="soa::SecurityScheme" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@pages.9"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </customOperations>
          <customOperations name="onDoubleClickOperation">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:selection->first()">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Security Scheme Properties">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                    <initialOperation/>
                  </buttons>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation/>
                  </buttons>
                  <page name="Security Scheme Edition Dialog Page" labelExpression="Security Scheme" domainClass="soa::SecurityScheme" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@pages.9"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </customOperations>
        </controls>
      </groups>
      <groups name="Component Information Group" labelExpression="Information" domainClass="soa::Component" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="soa::Component Information Version" labelExpression="aql:input.emfEditServices(self.information).getText(self.information.eClass().getEStructuralFeature('version')) + ':'" helpExpression="aql:input.emfEditServices(self.information).getDescription(self.information.eClass().getEStructuralFeature('version'))" valueExpression="aql:self.information.version">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.information">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="version" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="soa::Component Information TermsOfService" labelExpression="aql:input.emfEditServices(self.information).getText(self.information.eClass().getEStructuralFeature('termsOfService')) + ':'" helpExpression="aql:input.emfEditServices(self.information).getDescription(self.information.eClass().getEStructuralFeature('termsOfService'))" valueExpression="aql:self.information.termsOfService">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.information">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="termsOfService" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <validationSet>
          <propertyValidationRules name=" soa::Component Information TOS Validation" level="WARNING" message="Invalid URL" targets="//@extensions.0/@categories.1/@groups.14/@controls.1">
            <audits auditExpression="aql:self.information.termsOfService.isValidURL()"/>
          </propertyValidationRules>
        </validationSet>
      </groups>
      <groups name="Component Contact Group" labelExpression="Contact" domainClass="soa::Component" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="soa::Component Contact Name" labelExpression="aql:input.emfEditServices(self.contact).getText(self.contact.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self.contact).getDescription(self.contact.eClass().getEStructuralFeature('name')) " valueExpression="aql:self.contact.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.contact">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="soa::Component Contact URL" labelExpression="aql:input.emfEditServices(self.contact).getText(self.contact.eClass().getEStructuralFeature('URL')) + ':'" helpExpression="aql:input.emfEditServices(self.contact).getDescription(self.contact.eClass().getEStructuralFeature('URL')) " valueExpression="aql:self.contact.URL">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.contact">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="URL" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="soa::Component Contact Email" labelExpression="aql:input.emfEditServices(self.contact).getText(self.contact.eClass().getEStructuralFeature('email')) + ':'" helpExpression="aql:input.emfEditServices(self.contact).getDescription(self.contact.eClass().getEStructuralFeature('email'))" valueExpression="aql:self.contact.email">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.contact">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="email" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <validationSet>
          <propertyValidationRules name="soa::Component Contact URL Validation" level="WARNING" message="Invalid URL" targets="//@extensions.0/@categories.1/@groups.15/@controls.1">
            <audits auditExpression="aql:self.contact.URL.isValidURL()"/>
          </propertyValidationRules>
          <propertyValidationRules name="soa::Component Contact Email Validation" level="WARNING" message="Invalid Email" targets="//@extensions.0/@categories.1/@groups.15/@controls.2">
            <audits auditExpression="aql:self.contact.email.isValidEmail()"/>
          </propertyValidationRules>
        </validationSet>
      </groups>
      <groups name="Component License Group" labelExpression="License" domainClass="soa::Component" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="soa::Component License Name" labelExpression="aql:input.emfEditServices(self.license).getText(self.license.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self.license).getDescription(self.license.eClass().getEStructuralFeature('name'))" valueExpression="aql:self.license.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.license">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="soa::Component License URL" labelExpression="aql:input.emfEditServices(self.license).getText(self.license.eClass().getEStructuralFeature('URL')) + ':'" helpExpression="aql:input.emfEditServices(self.license).getDescription(self.license.eClass().getEStructuralFeature('URL'))" valueExpression="aql:self.license.URL">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.license">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="URL" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <validationSet>
          <propertyValidationRules name="soa::Component License URL Validation" level="WARNING" message="Invalid URL" targets="//@extensions.0/@categories.1/@groups.16/@controls.1">
            <audits auditExpression="aql:self.license.URL.isValidURL()"/>
          </propertyValidationRules>
        </validationSet>
      </groups>
      <groups name="Parameter MediaType Properties Group" labelExpression="Media Type" domainClass="soa::Parameter" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:CustomDescription" name="org.obeonetwork.is.eef.custom.reference" labelExpression="Media Types:" helpExpression="The media types this parameter relies on.">
          <customExpressions name="referenceNameExpression" customExpression="aql:'mediaType'"/>
          <customExpressions name="referenceDisplayExpression" customExpression="aql:candidate.identifier"/>
          <customOperations name="addButtonOperation">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="soa::MediaType" referenceName="mediaType">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="New Media Type">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                      <initialOperation/>
                    </buttons>
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation/>
                    </buttons>
                    <page name="New Media Type Page" labelExpression="Media type" domainClass="soa::MediaType" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@pages.11"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </customOperations>
          <customOperations name="onDoubleClickOperation">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:selection->first()">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Edit MediaType Dialog">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                    <initialOperation/>
                  </buttons>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation/>
                  </buttons>
                  <page name="Edit MediaType Page" labelExpression="Media Type" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@pages.11"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </customOperations>
        </controls>
      </groups>
      <groups name="MediaType Group" labelExpression="Properties" domainClass="soa::MediaType" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ContainerDescription" name="MediaType Container">
          <controls xsi:type="properties:TextDescription" name="media type identifier" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('identifier'))+':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('identifier'))" valueExpression="aql:self.identifier">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.setNewMediaTypeIdentifier(newValue)"/>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:ButtonDescription" name="soa::MediaType commonIdentifiers button" helpExpression="Displays a list of common mediatypes." buttonLabelExpression="...">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.openCommonIdentifiersSelectionDialog()"/>
            </initialOperation>
          </controls>
          <layout xsi:type="properties:FillLayoutDescription" orientation="HORIZONTAL"/>
        </controls>
        <controls xsi:type="properties:CustomDescription" name="org.obeonetwork.is.eef.custom.reference" labelExpression="aql:'Examples:'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('examples'))">
          <customExpressions name="referenceNameExpression" customExpression="aql:'examples'"/>
          <customOperations name="addButtonOperation">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="soa::Example" referenceName="examples" variableName="newExample">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newExample">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="New Example Dialog">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                      <initialOperation/>
                    </buttons>
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation/>
                    </buttons>
                    <page name="New Example Page" labelExpression="Example" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@pages.12"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </customOperations>
          <customOperations name="onDoubleClickOperation">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:selection->first()">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Edit Example Dialog">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                    <initialOperation/>
                  </buttons>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation/>
                  </buttons>
                  <page name="Default Page" labelExpression="Example" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@pages.12"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </customOperations>
        </controls>
        <validationSet>
          <propertyValidationRules name="mediaTypeIdentifier prefix validator" level="WARNING" message="Invalid identifier type " targets="//@extensions.0/@categories.1/@groups.18/@controls.0/@controls.0">
            <audits auditExpression="aql:self.isValidPrefix()"/>
          </propertyValidationRules>
          <propertyValidationRules name="mediaTypeIdentifier suffix validator" level="WARNING" message="Invalid identifier suffix" targets="//@extensions.0/@categories.1/@groups.18/@controls.0/@controls.0">
            <audits auditExpression="aql:self.isValidSuffix()"/>
          </propertyValidationRules>
        </validationSet>
      </groups>
      <groups name="Example Group" labelExpression="Properties" domainClass="soa::Example" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="soa::Example name text" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name'))+':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" valueExpression="aql:self.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="soa::Example summary text" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('summary'))+':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('summary'))" valueExpression="aql:self.summary">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="summary" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="soa::Example description text " labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('description'))+':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('description'))" valueExpression="aql:self.description">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="description" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="soa::Example value textarea" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('value'))+':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('value'))+':'" valueExpression="aql:self.value">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:newValue"/>
          </initialOperation>
        </controls>
      </groups>
    </categories>
  </extensions>
</description:Group>
