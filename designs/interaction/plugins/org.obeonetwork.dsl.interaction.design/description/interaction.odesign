<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/sequence/description/2.0.0" xmlns:properties="http://www.eclipse.org/sirius/properties/1.0.0" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/diagram/sequence/description/tool/2.0.0" xmlns:tool_2="http://www.eclipse.org/sirius/description/tool/1.1.0" documentation="Copyright (c) 2008, 2021 Obeo.&#xD;&#xA;All rights reserved. This program and the accompanying materials&#xD;&#xA;are made available under the terms of the Eclipse Public License v1.0&#xD;&#xA;which accompanies this distribution, and is available at&#xD;&#xA;http://www.eclipse.org/legal/epl-v10.html&#xD;&#xA;&#xD;&#xA;Contributors:&#xD;&#xA;   Obeo - initial API and implementation" name="interaction" version="12.0.0.2017041100">
  <ownedViewpoints endUserDocumentation="The &lt;b>Interaction&lt;/b> viewpoint provides one representation : &#xD;&#xA;&lt;ul>&#xD;&#xA;&lt;li>&lt;b>Sequence Diagram&lt;/b> : a diagram allowing to visualise and edit interactions.&lt;/li>&#xD;&#xA;&lt;/ul>&#xA;" name="Interaction">
    <ownedRepresentations xsi:type="description_1:SequenceDiagramDescription" dropDescriptions="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Usability']/@subSections[name='Participant']/@ownedTools[name='DAD_Participant']" name="Sequence Diagram" domainClass="interaction.Interaction" rootExpression="[if behaviours->size() > 0 then behaviours->first() else self endif/]" endsOrdering="[ends->iterate(element; result : Sequence(interaction::End) = Sequence{} | if eventEnds->includes(element) then result->including(element) else result endif)/]" instanceRolesOrdering="null">
      <metamodel href="platform:/plugin/org.obeonetwork.dsl.environment/model/environment.ecore#/"/>
      <metamodel href="platform:/plugin/org.obeonetwork.dsl.interaction/model/interaction.ecore#/"/>
      <defaultLayer name="Default">
        <nodeMappings xsi:type="description_1:InstanceRoleMapping" name="SD_Participant" deletionDescription="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Usability']/@subSections[name='Participant']/@ownedTools[name='DEL_Participant']" labelDirectEdit="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Usability']/@subSections[name='Participant']/@ownedTools[name='EDT_Participant']" semanticCandidatesExpression="feature:participants" semanticElements="[self.toString().concat('s')/]" synchronizationLock="true" domainClass="interaction.Participant">
          <borderedNodeMappings xsi:type="description_1:ExecutionMapping" name="SD_Lifeline" semanticCandidatesExpression="var:self" semanticElements="var:self" domainClass="interaction.Participant" startingEndFinderExpression="var:self" finishingEndFinderExpression="var:self">
            <borderedNodeMappings xsi:type="description_1:ExecutionMapping" name="SD_Execution" deletionDescription="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Usability']/@subSections[name='Execution']/@ownedTools[name='DEL_Execution']" semanticCandidatesExpression="[currentParticipant().getDirectEventsOn(self.oclAsType(ecore::EObject))/]" semanticElements="var:self" domainClass="interaction.Execution" reusedBorderedNodeMappings="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='SD_Participant']/@borderedNodeMappings[name='SD_Lifeline']/@borderedNodeMappings[name='SD_Execution'] //@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='SD_Participant']/@borderedNodeMappings[name='SD_Lifeline']/@borderedNodeMappings[name='SD_StateInvariant']" startingEndFinderExpression="feature:startingEnd" finishingEndFinderExpression="feature:finishingEnd">
              <style xsi:type="style:SquareDescription" borderSizeComputationExpression="1" borderColor="//@userColorsPalettes[name='Palette']/@entries[name='ISDBorder']" labelExpression="" labelColor="//@userColorsPalettes[name='Palette']/@entries[name='ISDLabelAndEdge']" resizeKind="NORTH_SOUTH" width="2" height="5" color="//@userColorsPalettes[name='Palette']/@entries[name='EntityLightGrey']"/>
            </borderedNodeMappings>
            <borderedNodeMappings xsi:type="description_1:EndOfLifeMapping" name="SD_EndOfLine" preconditionExpression="[isPointedByDestroyMessage()=true/]" deletionDescription="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Usability']/@subSections[name='Participant']/@ownedTools[name='DEL_EndOfLife']" semanticCandidatesExpression="var:self" semanticElements="var:self" synchronizationLock="true" domainClass="interaction.Participant">
              <style xsi:type="style:WorkspaceImageDescription" labelExpression="" sizeComputationExpression="4" arcWidth="1" arcHeight="1" workspacePath="/org.obeonetwork.dsl.interaction.design/images/eol.png">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </borderedNodeMappings>
            <borderedNodeMappings xsi:type="description_1:EndOfLifeMapping" name="SD_EndOfLine_Redim" preconditionExpression="[isPointedByDestroyMessage()=false/]" deletionDescription="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Usability']/@subSections[name='Participant']/@ownedTools[name='DEL_EndOfLife']" semanticCandidatesExpression="var:self" semanticElements="var:self" synchronizationLock="true" domainClass="interaction.Participant">
              <style xsi:type="style:EllipseNodeDescription" borderColor="//@userColorsPalettes[name='Palette']/@entries[name='ISDBorder']" labelExpression="" labelColor="//@userColorsPalettes[name='Palette']/@entries[name='ISDLabelAndEdge']" sizeComputationExpression="1" color="//@userColorsPalettes[name='Palette']/@entries[name='EntityLightGrey']" horizontalDiameterComputationExpression="1" verticalDiameterComputationExpression="1"/>
            </borderedNodeMappings>
            <borderedNodeMappings xsi:type="description_1:StateMapping" name="SD_StateInvariant" deletionDescription="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Usability']/@subSections[name='StateInvariant']/@ownedTools[name='DEL_StateInvariant']" labelDirectEdit="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Usability']/@subSections[name='StateInvariant']/@ownedTools[name='EDT_StateInvariant']" semanticCandidatesExpression="[currentParticipant().getDirectEventsOn(self.oclAsType(ecore::EObject))/]" semanticElements="var:self" synchronizationLock="true" domainClass="interaction.StateInvariant" startingEndFinderExpression="feature:startingEnd" finishingEndFinderExpression="feature:finishingEnd">
              <style xsi:type="style:WorkspaceImageDescription" showIcon="false" sizeComputationExpression="10" labelPosition="node" resizeKind="NSEW" arcWidth="1" arcHeight="1" workspacePath="/org.obeonetwork.dsl.interaction.design/images/state_invariant.png">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </borderedNodeMappings>
            <style xsi:type="style:SquareDescription" borderSizeComputationExpression="3" borderColor="//@userColorsPalettes[name='Palette']/@entries[name='ISDBorder']" showIcon="false" labelExpression="" labelColor="//@userColorsPalettes[name='Palette']/@entries[name='ISDLabelAndEdge']" resizeKind="NORTH_SOUTH" width="1" height="40">
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
          </borderedNodeMappings>
          <style xsi:type="style:SquareDescription" borderColor="//@userColorsPalettes[name='Palette']/@entries[name='ISDBorder']" showIcon="false" labelExpression="service:getParticipantLabel" labelColor="//@userColorsPalettes[name='Palette']/@entries[name='ISDLabelAndEdge']" sizeComputationExpression="" labelPosition="node" resizeKind="NSEW" width="12" height="5">
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </nodeMappings>
        <edgeMappings xsi:type="description_1:BasicMessageMapping" name="SD_CallMessage" deletionDescription="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Usability']/@subSections[name='Message']/@ownedTools[name='DEL_Message']" labelDirectEdit="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Usability']/@subSections[name='Message']/@ownedTools[name='EDT_Message']" semanticCandidatesExpression="feature:messages" semanticElements="var:self" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='SD_Participant']/@borderedNodeMappings[name='SD_Lifeline'] //@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='SD_Participant']/@borderedNodeMappings[name='SD_Lifeline']/@borderedNodeMappings[name='SD_Execution']" targetMapping="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='SD_Participant']/@borderedNodeMappings[name='SD_Lifeline'] //@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='SD_Participant']/@borderedNodeMappings[name='SD_Lifeline']/@borderedNodeMappings[name='SD_Execution']" targetFinderExpression="service:getReceivingContext" sourceFinderExpression="service:getSendingContext" domainClass="interaction.CallMessage" useDomainElement="true" sendingEndFinderExpression="feature:startingEnd" receivingEndFinderExpression="feature:finishingEnd">
          <style strokeColor="//@userColorsPalettes[name='Palette']/@entries[name='ISDLabelAndEdge']">
            <centerLabelStyleDescription labelExpression="feature:name" labelColor="//@userColorsPalettes[name='Palette']/@entries[name='ISDLabelAndEdge']"/>
          </style>
        </edgeMappings>
        <edgeMappings xsi:type="description_1:ReturnMessageMapping" name="SD_ReturnMessage" deletionDescription="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Usability']/@subSections[name='Message']/@ownedTools[name='DEL_Message']" labelDirectEdit="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Usability']/@subSections[name='Message']/@ownedTools[name='EDT_Message']" semanticCandidatesExpression="feature:messages" semanticElements="var:self" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='SD_Participant']/@borderedNodeMappings[name='SD_Lifeline'] //@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='SD_Participant']/@borderedNodeMappings[name='SD_Lifeline']/@borderedNodeMappings[name='SD_Execution']" targetMapping="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='SD_Participant']/@borderedNodeMappings[name='SD_Lifeline'] //@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='SD_Participant']/@borderedNodeMappings[name='SD_Lifeline']/@borderedNodeMappings[name='SD_Execution']" targetFinderExpression="service:getReceivingContext" sourceFinderExpression="service:getSendingContext" domainClass="interaction.ReturnMessage" useDomainElement="true" sendingEndFinderExpression="feature:startingEnd" receivingEndFinderExpression="feature:finishingEnd" invocationMessageFinderExpression="feature:invocationMessage">
          <style strokeColor="//@userColorsPalettes[name='Palette']/@entries[name='ISDLabelAndEdge']" lineStyle="dot">
            <centerLabelStyleDescription labelExpression="feature:name" labelColor="//@userColorsPalettes[name='Palette']/@entries[name='ISDLabelAndEdge']"/>
          </style>
        </edgeMappings>
        <edgeMappings xsi:type="description_1:CreationMessageMapping" name="SD_CreateParticipantMessage" deletionDescription="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Usability']/@subSections[name='Message']/@ownedTools[name='DEL_Message']" labelDirectEdit="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Usability']/@subSections[name='Message']/@ownedTools[name='EDT_Message']" semanticCandidatesExpression="feature:messages" semanticElements="var:self" sourceMapping="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='SD_Participant']/@borderedNodeMappings[name='SD_Lifeline'] //@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='SD_Participant']/@borderedNodeMappings[name='SD_Lifeline']/@borderedNodeMappings[name='SD_Execution']" targetMapping="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='SD_Participant']" targetFinderExpression="service:getReceivingContext" sourceFinderExpression="service:getSendingContext" domainClass="interaction.CreateParticipantMessage" useDomainElement="true" sendingEndFinderExpression="feature:startingEnd" receivingEndFinderExpression="feature:finishingEnd">
          <style strokeColor="//@userColorsPalettes[name='Palette']/@entries[name='ISDLabelAndEdge']" lineStyle="dash" sizeComputationExpression="2">
            <centerLabelStyleDescription labelExpression="feature:name" labelColor="//@userColorsPalettes[name='Palette']/@entries[name='ISDLabelAndEdge']"/>
          </style>
        </edgeMappings>
        <edgeMappings xsi:type="description_1:DestructionMessageMapping" name="SD_DestroyParticipantMessage" deletionDescription="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Usability']/@subSections[name='Message']/@ownedTools[name='DEL_Message']" labelDirectEdit="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.0/@subSections[name='Usability']/@subSections[name='Message']/@ownedTools[name='EDT_Message']" semanticCandidatesExpression="feature:messages" semanticElements="var:self" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='SD_Participant']/@borderedNodeMappings[name='SD_Lifeline'] //@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='SD_Participant']/@borderedNodeMappings[name='SD_Lifeline']/@borderedNodeMappings[name='SD_Execution']" targetMapping="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='SD_Participant']/@borderedNodeMappings[name='SD_Lifeline']/@borderedNodeMappings[name='SD_EndOfLine']" targetFinderExpression="service:getReceivingContext" sourceFinderExpression="service:getSendingContext" domainClass="interaction.DestroyParticipantMessage" useDomainElement="true" sendingEndFinderExpression="feature:startingEnd" receivingEndFinderExpression="feature:finishingEnd">
          <style strokeColor="//@userColorsPalettes[name='Palette']/@entries[name='ISDLabelAndEdge']" lineStyle="dot">
            <centerLabelStyleDescription labelExpression="feature:name" labelColor="//@userColorsPalettes[name='Palette']/@entries[name='ISDLabelAndEdge']"/>
          </style>
        </edgeMappings>
        <containerMappings xsi:type="description_1:InteractionUseMapping" name="SD_InteractionUse" detailDescriptions="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.1/@subSections[name='Usability']/@subSections[name='Navigation']/@ownedTools[name='CRENAV_To_UsedInteraction']" navigationDescriptions="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.1/@subSections[name='Usability']/@subSections[name='Navigation']/@ownedTools[name='NAV_To_UsedInteraction']" preconditionExpression="[coveredParticipants->size() > 0/]" deletionDescription="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.1/@subSections[name='Usability']/@subSections[name='InteractionUse']/@ownedTools[name='DEL_InteractionUse']" labelDirectEdit="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.1/@subSections[name='Usability']/@subSections[name='InteractionUse']/@ownedTools[name='EDT_InteractionUse']" semanticCandidatesExpression="feature:interactionUses" semanticElements="var:self" doubleClickDescription="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.1/@subSections[name='Usability']/@subSections[name='Navigation']/@ownedTools[name='DBL_Goto_Interaction_Diagram']" synchronizationLock="true" domainClass="interaction.InteractionUse" startingEndFinderExpression="feature:startingEnd" finishingEndFinderExpression="feature:finishingEnd" coveredLifelinesExpression="feature:coveredParticipants" centerLabelExpression="['call(' + self.oclAsType(interaction::InteractionUse).interaction.name + ')'/]">
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" labelExpression="feature:type" labelAlignment="LEFT">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.0"/>
          </style>
        </containerMappings>
        <containerMappings xsi:type="description_1:CombinedFragmentMapping" name="SD_CombinedFragment" preconditionExpression="[coveredParticipants->size() > 0/]" deletionDescription="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.1/@subSections[name='Usability']/@subSections[name='CombinedFragment']/@ownedTools[name='DEL_CombinedFragment']" labelDirectEdit="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.1/@subSections[name='Usability']/@subSections[name='CombinedFragment']/@ownedTools[name='EDT_CombinedFragment']" semanticCandidatesExpression="feature:combinedFragments" semanticElements="var:self" synchronizationLock="true" domainClass="interaction.CombinedFragment" startingEndFinderExpression="feature:startingEnd" finishingEndFinderExpression="feature:finishingEnd" coveredLifelinesExpression="feature:coveredParticipants">
          <subContainerMappings xsi:type="description_1:OperandMapping" name="SD_Operand" deletionDescription="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.1/@subSections[name='Usability']/@subSections[name='CombinedFragment']/@ownedTools[name='DEL_Operand']" labelDirectEdit="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.1/@subSections[name='Usability']/@subSections[name='CombinedFragment']/@ownedTools[name='EDT_Operand']" semanticCandidatesExpression="feature:ownedOperands" semanticElements="var:self" domainClass="interaction.Operand" startingEndFinderExpression="feature:startingEnd" finishingEndFinderExpression="feature:finishingEnd">
            <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" borderColor="//@userColorsPalettes[name='Palette']/@entries[name='ISDBorder']" showIcon="false" labelExpression="['[' + name + ']'/]" labelColor="//@userColorsPalettes[name='Palette']/@entries[name='ISDLabelAndEdge']" labelAlignment="LEFT" backgroundStyle="GradientTopToBottom">
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" borderColor="//@userColorsPalettes[name='Palette']/@entries[name='ISDBorder']" showIcon="false" labelExpression="feature:operator" labelColor="//@userColorsPalettes[name='Palette']/@entries[name='ISDLabelAndEdge']" labelAlignment="LEFT">
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.0"/>
          </style>
        </containerMappings>
        <toolSections name="Tools">
          <ownedTools xsi:type="tool:ToolGroup" name="GRP_Participant">
            <tools xsi:type="tool_1:InstanceRoleCreationTool" name="CRE_Participant" label="Participant" nodeMappings="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='SD_Participant']">
              <variable name="variable"/>
              <viewVariable name="viewVariable"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.Participant" referenceName="participants">
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['newParticipant'+eContainer(interaction::Interaction).participants->size()/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move participant" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="var:self"/>
                    <parameters name="referenceName" value="participants"/>
                    <parameters name="element" value="var:instance"/>
                    <parameters name="predecessor" value="service:getPredecessor(predecessor)"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
              <predecessor name="predecessor"/>
            </tools>
            <tools xsi:type="tool_1:InstanceRoleCreationTool" name="CRE_TypedParticipant" label="Typed Participant" nodeMappings="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='SD_Participant']">
              <variable name="variable"/>
              <viewVariable name="viewVariable"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.Participant" referenceName="participants">
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['newParticipant'+eContainer(interaction::Interaction).participants->size()/]"/>
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="type" valueExpression="var:participantType"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move participant" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="var:self"/>
                    <parameters name="referenceName" value="participants"/>
                    <parameters name="element" value="var:instance"/>
                    <parameters name="predecessor" value="service:getPredecessor(predecessor)"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
              <predecessor name="predecessor"/>
            </tools>
          </ownedTools>
          <ownedTools xsi:type="tool:ToolGroup" name="CRE_Messages">
            <tools xsi:type="tool_1:MessageCreationTool" name="CRE_SimpleCallMessage" label="Call" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@edgeMappings[name='SD_CallMessage']">
              <sourceVariable name="source"/>
              <targetVariable name="target"/>
              <sourceViewVariable name="sourceView"/>
              <targetViewVariable name="targetView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_2:ChangeContext" browseExpression="[source.eContainer(interaction::Interaction)/]">
                  <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.CallMessage" referenceName="messages" variableName="callMsg">
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['m' + eContainer(interaction::Interaction).messages->size()/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.End" referenceName="ends" variableName="sendingEnd">
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="context" valueExpression="service:source.currentParticipant()"/>
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="owner" valueExpression="var:callMsg"/>
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['send_' + oclAsType(End).owner.name/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.End" referenceName="ends" variableName="receivingEnd">
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="context" valueExpression="service:target.currentParticipant()"/>
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="owner" valueExpression="var:callMsg"/>
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['receive_' + oclAsType(End).owner.name/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:callMsg">
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="startingEnd" valueExpression="var:sendingEnd"/>
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="finishingEnd" valueExpression="var:receivingEnd"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move $sendingEnd" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="var:self"/>
                    <parameters name="referenceName" value="ends"/>
                    <parameters name="element" value="var:sendingEnd"/>
                    <parameters name="predecessor" value="[if not startingEndPredecessor.oclIsUndefined() then startingEndPredecessor.oclAsType(sequence::ordering::EventEnd).semanticEnd else null endif/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move $receivingEnd" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="var:self"/>
                    <parameters name="referenceName" value="ends"/>
                    <parameters name="element" value="var:receivingEnd"/>
                    <parameters name="predecessor" value="[callMsg.oclAsType(interaction::CallMessage).startingEnd/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:callMsg">
                    <subModelOperations xsi:type="tool_2:ExternalJavaActionCall" name="Adjust new call message position" action="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Reorder%20InteractionFragments']/@onEventMovedOperation/@firstModelOperations/@subModelOperations.2/@subModelOperations.2"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
              <startingEndPredecessor name="startingEndPredecessor"/>
              <finishingEndPredecessor name="finishingEndPredecessor"/>
            </tools>
            <tools xsi:type="tool_1:MessageCreationTool" name="CRE_SyncCallMessage" label="Sync Call" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@edgeMappings[name='SD_CallMessage']">
              <sourceVariable name="source"/>
              <targetVariable name="target"/>
              <sourceViewVariable name="sourceView"/>
              <targetViewVariable name="targetView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_2:ChangeContext" browseExpression="[source.eContainer(interaction::Interaction)/]">
                  <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.CallMessage" referenceName="messages" variableName="callMsg">
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['m' + eContainer(interaction::Interaction).messages->size()/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.Execution" referenceName="executions" variableName="newExecution">
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="owner" valueExpression="service:target.currentParticipant()"/>
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['e' + eContainer(interaction::Interaction).executions->size()/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.ReturnMessage" referenceName="messages" variableName="returnMsg">
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="invocationMessage" valueExpression="var:callMsg"/>
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['m_return' + eContainer(interaction::Interaction).messages->size()/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.End" referenceName="ends" variableName="sendingEnd">
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="context" valueExpression="service:source.currentParticipant()"/>
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="owner" valueExpression="var:callMsg"/>
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['send_' + oclAsType(End).owner.name/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.CompoundEnd" referenceName="ends" variableName="startExec">
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="context" valueExpression="service:target.currentParticipant()"/>
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="owner" valueExpression="var:newExecution"/>
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="otherOwner" valueExpression="var:callMsg"/>
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['start_' + oclAsType(End).owner.name/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.CompoundEnd" referenceName="ends" variableName="endExec">
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="context" valueExpression="service:target.currentParticipant()"/>
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="owner" valueExpression="var:newExecution"/>
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="otherOwner" valueExpression="var:returnMsg"/>
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['finish_' + oclAsType(End).owner.name/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.End" referenceName="ends" variableName="receivingEnd">
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="context" valueExpression="[sendingEnd.oclAsType(interaction::End)._context/]"/>
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="owner" valueExpression="var:returnMsg"/>
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['receive_' + oclAsType(End).owner.name/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:callMsg">
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="startingEnd" valueExpression="var:sendingEnd"/>
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="finishingEnd" valueExpression="var:startExec"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:newExecution">
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="startingEnd" valueExpression="var:startExec"/>
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="finishingEnd" valueExpression="var:endExec"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:returnMsg">
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="startingEnd" valueExpression="var:endExec"/>
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="finishingEnd" valueExpression="var:receivingEnd"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move $startExec" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="var:self"/>
                    <parameters name="referenceName" value="ends"/>
                    <parameters name="element" value="var:startExec"/>
                    <parameters name="predecessor" value="[if not finishingEndPredecessor.oclIsUndefined() then finishingEndPredecessor.oclAsType(sequence::ordering::EventEnd).semanticEnd else null endif/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move $sendingEnd" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="var:self"/>
                    <parameters name="referenceName" value="ends"/>
                    <parameters name="element" value="var:sendingEnd"/>
                    <parameters name="predecessor" value="[if not startingEndPredecessor.oclIsUndefined() then startingEndPredecessor.oclAsType(sequence::ordering::EventEnd).semanticEnd else null endif/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move $endExec" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="var:self"/>
                    <parameters name="referenceName" value="ends"/>
                    <parameters name="element" value="var:endExec"/>
                    <parameters name="predecessor" value="var:startExec"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move $receivingEnd" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="var:self"/>
                    <parameters name="referenceName" value="ends"/>
                    <parameters name="element" value="var:receivingEnd"/>
                    <parameters name="predecessor" value="var:endExec"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:callMsg">
                    <subModelOperations xsi:type="tool_2:ExternalJavaActionCall" name="Adjust new call message position" action="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Reorder%20InteractionFragments']/@onEventMovedOperation/@firstModelOperations/@subModelOperations.2/@subModelOperations.2"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:newExecution">
                    <subModelOperations xsi:type="tool_2:ExternalJavaActionCall" name="Adjust new execution position" action="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Reorder%20InteractionFragments']/@onEventMovedOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.2"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:returnMsg">
                    <subModelOperations xsi:type="tool_2:ExternalJavaActionCall" name="Adjust new return message position" action="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Reorder%20InteractionFragments']/@onEventMovedOperation/@firstModelOperations/@subModelOperations.2/@subModelOperations.2"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
              <startingEndPredecessor name="startingEndPredecessor"/>
              <finishingEndPredecessor name="finishingEndPredecessor"/>
            </tools>
            <tools xsi:type="tool_1:MessageCreationTool" name="CRE_AsyncCallMessage" label="Async Call" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@edgeMappings[name='SD_CallMessage']">
              <sourceVariable name="source"/>
              <targetVariable name="target"/>
              <sourceViewVariable name="sourceView"/>
              <targetViewVariable name="targetView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_2:ChangeContext" browseExpression="[source.eContainer(interaction::Interaction)/]">
                  <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.CallMessage" referenceName="messages" variableName="callMsg">
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['m' + eContainer(interaction::Interaction).messages->size()/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.Execution" referenceName="executions" variableName="newExecution">
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="owner" valueExpression="service:target.currentParticipant()"/>
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['e' + eContainer(interaction::Interaction).executions->size()/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.End" referenceName="ends" variableName="sendingEnd">
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="context" valueExpression="service:source.currentParticipant()"/>
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="owner" valueExpression="var:callMsg"/>
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['send_' + oclAsType(End).owner.name/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.CompoundEnd" referenceName="ends" variableName="startExec">
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="context" valueExpression="service:target.currentParticipant()"/>
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="owner" valueExpression="var:newExecution"/>
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="otherOwner" valueExpression="var:callMsg"/>
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['start_' + oclAsType(End).owner.name/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.End" referenceName="ends" variableName="endExec">
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="context" valueExpression="service:target.currentParticipant()"/>
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="owner" valueExpression="var:newExecution"/>
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['finish_' + oclAsType(End).owner.name/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:callMsg">
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="startingEnd" valueExpression="var:sendingEnd"/>
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="finishingEnd" valueExpression="var:startExec"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:newExecution">
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="startingEnd" valueExpression="var:startExec"/>
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="finishingEnd" valueExpression="var:endExec"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move $startExec" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="var:self"/>
                    <parameters name="referenceName" value="ends"/>
                    <parameters name="element" value="var:startExec"/>
                    <parameters name="predecessor" value="[if not finishingEndPredecessor.oclIsUndefined() then finishingEndPredecessor.oclAsType(sequence::ordering::EventEnd).semanticEnd else null endif/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move $sendingEnd" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="var:self"/>
                    <parameters name="referenceName" value="ends"/>
                    <parameters name="element" value="var:sendingEnd"/>
                    <parameters name="predecessor" value="[if not startingEndPredecessor.oclIsUndefined() then startingEndPredecessor.oclAsType(sequence::ordering::EventEnd).semanticEnd else null endif/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move $endExec" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="var:self"/>
                    <parameters name="referenceName" value="ends"/>
                    <parameters name="element" value="var:endExec"/>
                    <parameters name="predecessor" value="var:startExec"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:callMsg">
                    <subModelOperations xsi:type="tool_2:ExternalJavaActionCall" name="Adjust new call message position" action="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Reorder%20InteractionFragments']/@onEventMovedOperation/@firstModelOperations/@subModelOperations.2/@subModelOperations.2"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:newExecution">
                    <subModelOperations xsi:type="tool_2:ExternalJavaActionCall" name="Adjust new execution position" action="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Reorder%20InteractionFragments']/@onEventMovedOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.2"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
              <startingEndPredecessor name="startingEndPredecessor"/>
              <finishingEndPredecessor name="finishingEndPredecessor"/>
            </tools>
          </ownedTools>
          <ownedTools xsi:type="tool_1:MessageCreationTool" name="CRE_ReturnMessage" label="Return" edgeMappings="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@edgeMappings[name='SD_ReturnMessage']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="source"/>
            <targetViewVariable name="target"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_2:ChangeContext" browseExpression="[source.eContainer(interaction::Interaction)/]">
                <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.ReturnMessage" referenceName="messages" variableName="newMessage"/>
                <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.End" referenceName="ends" variableName="sendingEnd">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="owner" valueExpression="var:newMessage"/>
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="context" valueExpression="service:source.currentParticipant()"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.End" referenceName="ends" variableName="receivingEnd">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="owner" valueExpression="var:newMessage"/>
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="context" valueExpression="service:target.currentParticipant()"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:newMessage">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="startingEnd" valueExpression="var:sendingEnd"/>
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="finishingEnd" valueExpression="var:receivingEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move receivingEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:receivingEnd"/>
                  <parameters name="predecessor" value="[if not finishingEndPredecessor.oclIsUndefined() then finishingEndPredecessor.oclAsType(sequence::ordering::EventEnd).semanticEnd else null endif/]"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move sendingEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:sendingEnd"/>
                  <parameters name="predecessor" value="[if not startingEndPredecessor.oclIsUndefined() then startingEndPredecessor.oclAsType(sequence::ordering::EventEnd).semanticEnd else null endif/]"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:newMessage">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['m_return' + eContainer(interaction::Interaction).messages->size()/]"/>
                  <subModelOperations xsi:type="tool_2:ExternalJavaActionCall" name="Adjust new return message position" action="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Reorder%20InteractionFragments']/@onEventMovedOperation/@firstModelOperations/@subModelOperations.2/@subModelOperations.2"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:sendingEnd">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['send_' + getMessage().name/]"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:receivingEnd">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['receive_' + getMessage().name/]"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:MessageCreationTool" name="CRE_CreateParticipantMessage" label="Create" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@edgeMappings[name='SD_CreateParticipantMessage']" extraTargetMappings="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='SD_Participant']/@borderedNodeMappings[name='SD_Lifeline']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_2:ChangeContext" browseExpression="[source.eContainer(interaction::Interaction)/]">
                <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.CreateParticipantMessage" referenceName="messages" variableName="newMessage"/>
                <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.End" referenceName="ends" variableName="sendingEnd">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="owner" valueExpression="var:newMessage"/>
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="context" valueExpression="service:source.currentParticipant()"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.End" referenceName="ends" variableName="receivingEnd">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="owner" valueExpression="var:newMessage"/>
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="context" valueExpression="service:target.currentParticipant()"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:newMessage">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="startingEnd" valueExpression="var:sendingEnd"/>
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="finishingEnd" valueExpression="var:receivingEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move sendingEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:sendingEnd"/>
                  <parameters name="predecessor" value="[if not startingEndPredecessor.oclIsUndefined() then startingEndPredecessor.oclAsType(sequence::ordering::EventEnd).semanticEnd else null endif/]"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move receivingEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:receivingEnd"/>
                  <parameters name="predecessor" value="[newMessage.oclAsType(Message).startingEnd/]"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:newMessage">
                  <subModelOperations xsi:type="tool_2:ExternalJavaActionCall" name="Adjust new call message position" action="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Reorder%20InteractionFragments']/@onEventMovedOperation/@firstModelOperations/@subModelOperations.2/@subModelOperations.2"/>
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['m_create' + eContainer(Interaction).messages->size()/]"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:sendingEnd">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['send_' + getMessage().name/]"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:receivingEnd">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['receive_' + getMessage().name/]"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:MessageCreationTool" name="CRE_DestroyParticipantMessage" label="Destroy" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@edgeMappings[name='SD_DestroyParticipantMessage']" extraTargetMappings="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='SD_Participant']/@borderedNodeMappings[name='SD_Lifeline']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_2:ChangeContext" browseExpression="[source.eContainer(interaction::Interaction)/]">
                <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='SD_Participant']/@borderedNodeMappings[name='SD_Lifeline']/@borderedNodeMappings[name='SD_EndOfLine']" containerViewExpression="var:targetView"/>
                <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.DestroyParticipantMessage" referenceName="messages" variableName="newMessage"/>
                <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.End" referenceName="ends" variableName="sendingEnd">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="owner" valueExpression="var:newMessage"/>
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="context" valueExpression="service:source.currentParticipant()"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.End" referenceName="ends" variableName="receivingEnd">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="owner" valueExpression="var:newMessage"/>
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="context" valueExpression="service:target.currentParticipant()"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:newMessage">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="startingEnd" valueExpression="var:sendingEnd"/>
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="finishingEnd" valueExpression="var:receivingEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move sendingEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:sendingEnd"/>
                  <parameters name="predecessor" value="[if not startingEndPredecessor.oclIsUndefined() then startingEndPredecessor.oclAsType(sequence::ordering::EventEnd).semanticEnd else null endif/]"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move receivingEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:receivingEnd"/>
                  <parameters name="predecessor" value="[newMessage.oclAsType(Message).startingEnd/]"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:newMessage">
                  <subModelOperations xsi:type="tool_2:ExternalJavaActionCall" name="Adjust new call message position" action="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Reorder%20InteractionFragments']/@onEventMovedOperation/@firstModelOperations/@subModelOperations.2/@subModelOperations.2"/>
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['m_destroy' + eContainer(Interaction).messages->size()/]"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:sendingEnd">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['send_' + getMessage().name/]"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:receivingEnd">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['receive_' + getMessage().name/]"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ExecutionCreationTool" name="CRE_Execution" label="Execution" nodeMappings="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='SD_Participant']/@borderedNodeMappings[name='SD_Lifeline']/@borderedNodeMappings[name='SD_Execution']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_2:ChangeContext" browseExpression="[eContainer(Interaction)/]">
                <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.Execution" referenceName="executions" variableName="newExecution">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="owner" valueExpression="[container.oclAsType(Participant).currentParticipant()/]"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.End" referenceName="ends" variableName="startingEnd">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="owner" valueExpression="var:newExecution"/>
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="context" valueExpression="[newExecution.owner/]"/>
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['start_' + _context.name/]"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.End" referenceName="ends" variableName="finishingEnd">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="owner" valueExpression="var:newExecution"/>
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="context" valueExpression="[newExecution.owner/]"/>
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['finish_' + _context.name/]"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:newExecution">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="startingEnd" valueExpression="var:startingEnd"/>
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="finishingEnd" valueExpression="var:finishingEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move finishingEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:finishingEnd"/>
                  <parameters name="predecessor" value="[if not finishingEndPredecessor.oclIsUndefined() then finishingEndPredecessor.oclAsType(sequence::ordering::EventEnd).semanticEnd else null endif/]"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move startingEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:startingEnd"/>
                  <parameters name="predecessor" value="[if not startingEndPredecessor.oclIsUndefined() then startingEndPredecessor.oclAsType(sequence::ordering::EventEnd).semanticEnd else null endif/]"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:newExecution">
                  <subModelOperations xsi:type="tool_2:ExternalJavaActionCall" name="Adjust new execution position" action="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Reorder%20InteractionFragments']/@onEventMovedOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.2"/>
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['e' + eContainer(interaction::Interaction).executions->size()/]"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:startingEnd">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['start_' + getExecution().name/]"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:finishingEnd">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['finish_' + getExecution().name/]"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:StateCreationTool" name="CRE_StateInvariant" label="State Invariant" nodeMappings="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='SD_Participant']/@borderedNodeMappings[name='SD_Lifeline']/@borderedNodeMappings[name='SD_StateInvariant']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_2:ChangeContext" browseExpression="[eContainer(Interaction)/]">
                <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.StateInvariant" referenceName="stateInvariants" variableName="newState">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="owner" valueExpression="[container.oclAsType(Participant).currentParticipant()/]"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.End" referenceName="ends" variableName="startingEnd">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="owner" valueExpression="var:newState"/>
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="context" valueExpression="[newState.owner/]"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.End" referenceName="ends" variableName="finishingEnd">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="owner" valueExpression="var:newState"/>
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="context" valueExpression="[newState.owner/]"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:newState">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="startingEnd" valueExpression="var:startingEnd"/>
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="finishingEnd" valueExpression="var:finishingEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move finishingEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:finishingEnd"/>
                  <parameters name="predecessor" value="[if not finishingEndPredecessor.oclIsUndefined() then finishingEndPredecessor.oclAsType(sequence::ordering::EventEnd).semanticEnd else null endif/]"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move startingEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:startingEnd"/>
                  <parameters name="predecessor" value="[if not startingEndPredecessor.oclIsUndefined() then startingEndPredecessor.oclAsType(sequence::ordering::EventEnd).semanticEnd else null endif/]"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:newState">
                  <subModelOperations xsi:type="tool_2:ExternalJavaActionCall" name="Adjust new state position" action="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Reorder%20InteractionFragments']/@onEventMovedOperation/@firstModelOperations/@subModelOperations.1/@subModelOperations.2"/>
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['s' + eContainer(Interaction).stateInvariants->size()/]"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:startingEnd">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['start_' + getStateInvariant().name/]"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:finishingEnd">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['finish_' + getStateInvariant().name/]"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ReorderTool" name="Reorder InteractionFragments" mappings="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@edgeMappings[name='SD_CallMessage'] //@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@edgeMappings[name='SD_CreateParticipantMessage'] //@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@edgeMappings[name='SD_DestroyParticipantMessage'] //@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@containerMappings[name='SD_InteractionUse'] //@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='SD_Participant']/@borderedNodeMappings[name='SD_Lifeline'] //@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='SD_Participant']/@borderedNodeMappings[name='SD_Lifeline']/@borderedNodeMappings[name='SD_Execution'] //@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='SD_Participant']/@borderedNodeMappings[name='SD_Lifeline']/@borderedNodeMappings[name='SD_StateInvariant'] //@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@edgeMappings[name='SD_ReturnMessage'] //@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@containerMappings[name='SD_CombinedFragment'] //@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@containerMappings[name='SD_CombinedFragment']/@subContainerMappings[name='SD_Operand']">
            <startingEndPredecessorAfter name="startingEndPredecessorAfter"/>
            <finishingEndPredecessorAfter name="finishingEndPredecessorAfter"/>
            <onEventMovedOperation>
              <firstModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_2:If" conditionExpression="[oclIsKindOf(Execution)/]">
                  <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move start end" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="[eContainer(Interaction)/]"/>
                    <parameters name="referenceName" value="ends"/>
                    <parameters name="element" value="feature:startingEnd"/>
                    <parameters name="predecessor" value="[if not startingEndPredecessorAfter.oclIsUndefined() then startingEndPredecessorAfter.oclAsType(sequence::ordering::EventEnd).semanticEnd else null endif/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move finish end" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="[eContainer(Interaction)/]"/>
                    <parameters name="referenceName" value="ends"/>
                    <parameters name="element" value="feature:finishingEnd"/>
                    <parameters name="predecessor" value="[if not finishingEndPredecessorAfter.oclIsUndefined() then finishingEndPredecessorAfter.oclAsType(sequence::ordering::EventEnd).semanticEnd else null endif/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Adjust execution position 2" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="[eContainer(Interaction)/]"/>
                    <parameters name="referenceName" value="executions"/>
                    <parameters name="element" value="var:self"/>
                    <parameters name="predecessor" value="service:computePredecessorForExecution"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:If" conditionExpression="[oclIsKindOf(StateInvariant)/]">
                  <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move start end" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="[eContainer(Interaction)/]"/>
                    <parameters name="referenceName" value="ends"/>
                    <parameters name="element" value="feature:startingEnd"/>
                    <parameters name="predecessor" value="[if not startingEndPredecessorAfter.oclIsUndefined() then startingEndPredecessorAfter.oclAsType(sequence::ordering::EventEnd).semanticEnd else null endif/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move finish end" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="[eContainer(Interaction)/]"/>
                    <parameters name="referenceName" value="ends"/>
                    <parameters name="element" value="feature:finishingEnd"/>
                    <parameters name="predecessor" value="[if not finishingEndPredecessorAfter.oclIsUndefined() then finishingEndPredecessorAfter.oclAsType(sequence::ordering::EventEnd).semanticEnd else null endif/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Adjust state position" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="[eContainer(Interaction)/]"/>
                    <parameters name="referenceName" value="stateInvariants"/>
                    <parameters name="element" value="var:self"/>
                    <parameters name="predecessor" value="service:computePredecessorForStateInvariant"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:If" conditionExpression="[oclIsKindOf(Message)/]">
                  <subModelOperations xsi:type="tool_2:If" conditionExpression="feature:finishingEnd">
                    <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move sending end" id="org.eclipse.sirius.business.api.action.moveElement">
                      <parameters name="referenceOwner" value="[eContainer(Interaction)/]"/>
                      <parameters name="referenceName" value="ends"/>
                      <parameters name="element" value="feature:startingEnd"/>
                      <parameters name="predecessor" value="[if not startingEndPredecessorAfter.oclIsUndefined() then startingEndPredecessorAfter.oclAsType(sequence::ordering::EventEnd).semanticEnd else null endif/]"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:If" conditionExpression="feature:startingEnd">
                    <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move receiving end" id="org.eclipse.sirius.business.api.action.moveElement">
                      <parameters name="referenceOwner" value="[eContainer(Interaction)/]"/>
                      <parameters name="referenceName" value="ends"/>
                      <parameters name="element" value="feature:finishingEnd"/>
                      <parameters name="predecessor" value="[if not finishingEndPredecessorAfter.oclIsUndefined() then finishingEndPredecessorAfter.oclAsType(sequence::ordering::EventEnd).semanticEnd else null endif/]"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Adjust message position 2" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="[eContainer(Interaction)/]"/>
                    <parameters name="referenceName" value="messages"/>
                    <parameters name="element" value="var:self"/>
                    <parameters name="predecessor" value="service:computePredecessorForMessage"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:If" conditionExpression="oclIsKindOf(InteractionUse)/]">
                  <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move start end" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="[eContainer(Interaction)/]"/>
                    <parameters name="referenceName" value="ends"/>
                    <parameters name="element" value="feature:startingEnd"/>
                    <parameters name="predecessor" value="[if not startingEndPredecessorAfter.oclIsUndefined() then startingEndPredecessorAfter.oclAsType(sequence::ordering::EventEnd).semanticEnd else null endif/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move finish end" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="[eContainer(Interaction)/]"/>
                    <parameters name="referenceName" value="ends"/>
                    <parameters name="element" value="feature:finishingEnd"/>
                    <parameters name="predecessor" value="[if not finishingEndPredecessorAfter.oclIsUndefined() then finishingEndPredecessorAfter.oclAsType(sequence::ordering::EventEnd).semanticEnd else null endif/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Adjust Interaction Use position" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="[eContainer(Interaction)/]"/>
                    <parameters name="referenceName" value="interactionUses"/>
                    <parameters name="element" value="var:self"/>
                    <parameters name="predecessor" value="service:computePredecessorForInteractionUse"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:If" conditionExpression="[oclIsKindOf(CombinedFragment)/]">
                  <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move start end" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="[eContainer(Interaction)/]"/>
                    <parameters name="referenceName" value="ends"/>
                    <parameters name="element" value="feature:startingEnd"/>
                    <parameters name="predecessor" value="[if not startingEndPredecessorAfter.oclIsUndefined() then startingEndPredecessorAfter.oclAsType(sequence::ordering::EventEnd).semanticEnd else null endif/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move finish end" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="[eContainer(Interaction)/]"/>
                    <parameters name="referenceName" value="ends"/>
                    <parameters name="element" value="feature:finishingEnd"/>
                    <parameters name="predecessor" value="[if not finishingEndPredecessorAfter.oclIsUndefined() then finishingEndPredecessorAfter.oclAsType(sequence::ordering::EventEnd).semanticEnd else null endif/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Adjust CombinedFragment position" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="[eContainer(Interaction)/]"/>
                    <parameters name="referenceName" value="combinedFragments"/>
                    <parameters name="element" value="var:self"/>
                    <parameters name="predecessor" value="service:computePredecessorForCombinedFragment"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:If" conditionExpression="[oclIsKindOf(Operand)/]">
                  <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move start end" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="[eContainer(Interaction)/]"/>
                    <parameters name="referenceName" value="ends"/>
                    <parameters name="element" value="feature:startingEnd"/>
                    <parameters name="predecessor" value="[if not startingEndPredecessorAfter.oclIsUndefined() then startingEndPredecessorAfter.oclAsType(sequence::ordering::EventEnd).semanticEnd else null endif/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Adjust Operand position" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="[eContainer(CombinedFragment)/]"/>
                    <parameters name="referenceName" value="ownedOperands"/>
                    <parameters name="element" value="var:self"/>
                    <parameters name="predecessor" value="service:computePredecessorForOperand"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </onEventMovedOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:InstanceRoleReorderTool" name="Reorder participants" mappings="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='SD_Participant']">
            <predecessorBefore name="predecessorBefore"/>
            <predecessorAfter name="predecessorAfter"/>
            <instanceRoleMoved>
              <firstModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_2:If" conditionExpression="[oclIsKindOf(interaction::Participant)/]">
                  <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move start end" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="[eContainer(Interaction)/]"/>
                    <parameters name="referenceName" value="participants"/>
                    <parameters name="element" value="var:self"/>
                    <parameters name="predecessor" value="service:getPredecessor(predecessorAfter)"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </instanceRoleMoved>
          </ownedTools>
          <ownedTools xsi:type="tool_2:OperationAction" name="OPE_ChangeParent" label="Change parent">
            <view name="views"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:diagram">
                <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="feature:target">
                  <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="service:changeParentForInteraction"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <subSections name="Usability">
            <subSections name="Participant">
              <ownedTools xsi:type="tool:DirectEditLabel" name="EDT_Participant">
                <mask mask="{0}"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="var:arg0"/>
                </initialOperation>
              </ownedTools>
              <ownedTools xsi:type="tool:DeleteElementDescription" name="DEL_Participant">
                <element name="element"/>
                <elementView name="elementView"/>
                <containerView name="containerView"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_2:ChangeContext" browseExpression="[element.deleteParticipant()/]"/>
                </initialOperation>
              </ownedTools>
              <ownedTools xsi:type="tool:DeleteElementDescription" name="DEL_EndOfLife">
                <element name="element"/>
                <elementView name="elementView"/>
                <containerView name="containerView"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:element"/>
                </initialOperation>
              </ownedTools>
              <ownedTools xsi:type="tool:ContainerDropDescription" name="DAD_Participant" precondition="[oclIsTypeOf(ObeoDSMObject)/]" forceRefresh="true" dragSource="PROJECT_EXPLORER">
                <oldContainer name="oldSemanticContainer"/>
                <newContainer name="newSemanticContainer"/>
                <element name="element"/>
                <newViewContainer name="newContainerView"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:newSemanticContainer">
                    <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.Participant" referenceName="participants">
                      <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['newParticipant'+eContainer(interaction::Interaction).participants->size()/]"/>
                      <subModelOperations xsi:type="tool_2:SetValue" featureName="type" valueExpression="var:element"/>
                    </subModelOperations>
                  </firstModelOperations>
                </initialOperation>
              </ownedTools>
            </subSections>
            <subSections name="Message">
              <ownedTools xsi:type="tool:DirectEditLabel" name="EDT_Message">
                <mask mask="{0}"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="feature:startingEnd">
                      <subModelOperations xsi:type="tool_2:If" conditionExpression="[not oclIsTypeOf(CompoundEnd)/]">
                        <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['send_' + args0/]"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="feature:finishingEnd">
                      <subModelOperations xsi:type="tool_2:If" conditionExpression="[not oclIsTypeOf(CompoundEnd)/]">
                        <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['receive_' + args0/]"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="var:arg0"/>
                  </firstModelOperations>
                </initialOperation>
              </ownedTools>
              <ownedTools xsi:type="tool:DeleteElementDescription" name="DEL_Message">
                <element name="element"/>
                <elementView name="elementView"/>
                <containerView name="containerView"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_2:ChangeContext" browseExpression="[element.deleteMessage()/]"/>
                </initialOperation>
              </ownedTools>
            </subSections>
            <subSections name="Execution">
              <ownedTools xsi:type="tool:DeleteElementDescription" name="DEL_Execution">
                <element name="element"/>
                <elementView name="elementView"/>
                <containerView name="containerView"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_2:ChangeContext" browseExpression="[element.deleteExecution()/]"/>
                </initialOperation>
              </ownedTools>
            </subSections>
            <subSections name="StateInvariant">
              <ownedTools xsi:type="tool:DirectEditLabel" name="EDT_StateInvariant">
                <mask mask="{0}"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="var:arg0"/>
                </initialOperation>
              </ownedTools>
              <ownedTools xsi:type="tool:DeleteElementDescription" name="DEL_StateInvariant">
                <element name="element"/>
                <elementView name="elementView"/>
                <containerView name="containerView"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_2:ChangeContext" browseExpression="[element.deleteStateInvariant()/]"/>
                </initialOperation>
              </ownedTools>
            </subSections>
          </subSections>
        </toolSections>
        <toolSections name="Frames">
          <ownedTools xsi:type="tool_1:InteractionUseCreationTool" name="CRE_InteractionUse" label="InteractionUse" containerMappings="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@containerMappings[name='SD_InteractionUse']">
            <variable name="container">
              <subVariables xsi:type="tool_2:SelectModelElementVariable" name="usedInteraction" candidatesExpression="[container.getAllInteractionsInSession()->union(container.getAllInteractionsInSession().ancestors())->asOrderedSet()/]" tree="true" rootExpression="[container.getAllRootsInSession()/]" childrenExpression="feature:eContents" message="Choose an interaction"/>
            </variable>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_2:ChangeContext" browseExpression="[eContainer(Interaction)/]">
                <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.InteractionUse" referenceName="interactionUses" variableName="newIU">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="type" valueExpression="['ref.' + eContainer(Interaction).interactionUses->size()/]"/>
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="interaction" valueExpression="[if usedInteraction.oclIsTypeOf(Interaction) then usedInteraction else null endif/]"/>
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="coveredParticipants" valueExpression="var:coverage"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.End" referenceName="ends" variableName="startingEnd">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['start_' + getInteractionUse().name/]"/>
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="owner" valueExpression="var:newIU"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.End" referenceName="ends" variableName="finishingEnd">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['finish_' + getInteractionUse().name/]"/>
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="owner" valueExpression="var:newIU"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:newIU">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="startingEnd" valueExpression="var:startingEnd"/>
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="finishingEnd" valueExpression="var:finishingEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move finishingEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:finishingEnd"/>
                  <parameters name="predecessor" value="[if not finishingEndPredecessor.oclIsUndefined() then finishingEndPredecessor.oclAsType(sequence::ordering::EventEnd).semanticEnd else null endif/]"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move startingEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:startingEnd"/>
                  <parameters name="predecessor" value="[if not startingEndPredecessor.oclIsUndefined() then startingEndPredecessor.oclAsType(sequence::ordering::EventEnd).semanticEnd else null endif/]"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:newIU">
                  <subModelOperations xsi:type="tool_2:ExternalJavaActionCall" name="Adjust interaction use position" action="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Reorder%20InteractionFragments']/@onEventMovedOperation/@firstModelOperations/@subModelOperations.3/@subModelOperations.2"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
            <coveredLifelines name="coverage"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:CombinedFragmentCreationTool" name="CRE_CombinedFragment" label="Combined Fragment" forceRefresh="true" containerMappings="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@containerMappings[name='SD_CombinedFragment']" extraMappings="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@containerMappings[name='SD_CombinedFragment']/@subContainerMappings[name='SD_Operand']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_2:ChangeContext" browseExpression="[eContainer(Interaction)/]">
                <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.CombinedFragment" referenceName="combinedFragments" variableName="newCF">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="operator" valueExpression="['alt.' + eContainer(Interaction).combinedFragments->size()/]"/>
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="coveredParticipants" valueExpression="var:coverage"/>
                  <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.Operand" referenceName="ownedOperands" variableName="newOperand">
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="condition1"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.End" referenceName="ends" variableName="startCF">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['start_' + newCF.operator/]"/>
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="owner" valueExpression="var:newCF"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.End" referenceName="ends" variableName="finishCF">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['finish_' + newCF.operator/]"/>
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="owner" valueExpression="var:newCF"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.End" referenceName="ends" variableName="newOpEnd">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['start_' + newOperand.name/]"/>
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="owner" valueExpression="var:newOperand"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:newCF">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="startingEnd" valueExpression="var:startCF"/>
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="finishingEnd" valueExpression="var:finishCF"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:newOperand">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="startingEnd" valueExpression="var:newOpEnd"/>
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="finishingEnd" valueExpression="var:finishCF"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move finishCF" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:finishCF"/>
                  <parameters name="predecessor" value="[if not finishingEndPredecessor.oclIsUndefined() then finishingEndPredecessor.oclAsType(sequence::ordering::EventEnd).semanticEnd else null endif/]"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move newOpEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:newOpEnd"/>
                  <parameters name="predecessor" value="[if not startingEndPredecessor.oclIsUndefined() then startingEndPredecessor.oclAsType(sequence::ordering::EventEnd).semanticEnd else null endif/]"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move startCF" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:startCF"/>
                  <parameters name="predecessor" value="[if not startingEndPredecessor.oclIsUndefined() then startingEndPredecessor.oclAsType(sequence::ordering::EventEnd).semanticEnd else null endif/]"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
            <coveredLifelines name="coverage"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:OperandCreationTool" name="CRE_Operand" label="Operand" containerMappings="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@containerMappings[name='SD_CombinedFragment']/@subContainerMappings[name='SD_Operand']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_2:ChangeContext" browseExpression="[eContainer(Interaction)/]">
                <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.Operand" referenceName="ownedOperands" variableName="newOperand">
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['condition.' + eContainer(CombinedFragment).ownedOperands->size()/]"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:CreateInstance" typeName="interaction.End" referenceName="ends" variableName="newOpEnd">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="['start_' + newOperand.name/]"/>
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="owner" valueExpression="var:newOperand"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:newOperand">
                  <subModelOperations xsi:type="tool_2:SetValue" featureName="startingEnd" valueExpression="var:newOpEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move operand start end" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:newOpEnd"/>
                  <parameters name="predecessor" value="[if not startingEndPredecessor.oclIsUndefined() then startingEndPredecessor.oclAsType(sequence::ordering::EventEnd).semanticEnd else null endif/]"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_2:ExternalJavaAction" name="Move operand" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="[newOperand.eContainer()/]"/>
                  <parameters name="referenceName" value="ownedOperands"/>
                  <parameters name="element" value="var:newOperand"/>
                  <parameters name="predecessor" value="[newOperand.computePredecessorForOperand()/]"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
          </ownedTools>
          <subSections name="Usability">
            <subSections name="InteractionUse">
              <ownedTools xsi:type="tool:DirectEditLabel" name="EDT_InteractionUse">
                <mask mask="{0}"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="type" valueExpression="var:arg0"/>
                  </firstModelOperations>
                </initialOperation>
              </ownedTools>
              <ownedTools xsi:type="tool:DeleteElementDescription" name="DEL_InteractionUse">
                <element name="element"/>
                <elementView name="elementView"/>
                <containerView name="containerView"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_2:ChangeContext" browseExpression="[element.deleteInteractionUse()/]"/>
                </initialOperation>
              </ownedTools>
            </subSections>
            <subSections name="CombinedFragment">
              <ownedTools xsi:type="tool:DirectEditLabel" name="EDT_CombinedFragment">
                <mask mask="{0}"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="operator" valueExpression="var:arg0"/>
                  </firstModelOperations>
                </initialOperation>
              </ownedTools>
              <ownedTools xsi:type="tool:DirectEditLabel" name="EDT_Operand">
                <mask mask="{0}"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="var:arg0"/>
                  </firstModelOperations>
                </initialOperation>
              </ownedTools>
              <ownedTools xsi:type="tool:DeleteElementDescription" name="DEL_CombinedFragment" forceRefresh="true">
                <element name="element"/>
                <elementView name="elementView"/>
                <containerView name="containerView"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_2:ChangeContext" browseExpression="[element.deleteCombinedFragment()/]"/>
                </initialOperation>
              </ownedTools>
              <ownedTools xsi:type="tool:DeleteElementDescription" name="DEL_Operand" forceRefresh="true">
                <element name="element"/>
                <elementView name="elementView"/>
                <containerView name="containerView"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_2:ChangeContext" browseExpression="[element.deleteOperand()/]"/>
                </initialOperation>
              </ownedTools>
            </subSections>
            <subSections name="Navigation">
              <ownedTools xsi:type="tool:DiagramNavigationDescription" name="NAV_To_UsedInteraction" label="Go to Sequence diagram" browseExpression="feature:interaction" navigationNameExpression="[name + ' Sequence Diagram'/]" diagramDescription="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']">
                <containerViewVariable name="containerView"/>
                <containerVariable name="container"/>
                <representationNameVariable name="diagramName"/>
              </ownedTools>
              <ownedTools xsi:type="tool:DiagramCreationDescription" name="CRENAV_To_UsedInteraction" label="Create Sequence diagram" titleExpression="[name + ' Sequence Diagram'/]" browseExpression="feature:interaction" diagramDescription="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']">
                <initialOperation>
                  <firstModelOperations xsi:type="tool_2:ChangeContext" browseExpression="var:self"/>
                </initialOperation>
                <containerViewVariable name="containerView"/>
                <representationNameVariable name="diagramName"/>
              </ownedTools>
              <ownedTools xsi:type="tool:DoubleClickDescription" name="DBL_Goto_Interaction_Diagram" precondition="feature:interaction" mappings="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@containerMappings[name='SD_InteractionUse']">
                <element name="element"/>
                <elementView name="elementView"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_2:ChangeContext" browseExpression="[element.interaction/]">
                    <subModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']"/>
                  </firstModelOperations>
                </initialOperation>
              </ownedTools>
            </subSections>
          </subSections>
        </toolSections>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.type.getMetamodelRootPackageName()='soa'">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='SD_Participant']/@style" referenceName="color" value="//@userColorsPalettes[name='Palette']/@entries[name='SoaFillDark']"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.type.getMetamodelRootPackageName()='entity'">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='SD_Participant']/@style" referenceName="color" value="//@userColorsPalettes[name='Palette']/@entries[name='EntityFillDark']"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.type.getMetamodelRootPackageName()='graal'">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='SD_Participant']/@style" referenceName="color" value="//@userColorsPalettes[name='Palette']/@entries[name='GraalFillDark']"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.type.getMetamodelRootPackageName()='cinematic'">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='Interaction']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='SD_Participant']/@style" referenceName="color" value="//@userColorsPalettes[name='Palette']/@entries[name='CinematicFillDark']"/>
          </vsmElementCustomizations>
        </customization>
      </defaultLayer>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="org.obeonetwork.dsl.interaction.design.services.InteractionServices"/>
    <ownedJavaExtensions qualifiedClassName="org.obeonetwork.dsl.interaction.design.services.DeleteServices"/>
  </ownedViewpoints>
  <userColorsPalettes name="Dutch Seas">
    <entries xsi:type="description:UserFixedColor" red="22" green="147" blue="165" name="Dutch teal"/>
    <entries xsi:type="description:UserFixedColor" red="199" green="237" blue="232" name="Glint on the ocean"/>
    <entries xsi:type="description:UserFixedColor" red="160" green="222" blue="214" name="Paleolitico"/>
    <entries xsi:type="description:InterpolatedColor" name="Interpolated blue for Executions" colorValueComputationExpression="aql:self.computeExecutionDepth(10)">
      <colorSteps associatedValue="0" associatedColor="//@userColorsPalettes[name='Dutch%20Seas']/@entries[name='Glint%20on%20the%20ocean']"/>
      <colorSteps associatedValue="10" associatedColor="//@userColorsPalettes[name='Dutch%20Seas']/@entries[name='Dutch%20teal']"/>
    </entries>
  </userColorsPalettes>
  <userColorsPalettes name="Skyblue">
    <entries xsi:type="description:UserFixedColor" red="11" green="16" blue="140" name="Evening_Skyblue"/>
  </userColorsPalettes>
  <userColorsPalettes name="Greens">
    <entries xsi:type="description:UserFixedColor" red="166" green="227" blue="187" name="Watery Green"/>
    <entries xsi:type="description:UserFixedColor" red="16" green="120" blue="103" name="Flabber Green"/>
    <entries xsi:type="description:InterpolatedColor" name="Interpolated green for Combined Fragments" colorValueComputationExpression="aql:self.computeCombinedFragmentDepth(5)">
      <colorSteps associatedValue="0" associatedColor="//@userColorsPalettes[name='Greens']/@entries[name='Watery%20Green']"/>
      <colorSteps associatedValue="5" associatedColor="//@userColorsPalettes[name='Greens']/@entries[name='Flabber%20Green']"/>
    </entries>
  </userColorsPalettes>
  <userColorsPalettes name="Palette">
    <entries xsi:type="description:UserFixedColor" red="0" green="43" blue="60" name="ISDLabelAndEdge"/>
    <entries xsi:type="description:UserFixedColor" red="136" green="136" blue="136" name="ISDBorder"/>
    <entries xsi:type="description:UserFixedColor" red="255" green="243" blue="171" name="GraalFillDark"/>
    <entries xsi:type="description:UserFixedColor" red="202" green="231" blue="255" name="SoaFillDark"/>
    <entries xsi:type="description:UserFixedColor" red="238" green="248" blue="255" name="CinematicFillDark"/>
    <entries xsi:type="description:UserFixedColor" red="99" green="168" blue="246" name="EntityFillDark"/>
    <entries xsi:type="description:UserFixedColor" red="220" green="255" blue="197" name="DatabaseFillDark"/>
    <entries xsi:type="description:UserFixedColor" red="238" green="238" blue="236" name="EntityLightGrey"/>
  </userColorsPalettes>
  <extensions xsi:type="properties:ViewExtensionDescription" name="Properties">
    <metamodels href="http://www.obeonetwork.org/dsl/interaction/1.0.0#/"/>
    <categories name="Default Category">
      <pages name="Interaction Page" labelExpression="Interaction" domainClass="interaction::Interaction" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.0"/>
      <pages name="Participant Page" labelExpression="Participant" domainClass="interaction::Participant" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.1"/>
      <pages name="Execution Page" labelExpression="Execution" domainClass="interaction::Execution" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.2"/>
      <pages name="Message Page" labelExpression="aql:self.eClass().name" domainClass="interaction::Message" semanticCandidateExpression="var:self" preconditionExpression="aql:not(self.oclIsKindOf(interaction::InteractionUse))" groups="//@extensions.0/@categories.0/@groups.3"/>
      <pages name="InteractionUse Page" labelExpression="InteractionUse" domainClass="interaction::InteractionUse" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.4"/>
      <pages name="StateInvariant Page" labelExpression="StateInvariant" domainClass="interaction::StateInvariant" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.5"/>
      <pages name="CombinedFragment Page" labelExpression="CombinedFragment" domainClass="interaction::CombinedFragment" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.6"/>
      <pages name="Operand Page" labelExpression="Operand" domainClass="interaction::Operand" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.7"/>
      <groups name="Interaction Group" labelExpression="Properties" domainClass="interaction::Interaction" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="interaction::Interaction name" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="interaction::Interaction description" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('description')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('description'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('description').changeable" valueExpression="aql:self.description">
          <initialOperation>
            <firstModelOperations xsi:type="tool_2:SetValue" featureName="description" valueExpression="aql:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="Participant Group" labelExpression="Properties" domainClass="interaction::Participant" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="interaction::Participant name" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:CustomDescription" name="org.obeonetwork.is.eef.custom.reference" label="interaction::Participant type" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('type')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('type'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('type').changeable">
          <customExpressions name="referenceNameExpression" customExpression="aql:'type'"/>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="interaction::Participant description" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('description')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('description'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('description').changeable" valueExpression="aql:self.description">
          <initialOperation>
            <firstModelOperations xsi:type="tool_2:SetValue" featureName="description" valueExpression="aql:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="Execution Group" labelExpression="Properties" domainClass="interaction::Execution" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="interaction::Execution name" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="interaction::Execution description" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('description')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('description'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('description').changeable" valueExpression="aql:self.description">
          <initialOperation>
            <firstModelOperations xsi:type="tool_2:SetValue" featureName="description" valueExpression="aql:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="Message Group" labelExpression="Properties" domainClass="interaction::Message" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="interaction::Message name" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="interaction::Message description" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('description')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('description'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('description').changeable" valueExpression="aql:self.description">
          <initialOperation>
            <firstModelOperations xsi:type="tool_2:SetValue" featureName="description" valueExpression="aql:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="InteractionUse Group" labelExpression="Properties" domainClass="interaction::InteractionUse" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="interaction::InteractionUse name" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="interaction::InteractionUse type" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('type')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('type'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('type').changeable" valueExpression="aql:self.type">
          <initialOperation>
            <firstModelOperations xsi:type="tool_2:SetValue" featureName="type" valueExpression="var:newValue"/>
          </initialOperation>
          <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('type').lowerBound = 1">
            <style>
              <labelFontFormat>bold</labelFontFormat>
            </style>
          </conditionalStyles>
        </controls>
        <controls xsi:type="properties:CustomDescription" name="org.obeonetwork.is.eef.custom.reference" label="interaction::InteractionUse interaction" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('interaction')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('interaction'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('interaction').changeable">
          <customExpressions name="referenceNameExpression" customExpression="aql:'interaction'"/>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="interaction::InteractionUse description" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('description')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('description'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('description').changeable" valueExpression="aql:self.description">
          <initialOperation>
            <firstModelOperations xsi:type="tool_2:SetValue" featureName="description" valueExpression="aql:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="StateInvariant Group" labelExpression="Properties" domainClass="interaction::StateInvariant" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="interaction::StateInvariant name" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="interaction::StateInvariant description" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('description')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('description'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('description').changeable" valueExpression="aql:self.description">
          <initialOperation>
            <firstModelOperations xsi:type="tool_2:SetValue" featureName="description" valueExpression="aql:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="CombinedFragment Group" labelExpression="Properties" domainClass="interaction::CombinedFragment" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="interaction::Interaction name" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="interaction::CombinedFragment operator" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('operator')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('operator'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('operator').changeable" valueExpression="aql:self.operator">
          <initialOperation>
            <firstModelOperations xsi:type="tool_2:SetValue" featureName="operator" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="interaction::Interaction description" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('description')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('description'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('description').changeable" valueExpression="aql:self.description">
          <initialOperation>
            <firstModelOperations xsi:type="tool_2:SetValue" featureName="description" valueExpression="aql:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="Operand Group" labelExpression="Properties" domainClass="interaction::Operand" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="interaction::Interaction name" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_2:SetValue" featureName="name" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="interaction::Interaction description" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('description')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('description'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('description').changeable" valueExpression="aql:self.description">
          <initialOperation>
            <firstModelOperations xsi:type="tool_2:SetValue" featureName="description" valueExpression="aql:newValue"/>
          </initialOperation>
        </controls>
      </groups>
    </categories>
  </extensions>
</description:Group>
