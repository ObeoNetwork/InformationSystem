<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:properties="http://www.eclipse.org/sirius/properties/1.0.0" xmlns:properties-ext-widgets-reference="http://www.eclipse.org/sirius/properties/1.0.0/ext/widgets/reference" xmlns:tool="http://www.eclipse.org/sirius/description/tool/1.1.0" documentation="Copyright (c) 2008, 2022 Obeo.&#xD;&#xA;All rights reserved. This program and the accompanying materials&#xD;&#xA;are made available under the terms of the Eclipse Public License v1.0&#xD;&#xA;which accompanies this distribution, and is available at&#xD;&#xA;http://www.eclipse.org/legal/epl-v10.html&#xD;&#xA;&#xD;&#xA;Contributors:&#xD;&#xA;   Obeo - initial API and implementation" name="environment-properties" version="12.0.0.2017041100">
  <ownedViewpoints endUserDocumentation="The &lt;b>Environment Views&lt;/b> viewpoint provides the property views allowing the edition of the environment elements." name="Environment Views">
    <ownedJavaExtensions qualifiedClassName="org.obeonetwork.dsl.environment.properties.internal.services.EnvironmentServices"/>
  </ownedViewpoints>
  <extensions xsi:type="properties:ViewExtensionDescription" name="Properties">
    <metamodels href="http://www.obeonetwork.org/dsl/environment/3.0.0#/"/>
    <categories name="StructuredType">
      <groups name="StructuredType Group" labelExpression="Properties" domainClass="environment::StructuredType" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="environment::StructuredType name" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="var:newValue"/>
          </initialOperation>
          <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('name').lowerBound = 1">
            <style>
              <labelFontFormat>bold</labelFontFormat>
            </style>
          </conditionalStyles>
        </controls>
        <controls xsi:type="properties:CustomDescription" name="org.obeonetwork.is.eef.custom.reference" label="environment::StructuredType supertype" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('supertype')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('supertype'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('supertype').changeable">
          <customExpressions name="referenceNameExpression" customExpression="aql:'supertype'"/>
        </controls>
        <controls xsi:type="properties:CustomDescription" name="org.obeonetwork.is.eef.custom.reference" label="environment::StructuredType attributes" labelExpression="aql:'Attributes :'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('ownedAttributes'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('ownedAttributes').changeable">
          <customExpressions name="referenceNameExpression" customExpression="aql:'ownedAttributes'"/>
          <customExpressions name="enableAddButtonExpression" customExpression="aql:false"/>
          <customExpressions name="enableBrowseButtonExpression" customExpression="aql:false"/>
          <customExpressions name="enableRemoveButtonExpression" customExpression="aql:false"/>
          <customOperations name="onDoubleClickOperation">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:selection->first()">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Edit attributes Dialog">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                    <initialOperation/>
                  </buttons>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation/>
                  </buttons>
                  <page name="Edit attribute Page" extends="//@extensions.0/@categories.1/@pages.2"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </customOperations>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="environment::StructuredType description" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('description')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('description'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('description').changeable" valueExpression="aql:self.description">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="description" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:CustomDescription" name="org.obeonetwork.is.eef.custom.reference" label="environment::StructuredType associatedTypes" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('associatedTypes')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('associatedTypes'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('associatedTypes').changeable">
          <customExpressions name="referenceNameExpression" customExpression="aql:'associatedTypes'"/>
          <customOperations name="onDoubleClickOperation">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:selection->first()">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Edit associatedTypes Dialog">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                    <initialOperation/>
                  </buttons>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation/>
                  </buttons>
                  <page name="Edit associatedTypes Page"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </customOperations>
        </controls>
      </groups>
    </categories>
    <categories name="Environment">
      <pages name="Reference Page" labelExpression="Reference" domainClass="environment::Reference" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.1/@groups.0"/>
      <pages name="Opposite Page" labelExpression="Opposite" domainClass="environment::Reference" semanticCandidateExpression="aql:self.oppositeOf" preconditionExpression="aql:self.oppositeOf &lt;> null" groups="//@extensions.0/@categories.1/@groups.1"/>
      <pages name="Attribute Page" labelExpression="Attribute" domainClass="environment::Attribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.1/@groups.2"/>
      <pages name="Enumeration Page" labelExpression="Enumeration" domainClass="environment::Enumeration" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.1/@groups.3"/>
      <pages name="Literal Page" labelExpression="Literal" domainClass="environment::Literal" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.1/@groups.4"/>
      <pages name="Namespace Page" labelExpression="aql:self.eClass().name" domainClass="environment::Namespace" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.1/@groups.5"/>
      <pages name="Annotation Page" labelExpression="Annotation" domainClass="environment::Annotation" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.1/@groups.6"/>
      <groups name="Reference Group" labelExpression="Properties" domainClass="environment::Reference" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="environment::Reference name" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="environment::Reference referencedType" isEnabledExpression="aql:false" referenceNameExpression="aql:'referencedType'"/>
        <controls xsi:type="properties:SelectDescription" name="environment::Reference multiplicity" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('multiplicity')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('multiplicity'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('multiplicity').changeable" valueExpression="aql:self.eClass().getEStructuralFeature('multiplicity').eType.getEEnumLiteralByLiteral(self.multiplicity.toString())" candidatesExpression="aql:self.eClass().getEStructuralFeature('multiplicity').eType.eLiterals" candidateDisplayExpression="aql:candidate.literal">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="multiplicity" valueExpression="aql:newValue.instance"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:CheckboxDescription" name="environment::Reference isComposite" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('isComposite'))" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('isComposite'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('isComposite').changeable" valueExpression="aql:self.isComposite">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="isComposite" valueExpression="var:newValue"/>
          </initialOperation>
          <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('isComposite').lowerBound = 1">
            <style>
              <labelFontFormat>bold</labelFontFormat>
            </style>
          </conditionalStyles>
        </controls>
        <controls xsi:type="properties:CheckboxDescription" name="environment::Reference navigable" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('navigable'))" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('navigable'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('navigable').changeable" valueExpression="aql:self.navigable">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="navigable" valueExpression="var:newValue"/>
          </initialOperation>
          <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('navigable').lowerBound = 1">
            <style>
              <labelFontFormat>bold</labelFontFormat>
            </style>
          </conditionalStyles>
        </controls>
        <controls xsi:type="properties:CheckboxDescription" name="environment::Reference isIdentifier" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('isIdentifier'))" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('isIdentifier'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('isIdentifier').changeable" valueExpression="aql:self.isIdentifier">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="isIdentifier" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:CustomDescription" name="org.obeonetwork.is.eef.custom.reference" label="environment::Reference oppositeOf" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('oppositeOf')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('oppositeOf'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('oppositeOf').changeable">
          <customExpressions name="referenceNameExpression" customExpression="aql:'oppositeOf'"/>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="environment::Reference description" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('description')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('description'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('description').changeable" valueExpression="aql:self.description">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="description" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="Opposite Group" labelExpression="Properties" domainClass="environment::Reference" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="environment::Reference name" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="environment::Reference referencedType" isEnabledExpression="aql:false" referenceNameExpression="aql:'referencedType'"/>
        <controls xsi:type="properties:SelectDescription" name="environment::Reference multiplicity" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('multiplicity')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('multiplicity'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('multiplicity').changeable" valueExpression="aql:self.eClass().getEStructuralFeature('multiplicity').eType.getEEnumLiteralByLiteral(self.multiplicity.toString())" candidatesExpression="aql:self.eClass().getEStructuralFeature('multiplicity').eType.eLiterals" candidateDisplayExpression="aql:candidate.literal">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="multiplicity" valueExpression="aql:newValue.instance"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:CheckboxDescription" name="environment::Reference isComposite" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('isComposite'))" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('isComposite'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('isComposite').changeable" valueExpression="aql:self.isComposite">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="isComposite" valueExpression="var:newValue"/>
          </initialOperation>
          <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('isComposite').lowerBound = 1">
            <style>
              <labelFontFormat>bold</labelFontFormat>
            </style>
          </conditionalStyles>
        </controls>
        <controls xsi:type="properties:CheckboxDescription" name="environment::Reference navigable" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('navigable'))" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('navigable'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('navigable').changeable" valueExpression="aql:self.navigable">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="navigable" valueExpression="var:newValue"/>
          </initialOperation>
          <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('navigable').lowerBound = 1">
            <style>
              <labelFontFormat>bold</labelFontFormat>
            </style>
          </conditionalStyles>
        </controls>
        <controls xsi:type="properties:CheckboxDescription" name="environment::Reference isIdentifier" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('isIdentifier'))" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('isIdentifier'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('isIdentifier').changeable" valueExpression="aql:self.isIdentifier">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="isIdentifier" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="environment::Reference description" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('description')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('description'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('description').changeable" valueExpression="aql:self.description">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="description" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="Attribute Group" labelExpression="Properties" domainClass="environment::Attribute" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="environment::Attribute name" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="environment::Attribute type" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('type')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('type'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('type').changeable" valueExpression="feature:type" candidatesExpression="aql:input.emfEditServices(self).getChoiceOfValues(self.eClass().getEStructuralFeature('type'))" candidateDisplayExpression="aql:input.emfEditServices(candidate).getText()">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="environment::Attribute multiplicity" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('multiplicity')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('multiplicity'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('multiplicity').changeable" valueExpression="aql:self.eClass().getEStructuralFeature('multiplicity').eType.getEEnumLiteralByLiteral(self.multiplicity.toString())" candidatesExpression="aql:self.eClass().getEStructuralFeature('multiplicity').eType.eLiterals" candidateDisplayExpression="aql:candidate.literal">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="multiplicity" valueExpression="aql:newValue.instance"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:CheckboxDescription" name="environment::Attribute isIdentifier" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('isIdentifier'))" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('isIdentifier'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('isIdentifier').changeable" valueExpression="aql:self.isIdentifier">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="isIdentifier" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="environment::Attribute description" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('description')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('description'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('description').changeable" valueExpression="aql:self.description">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="description" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="Enumeration Group" labelExpression="Properties" domainClass="environment::Enumeration">
        <controls xsi:type="properties:TextDescription" name="environment::Enumeration name" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="var:newValue"/>
          </initialOperation>
          <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('name').lowerBound = 1">
            <style>
              <labelFontFormat>bold</labelFontFormat>
            </style>
          </conditionalStyles>
        </controls>
        <controls xsi:type="properties:CustomDescription" name="org.obeonetwork.is.eef.custom.reference" label="environment::Enumeration literals" labelExpression="aql:'Literals:'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('literals'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('literals').changeable">
          <customExpressions name="referenceNameExpression" customExpression="aql:'literals'"/>
          <customOperations name="addButtonOperation">
            <initialOperation>
              <firstModelOperations xsi:type="tool:CreateInstance" typeName="environment::Literal" referenceName="literals">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:''"/>
                <subModelOperations xsi:type="tool:SetValue" featureName="description" valueExpression="aql:''"/>
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Create Literal Dialog">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool:RemoveElement"/>
                    </initialOperation>
                  </buttons>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation/>
                  </buttons>
                  <page name="Create Enumeration literal Page" extends="//@extensions.0/@categories.1/@pages.4"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </customOperations>
          <customOperations name="onDoubleClickOperation">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:selection->first()">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Edit Enumeration literal Dialog">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                    <initialOperation/>
                  </buttons>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation/>
                  </buttons>
                  <page name="Edit Enumeration literal Page" extends="//@extensions.0/@categories.1/@pages.4"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </customOperations>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="environment::Enumeration description" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('description')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('description'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('description').changeable" valueExpression="aql:self.description">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="description" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="Literal Group" labelExpression="Properties" domainClass="environment::Literal" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="environment::Literal name" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="var:newValue"/>
          </initialOperation>
          <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('name').lowerBound = 1">
            <style>
              <labelFontFormat>bold</labelFontFormat>
            </style>
          </conditionalStyles>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="environment::Literal description" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('description')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('description'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('description').changeable" valueExpression="aql:self.description">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="description" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="Namespace Group" labelExpression="Properties" domainClass="environment::Namespace" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="environment::Namespace name" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="var:newValue"/>
          </initialOperation>
          <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('name').lowerBound = 1">
            <style>
              <labelFontFormat>bold</labelFontFormat>
            </style>
          </conditionalStyles>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="environment::Namespace description" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('description')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('description'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('description').changeable" valueExpression="aql:self.description">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="description" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="Annotation Group" labelExpression="Properties" domainClass="environment::Annotation" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="environment::Annotation title" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('title')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('title'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('title').changeable" valueExpression="aql:self.title">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="title" valueExpression="var:newValue"/>
          </initialOperation>
          <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('title').lowerBound = 1">
            <style>
              <labelFontFormat>bold</labelFontFormat>
            </style>
          </conditionalStyles>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="environment::Annotation body" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('body')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('body'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('body').changeable" valueExpression="aql:self.body">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="body" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
      </groups>
    </categories>
    <categories name="Common">
      <pages name="Metadata Page" labelExpression="Metadatas" domainClass="environment::ObeoDSMObject" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.2/@groups.0"/>
      <groups name="Metadata Group" labelExpression="Properties" domainClass="environment::ObeoDSMObject" semanticCandidateExpression="aql:self">
        <controls xsi:type="properties:CustomDescription" name="org.obeonetwork.dsl.environment.properties.metadata.table" labelExpression="Metadata:" helpExpression="aql:self.getMetadatasHelpExpression()">
          <customExpressions name="ColumnsExpression" customExpression="aql:Sequence{'title', 'body'}"/>
          <customExpressions name="referenceOwnerExpression" customExpression="aql:self.metadatas"/>
          <customExpressions name="referenceNameExpression" customExpression="aql:'metadatas'"/>
          <customOperations name="CreateElementOperation">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:self.metadatas = null">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="environment::MetaDataContainer" referenceName="metadatas"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="feature:metadatas">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="environment::Annotation" referenceName="metadatas" variableName="annotation">
                    <subModelOperations xsi:type="tool:SetValue" featureName="title" valueExpression="aql:''"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="body" valueExpression="aql:''"/>
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Create Annotation Dialog">
                      <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool:RemoveElement"/>
                        </initialOperation>
                      </buttons>
                      <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                        <initialOperation/>
                      </buttons>
                      <page name="Create Annotation Wizard Page" labelExpression="Annotation" domainClass="environment::Annotation" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@pages.6"/>
                      <groups name="Create Annotation Wizard Group" labelExpression="Properties" domainClass="environment::Annotation" semanticCandidateExpression="var:self"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </customOperations>
          <customOperations name="EditElementOperation">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:selection">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Edit Annotation Dialog">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                    <initialOperation/>
                  </buttons>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation/>
                  </buttons>
                  <page name="Edit Annotation Wizard Page" labelExpression="Annotation" domainClass="environment::Annotation" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@pages.6"/>
                  <groups name="Edit Annotation Wizard Group" labelExpression="Properties" domainClass="environment::Annotation" semanticCandidateExpression="var:self"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </customOperations>
        </controls>
      </groups>
    </categories>
  </extensions>
</description:Group>
