<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:properties="http://www.eclipse.org/sirius/properties/1.0.0" xmlns:properties-ext-widgets-reference="http://www.eclipse.org/sirius/properties/1.0.0/ext/widgets/reference" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" documentation="Copyright (c) 2008, 2024 Obeo.&#xD;&#xA;All rights reserved. This program and the accompanying materials&#xD;&#xA;are made available under the terms of the Eclipse Public License v2.0&#xD;&#xA;which accompanies this distribution, and is available at&#xD;&#xA;https://www.eclipse.org/legal/epl-2.0/&#xD;&#xA;&#xD;&#xA;Contributors:&#xD;&#xA;   Obeo - initial API and implementation" name="statemachine" version="12.0.0.2017041100">
  <ownedViewpoints endUserDocumentation="The &lt;b>State Machine&lt;/b> viewpoint provides one representation : &#xD;&#xA;&lt;ul>&#xD;&#xA;&lt;li>&lt;b>State Machine Diagram&lt;/b> : a diagram allowing to visualise and edit a State Machine.&lt;/li>&#xD;&#xA;&lt;/ul>&#xA;" name="State Machine">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" dropDescriptions="//@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@toolSections.1/@subSections[name='D%26D%20Tools']/@ownedTools[name='D%26D_States']" name="State Machine Diagram" titleExpression="aql:self.name + ' State Machine Diagram'" domainClass="statemachine::StateMachine" enablePopupBars="true">
      <metamodel href="platform:/plugin/org.obeonetwork.dsl.statemachine/model/statemachine.ecore#/"/>
      <metamodel href="http://www.obeonetwork.org/dsl/environment/3.0.0#/"/>
      <diagramInitialisation>
        <firstModelOperations xsi:type="tool:If" conditionExpression="aql:self.states->filter(statemachine::InitialState).isEmpty()">
          <subModelOperations xsi:type="tool:CreateInstance" typeName="statemachine.InitialState" referenceName="states"/>
        </firstModelOperations>
      </diagramInitialisation>
      <defaultLayer name="State Machine">
        <nodeMappings name="SM_InitialState" deletionDescription="//@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@toolSections.1/@subSections[name='Delete%20Tools']/@ownedTools[name='Del_State']" semanticCandidatesExpression="aql:self.states->filter(statemachine::InitialState)" documentation="Initial State" domainClass="statemachine::InitialState">
          <style xsi:type="style:WorkspaceImageDescription" borderColor="//@userColorsPalettes[name=null]/@entries[name='ISDBorder']" showIcon="false" labelExpression="" labelColor="//@userColorsPalettes[name=null]/@entries[name='ISDLabelAndEdge']" resizeKind="NSEW" arcWidth="0" arcHeight="0" roundedCorner="true" workspacePath="/org.obeonetwork.dsl.statemachine.design/icons/initial_state.svg"/>
        </nodeMappings>
        <nodeMappings name="SM_FinalState" deletionDescription="//@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@toolSections.1/@subSections[name='Delete%20Tools']/@ownedTools[name='Del_State']" semanticCandidatesExpression="aql:self.states->filter(statemachine::FinalState)" documentation="Final State" domainClass="statemachine::FinalState">
          <style xsi:type="style:WorkspaceImageDescription" borderColor="//@userColorsPalettes[name=null]/@entries[name='ISDBorder']" showIcon="false" labelExpression="" labelColor="//@userColorsPalettes[name=null]/@entries[name='ISDLabelAndEdge']" resizeKind="NSEW" arcWidth="0" arcHeight="0" roundedCorner="true" workspacePath="/org.obeonetwork.dsl.statemachine.design/icons/final_state.svg"/>
        </nodeMappings>
        <edgeMappings name="SM_Transition" labelDirectEdit="//@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@toolSections.1/@subSections[name='Direct%20Edit%20Tools']/@ownedTools[name='EDT_TransitionsGuard']" semanticCandidatesExpression="feature:transitions" semanticElements="var:self" documentation="For the moment: Transitions are only created in the StateMachine, Regions don't have transitions (although the metamodel allows to create transitions in regions)&#xD;&#xA;&#xD;&#xA;" sourceMapping="//@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@nodeMappings[name='SM_InitialState'] //@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@containerMappings[name='SM_Region']/@subNodeMappings[name='SM_InitialStateInRegion'] //@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@containerMappings[name='SM_Region']/@subContainerMappings[name='SM_StateInRegion'] //@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@containerMappings[name='SM_State']" targetMapping="//@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@nodeMappings[name='SM_FinalState'] //@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@containerMappings[name='SM_Region']/@subNodeMappings[name='SM_FinalStateInRegion'] //@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@containerMappings[name='SM_Region']/@subContainerMappings[name='SM_StateInRegion'] //@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@containerMappings[name='SM_State']" targetFinderExpression="feature:to" sourceFinderExpression="feature:from" domainClass="statemachine::Transition" useDomainElement="true" reconnections="//@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@toolSections.1/@subSections[name='Reconnection%20Tools']/@ownedTools[name='RT_from'] //@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@toolSections.1/@subSections[name='Reconnection%20Tools']/@ownedTools[name='RT_to']">
          <style strokeColor="//@userColorsPalettes[name=null]/@entries[name='ISDLabelAndEdge']" sizeComputationExpression="2">
            <centerLabelStyleDescription showIcon="false" labelExpression="['[' + guard + ']'/]" labelColor="//@userColorsPalettes[name=null]/@entries[name='ISDLabelAndEdge']"/>
          </style>
          <conditionnalStyles predicateExpression="aql:self.guard=null">
            <style strokeColor="//@userColorsPalettes[name=null]/@entries[name='ISDLabelAndEdge']" sizeComputationExpression="2">
              <centerLabelStyleDescription showIcon="false" labelColor="//@userColorsPalettes[name=null]/@entries[name='ISDLabelAndEdge']"/>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <containerMappings name="SM_State" deletionDescription="//@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@toolSections.1/@subSections[name='Delete%20Tools']/@ownedTools[name='Del_State']" labelDirectEdit="//@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@toolSections.1/@subSections[name='Direct%20Edit%20Tools']/@ownedTools[name='EDT_States%26RegionsLabel']" semanticCandidatesExpression="aql:self.states->filter(statemachine::State)" documentation="State" domainClass="statemachine::State">
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="25" arcHeight="25" borderSizeComputationExpression="1" borderColor="//@userColorsPalettes[name=null]/@entries[name='ISDBorder']" labelSize="10" labelColor="//@userColorsPalettes[name=null]/@entries[name='ISDLabelAndEdge']" roundedCorner="true">
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <containerMappings name="SM_Region" deletionDescription="//@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@toolSections.1/@subSections[name='Delete%20Tools']/@ownedTools[name='Del_Region']" labelDirectEdit="//@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@toolSections.1/@subSections[name='Direct%20Edit%20Tools']/@ownedTools[name='EDT_States%26RegionsLabel']" semanticCandidatesExpression="feature:regions" documentation="Region" domainClass="statemachine::Region" dropDescriptions="//@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@toolSections.1/@subSections[name='D%26D%20Tools']/@ownedTools[name='D%26D_States']">
          <subNodeMappings name="SM_InitialStateInRegion" deletionDescription="//@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@toolSections.1/@subSections[name='Delete%20Tools']/@ownedTools[name='Del_State']" semanticCandidatesExpression="aql:self.states->filter(statemachine::InitialState)" documentation="Initial State" domainClass="statemachine::InitialState">
            <style xsi:type="style:WorkspaceImageDescription" borderColor="//@userColorsPalettes[name=null]/@entries[name='ISDBorder']" showIcon="false" labelExpression="" labelColor="//@userColorsPalettes[name=null]/@entries[name='ISDLabelAndEdge']" resizeKind="NSEW" arcWidth="0" arcHeight="0" roundedCorner="true" workspacePath="/org.obeonetwork.dsl.statemachine.design/icons/initial_state.svg"/>
          </subNodeMappings>
          <subNodeMappings name="SM_FinalStateInRegion" deletionDescription="//@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@toolSections.1/@subSections[name='Delete%20Tools']/@ownedTools[name='Del_State']" semanticCandidatesExpression="aql:self.states->filter(statemachine::FinalState)" documentation="Final State" domainClass="statemachine::FinalState">
            <style xsi:type="style:WorkspaceImageDescription" borderColor="//@userColorsPalettes[name=null]/@entries[name='ISDBorder']" showIcon="false" labelExpression="" labelColor="//@userColorsPalettes[name=null]/@entries[name='ISDLabelAndEdge']" resizeKind="NSEW" arcWidth="0" arcHeight="0" roundedCorner="true" workspacePath="/org.obeonetwork.dsl.statemachine.design/icons/final_state.svg"/>
          </subNodeMappings>
          <subContainerMappings name="SM_StateInRegion" deletionDescription="//@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@toolSections.1/@subSections[name='Delete%20Tools']/@ownedTools[name='Del_State']" labelDirectEdit="//@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@toolSections.1/@subSections[name='Direct%20Edit%20Tools']/@ownedTools[name='EDT_States%26RegionsLabel']" semanticCandidatesExpression="aql:self.states->filter(statemachine::State)" documentation="State" domainClass="statemachine::State">
            <style xsi:type="style:FlatContainerStyleDescription" arcWidth="25" arcHeight="25" borderSizeComputationExpression="1" borderColor="//@userColorsPalettes[name=null]/@entries[name='ISDBorder']" labelSize="10" labelColor="//@userColorsPalettes[name=null]/@entries[name='ISDLabelAndEdge']" roundedCorner="true">
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="25" arcHeight="25" borderSizeComputationExpression="1" borderColor="//@userColorsPalettes[name=null]/@entries[name='ISDBorder']" labelSize="10" labelColor="//@userColorsPalettes[name=null]/@entries[name='ISDLabelAndEdge']" roundedCorner="true" backgroundStyle="GradientTopToBottom">
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <toolSections name="State Machine">
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="Initial State" nodeMappings="//@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@containerMappings[name='SM_Region']/@subNodeMappings[name='SM_InitialStateInRegion'] //@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@nodeMappings[name='SM_InitialState']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:CreateInstance" typeName="statemachine.InitialState" referenceName="states"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="Final State" nodeMappings="//@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@nodeMappings[name='SM_FinalState'] //@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@containerMappings[name='SM_Region']/@subNodeMappings[name='SM_FinalStateInRegion']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:CreateInstance" typeName="statemachine.FinalState" referenceName="states"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="Transition" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@edgeMappings[name='SM_Transition']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:source.eContainer(statemachine::StateMachine)">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="statemachine.Transition" referenceName="transitions">
                  <subModelOperations xsi:type="tool:SetValue" featureName="from" valueExpression="var:source"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="to" valueExpression="var:target"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="Region" containerMappings="//@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@containerMappings[name='SM_Region']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:CreateInstance" typeName="statemachine.Region" referenceName="regions">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'new Region ' + self.eContainer(statemachine::StateMachine).regions->size()"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="State" containerMappings="//@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@containerMappings[name='SM_State'] //@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@containerMappings[name='SM_Region']/@subContainerMappings[name='SM_StateInRegion']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:CreateInstance" typeName="statemachine.State" referenceName="states">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="service:evaluateLabel"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:OperationAction" name="OPE_ChangeParent" label="Change parent">
            <view name="views"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="service:changeParentForStateMachine"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Reused Tools">
          <subSections name="Direct Edit Tools">
            <ownedTools xsi:type="tool_1:DirectEditLabel" name="EDT_States&amp;RegionsLabel">
              <mask mask="{0}"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="var:arg0"/>
              </initialOperation>
            </ownedTools>
            <ownedTools xsi:type="tool_1:DirectEditLabel" name="EDT_TransitionsGuard">
              <mask mask="{0}"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:SetValue" featureName="guard" valueExpression="var:arg0"/>
              </initialOperation>
            </ownedTools>
          </subSections>
          <subSections name="Delete Tools">
            <ownedTools xsi:type="tool_1:DeleteElementDescription" name="Del_Region">
              <element name="element"/>
              <elementView name="elementView"/>
              <containerView name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                  <subModelOperations xsi:type="tool:For" expression="feature:states" iteratorName="state">
                    <subModelOperations xsi:type="tool:For" expression="feature:incomingTransitions" iteratorName="incomingTransition">
                      <subModelOperations xsi:type="tool:RemoveElement"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool:For" expression="feature:outcomingTransitions" iteratorName="outcomingTransition">
                      <subModelOperations xsi:type="tool:RemoveElement"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool:RemoveElement"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:RemoveElement"/>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
            <ownedTools xsi:type="tool_1:DeleteElementDescription" name="Del_State">
              <element name="element"/>
              <elementView name="elementView"/>
              <containerView name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                  <subModelOperations xsi:type="tool:For" expression="feature:incomingTransitions" iteratorName="incomingTransition">
                    <subModelOperations xsi:type="tool:RemoveElement"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:For" expression="feature:outcomingTransitions" iteratorName="outcomingTransition">
                    <subModelOperations xsi:type="tool:RemoveElement"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:RemoveElement"/>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
          </subSections>
          <subSections name="D&amp;D Tools">
            <ownedTools xsi:type="tool_1:ContainerDropDescription" name="D&amp;D_States" precondition="aql:self.oclIsKindOf(statemachine::AbstractState)" forceRefresh="true" mappings="//@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@nodeMappings[name='SM_FinalState'] //@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@nodeMappings[name='SM_InitialState'] //@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@containerMappings[name='SM_Region']/@subNodeMappings[name='SM_FinalStateInRegion'] //@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@containerMappings[name='SM_Region']/@subNodeMappings[name='SM_InitialStateInRegion'] //@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@containerMappings[name='SM_Region']/@subContainerMappings[name='SM_StateInRegion'] //@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@containerMappings[name='SM_State']" dragSource="BOTH">
              <oldContainer name="oldSemanticContainer"/>
              <newContainer name="newSemanticContainer"/>
              <element name="element"/>
              <newViewContainer name="newContainerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                  <subModelOperations xsi:type="tool:If" conditionExpression="aql:newSemanticContainer.oclIsKindOf(statemachine::Region)">
                    <subModelOperations xsi:type="tool:MoveElement" newContainerExpression="var:newSemanticContainer" featureName="states"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:If" conditionExpression="aql:newSemanticContainer.oclIsKindOf(statemachine::StateMachine)">
                    <subModelOperations xsi:type="tool:MoveElement" newContainerExpression="var:newSemanticContainer" featureName="states"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
          </subSections>
          <subSections name="Reconnection Tools">
            <ownedTools xsi:type="tool_1:ReconnectEdgeDescription" name="RT_from" reconnectionKind="RECONNECT_SOURCE">
              <source name="source"/>
              <target name="target"/>
              <sourceView name="sourceView"/>
              <targetView name="targetView"/>
              <element name="element"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                  <subModelOperations xsi:type="tool:SetValue" featureName="from" valueExpression="var:target"/>
                </firstModelOperations>
              </initialOperation>
              <edgeView name="edgeView"/>
            </ownedTools>
            <ownedTools xsi:type="tool_1:ReconnectEdgeDescription" name="RT_to">
              <source name="source"/>
              <target name="target"/>
              <sourceView name="sourceView"/>
              <targetView name="targetView"/>
              <element name="element"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                  <subModelOperations xsi:type="tool:SetValue" featureName="to" valueExpression="var:target"/>
                </firstModelOperations>
              </initialOperation>
              <edgeView name="edgeView"/>
            </ownedTools>
          </subSections>
        </toolSections>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.getMetamodelRootPackageName() = 'graal'">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@containerMappings[name='SM_State']/@style //@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@containerMappings[name='SM_Region']/@subContainerMappings[name='SM_StateInRegion']/@style" referenceName="foregroundColor" value="//@userColorsPalettes[name=null]/@entries[name='GraalFillLight']"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.getMetamodelRootPackageName() = 'graal'">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@containerMappings[name='SM_State']/@style //@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@containerMappings[name='SM_Region']/@subContainerMappings[name='SM_StateInRegion']/@style" referenceName="backgroundColor" value="//@userColorsPalettes[name=null]/@entries[name='GraalFillLight']"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.getMetamodelRootPackageName() = 'soa'">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@containerMappings[name='SM_State']/@style //@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@containerMappings[name='SM_Region']/@subContainerMappings[name='SM_StateInRegion']/@style" referenceName="foregroundColor" value="//@userColorsPalettes[name=null]/@entries[name='SoaFillDark']"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.getMetamodelRootPackageName() = 'soa'">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@containerMappings[name='SM_State']/@style //@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@containerMappings[name='SM_Region']/@subContainerMappings[name='SM_StateInRegion']/@style" referenceName="backgroundColor" value="//@userColorsPalettes[name=null]/@entries[name='SoaFillDark']"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.getMetamodelRootPackageName() = 'cinematic'">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@containerMappings[name='SM_State']/@style //@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@containerMappings[name='SM_Region']/@subContainerMappings[name='SM_StateInRegion']/@style" referenceName="foregroundColor" value="//@userColorsPalettes[name=null]/@entries[name='CinematicFillDark']"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.getMetamodelRootPackageName() = 'cinematic'">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@containerMappings[name='SM_State']/@style //@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@containerMappings[name='SM_Region']/@subContainerMappings[name='SM_StateInRegion']/@style" referenceName="backgroundColor" value="//@userColorsPalettes[name=null]/@entries[name='CinematicFillDark']"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.getMetamodelRootPackageName() = 'entity'">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@containerMappings[name='SM_State']/@style //@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@containerMappings[name='SM_Region']/@subContainerMappings[name='SM_StateInRegion']/@style" referenceName="foregroundColor" value="//@userColorsPalettes[name=null]/@entries[name='EntityFillLight']"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.getMetamodelRootPackageName() = 'entity'">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@containerMappings[name='SM_State']/@style //@ownedViewpoints[name='State%20Machine']/@ownedRepresentations[name='State%20Machine%20Diagram']/@defaultLayer/@containerMappings[name='SM_Region']/@subContainerMappings[name='SM_StateInRegion']/@style" referenceName="backgroundColor" value="//@userColorsPalettes[name=null]/@entries[name='EntityFillLight']"/>
          </vsmElementCustomizations>
        </customization>
      </defaultLayer>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="org.obeonetwork.dsl.statemachine.design.services.StateMachineServices"/>
    <ownedJavaExtensions qualifiedClassName="org.obeonetwork.utils.common.EObjectUtils"/>
  </ownedViewpoints>
  <userColorsPalettes>
    <entries xsi:type="description:UserFixedColor" red="0" green="43" blue="60" name="ISDLabelAndEdge"/>
    <entries xsi:type="description:UserFixedColor" red="136" green="136" blue="136" name="ISDBorder"/>
    <entries xsi:type="description:UserFixedColor" red="255" green="243" blue="171" name="GraalFillDark"/>
    <entries xsi:type="description:UserFixedColor" red="255" green="249" blue="225" name="GraalFillLight"/>
    <entries xsi:type="description:UserFixedColor" red="202" green="231" blue="255" name="SoaFillDark"/>
    <entries xsi:type="description:UserFixedColor" red="238" green="248" blue="255" name="SoaFillLight"/>
    <entries xsi:type="description:UserFixedColor" red="238" green="248" blue="255" name="CinematicFillDark"/>
    <entries xsi:type="description:UserFixedColor" red="99" green="168" blue="246" name="EntityFillDark"/>
    <entries xsi:type="description:UserFixedColor" red="179" green="222" blue="255" name="EntityFillLight"/>
    <entries xsi:type="description:UserFixedColor" red="238" green="238" blue="236" name="EntityLightGrey"/>
    <entries xsi:type="description:UserFixedColor" red="220" green="255" blue="197" name="DatabaseFillDark"/>
  </userColorsPalettes>
  <extensions xsi:type="properties:ViewExtensionDescription" name="Properties">
    <metamodels href="http://www.obeonetwork.org/dsl/statemachine/1.0.0#/"/>
    <categories name="Default Category">
      <pages name="Region Page" labelExpression="Region" domainClass="statemachine::Region" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.0"/>
      <pages name="AbstractState Page" labelExpression="aql:self.eClass().name" domainClass="statemachine::AbstractState" semanticCandidateExpression="var:self" preconditionExpression="aql:not(self.oclIsKindOf(statemachine::State))" groups="//@extensions.0/@categories.0/@groups.1"/>
      <pages name="State Page" labelExpression="State" domainClass="statemachine::State" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.2"/>
      <pages name="StateMachine Page" labelExpression="StateMachine" domainClass="statemachine::StateMachine" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.3"/>
      <pages name="Transition Page" labelExpression="Transition" domainClass="statemachine::Transition" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.4"/>
      <groups name="Region Group" labelExpression="Properties" domainClass="statemachine::Region" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="statemachine::Region name" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="statemachine::Region description" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('description')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('description'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('description').changeable" valueExpression="aql:self.description">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="description" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="AbstractState Group" labelExpression="Properties" domainClass="statemachine::AbstractState" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:CustomDescription" name="org.obeonetwork.is.eef.custom.reference" label="statemachine::AbstractState incomingTransitions" labelExpression="aql:'Incoming Transitions :'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('incomingTransitions'))" isEnabledExpression="aql:false">
          <customExpressions name="referenceNameExpression" customExpression="aql:'incomingTransitions'"/>
          <customOperations name="onDoubleClickOperation">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:selection->first()">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Edit AbstractState incomingTransition Dialog">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                    <initialOperation/>
                  </buttons>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation/>
                  </buttons>
                  <page name="Edit AbstractState incomingTransition Page" extends="//@extensions.0/@categories.0/@pages.4"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </customOperations>
        </controls>
        <controls xsi:type="properties:CustomDescription" name="org.obeonetwork.is.eef.custom.reference" label="statemachine::AbstractState outcomingTransitions" labelExpression="aql:'Outcoming Transitions :'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('outcomingTransitions'))" isEnabledExpression="aql:false">
          <customExpressions name="referenceNameExpression" customExpression="aql:'outcomingTransitions'"/>
          <customOperations name="onDoubleClickOperation">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:selection->first()">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Edit AbstractState outcomingTransition Dialog">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                    <initialOperation/>
                  </buttons>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation/>
                  </buttons>
                  <page name="Edit AbstractState outcomingTransition Page" extends="//@extensions.0/@categories.0/@pages.4"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </customOperations>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="statemachine::AbstractState description" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('description')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('description'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('description').changeable" valueExpression="aql:self.description">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="description" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="State Group" labelExpression="Properties" domainClass="statemachine::State" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="statemachine::State name" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:CustomDescription" name="org.obeonetwork.is.eef.custom.reference" label="statemachine::State incomingTransitions" extends="//@extensions.0/@categories.0/@groups.1/@controls.0"/>
        <controls xsi:type="properties:CustomDescription" name="org.obeonetwork.is.eef.custom.reference" label="statemachine::State outgoingTransitions" extends="//@extensions.0/@categories.0/@groups.1/@controls.1"/>
        <controls xsi:type="properties:TextAreaDescription" name="statemachine::State description" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('description')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('description'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('description').changeable" valueExpression="aql:self.description">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="description" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="StateMachine Group" labelExpression="Properties" domainClass="statemachine::StateMachine" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="statemachine::StateMachine name" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:CustomDescription" name="org.obeonetwork.is.eef.custom.reference" label="statemachine::StateMachine regions" labelExpression="aql:'Regions :'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('regions'))" isEnabledExpression="aql:false">
          <customExpressions name="referenceNameExpression" customExpression="aql:'regions'"/>
          <customOperations name="onDoubleClickOperation">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:selection->first()">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Edit StateMachine region Dialog">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                    <initialOperation/>
                  </buttons>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation/>
                  </buttons>
                  <page name="Edit StateMachine region Page" extends="//@extensions.0/@categories.0/@pages.0"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </customOperations>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="statemachine::StateMachine description" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('description')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('description'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('description').changeable" valueExpression="aql:self.description">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="description" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="Transition Group" labelExpression="Properties" domainClass="statemachine::Transition" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="statemachine::Transition guard" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('guard')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('guard'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('guard').changeable" valueExpression="aql:self.guard">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="guard" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="statemachine::Transition from" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('from')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('from'))" isEnabledExpression="aql:false" referenceNameExpression="aql:'from'">
          <style>
            <labelFontFormat>bold</labelFontFormat>
          </style>
        </controls>
        <controls xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="statemachine::Transition to" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('to')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('to'))" isEnabledExpression="aql:false" referenceNameExpression="aql:'to'">
          <style>
            <labelFontFormat>bold</labelFontFormat>
          </style>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="statemachine::Transition description" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('description')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('description'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('description').changeable" valueExpression="aql:self.description">
          <initialOperation>
            <firstModelOperations xsi:type="tool:SetValue" featureName="description" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
      </groups>
    </categories>
  </extensions>
</description:Group>
