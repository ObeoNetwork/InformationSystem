[comment encoding = UTF-8 /]
[comment
 Copyright (c) 2008, 2025 Obeo.
 All rights reserved. This program and the accompanying materials
 are made available under the terms of the Eclipse Public License v2.0
 which accompanies this distribution, and is available at
 https://www.eclipse.org/legal/epl-2.0/

 Contributors:
     Obeo - initial API and implementation
/]
[module PrimaryKeyGen(
 'http://www.obeonetwork.org/dsl/database/evolution/1.0',
 'http://www.obeonetwork.org/dsl/database/1.0',
 'http://www.eclipse.org/emf/compare',
 'http://www.obeonetwork.org/dsl/typeslibrary/1.0')/]

[import org::obeonetwork::dsl::database::sqlgen::services::services /]
[import org::obeonetwork::dsl::database::sqlgen::services::names /]

[template public genSQLForPrimaryKeys(diffs : Sequence(DBDiff)) post(trim())]
[let addPrimaryKeyDiffs : Sequence(AddPrimaryKey) = diffs->filter(AddPrimaryKey)]
[if (addPrimaryKeyDiffs->notEmpty() and not addPrimaryKeyDiffs->isForMySQL())]

	[file ('create-pk.sql', false, 'UTF-8')]
		[for (addPk : AddPrimaryKey | addPrimaryKeyDiffs)]
[addPk.genCreatePK()/]

		[/for]
	[/file]
[/if]
[/let]

[let removePKDiffs : Sequence(RemovePrimaryKey) = diffs->filter(RemovePrimaryKey)->filterRelatedToRemoveTable()]
[if (removePKDiffs->notEmpty())]
	[file ('drop-pk.sql', false, 'UTF-8')]
		[for (removePK : RemovePrimaryKey | removePKDiffs)]
[removePK.genDropPK()/]

		[/for]
	[/file]
[/if]
[/let]

[let updatePrimaryKeyDiffs : Sequence(UpdatePrimaryKey) = diffs->filter(UpdatePrimaryKey)]
[if (updatePrimaryKeyDiffs->notEmpty())]
	[file ('alter-pk.sql', false, 'UTF-8')]
		[for (updatePK : UpdatePrimaryKey | updatePrimaryKeyDiffs)]
[updatePK.genAlterPK()/]

		[/for]
	[/file]
[/if]
[/let]
[/template]

[query private isForMySQL(diffs : Sequence(AddPrimaryKey)) : Boolean =
diffs->notEmpty() and diffs->first().primaryKey.isTargetMySqlOrMariaDB() /]

[template private genPKDoc(primaryKey : PrimaryKey) post(trim())]
-- ==============================================================
--  Primary Key : [primaryKey.name/]                                    
-- ==============================================================
[/template]

[template private genCreatePK(addPK : AddPrimaryKey) post(trim())]
[addPK.primaryKey.genPKDoc()/]
[addPK.primaryKey.genCreatePK()/]
[/template]

[template private genDropPK(removePK : RemovePrimaryKey) post(trim())]
[removePK.primaryKey.genPKDoc()/]
[removePK.primaryKey.genDropPK()/]
[/template]

[template private genAlterPK(updatePK : UpdatePrimaryKey) post(trim())]
[updatePK.newPrimaryKey.genPKDoc()/]
[updatePK.primaryKey.genDropPK()/]
[updatePK.newPrimaryKey.genCreatePK()/]
[/template]

[template private genCreatePK(pk : PrimaryKey) post(trim())]
[if (pk.columns->notEmpty())]
[let table : Table = pk.columns->first().owner.oclAsType(Table)]
[pk.genUniquePKIndex(table)/]
ALTER TABLE [table.fullname()/] ADD CONSTRAINT [pk.genPkConstraintName()/] PRIMARY KEY([pk.columns.name->sep(', ')/]);[/let]
[/if]
[/template]

[template private genUniquePKIndex(pk : PrimaryKey, table : Table) ? (not pk.isTargetPostgreSQL() and not pk.isTargetH2())]
CREATE UNIQUE INDEX [pk.genPkConstraintName()/] ON [table.fullname()/]([pk.columns.name->sep(', ')/]);
[/template]

[template private genDropPK(pk : PrimaryKey) post(trim())]
[let table : Table = pk.columns->first().owner.oclAsType(Table)]
ALTER TABLE [table.fullname()/] DROP CONSTRAINT [pk.genPkConstraintName()/];[/let]
[/template]

[template public genPkConstraintName(pk : PrimaryKey) post (trim())]
[if (pk.isTargetOracle())][pk.name/][else][pk.owner.name/]_PK1_1[/if]
[/template]

[query private filterRelatedToRemoveTable(diffs : Sequence(RemovePrimaryKey)) : Sequence(RemovePrimaryKey) =
diffs->reject(getRelatedDiff().isRelatedToRemoveTable())
	->asSequence()
/]

[query private isRelatedToRemoveTable(diff : Diff) : Boolean =
not diff.oclIsUndefined() and diff.oclIsKindOf(RemoveTable) 
/]


[query private getRelatedDiff(diff : Diff) : Diff
	= invoke('org.obeonetwork.dsl.database.gen.common.services.UtilServices', 'getRelatedDiff(org.eclipse.emf.compare.Diff)', Sequence{diff}) /]
