/*******************************************************************************
 * Copyright (c) 2008, 2022 Obeo.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Obeo - initial API and implementation
 *******************************************************************************/
package org.obeonetwork.dsl.database.dbevolution.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.obeonetwork.dsl.database.dbevolution.util.DbevolutionAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class DbevolutionItemProviderAdapterFactory extends DbevolutionAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public DbevolutionItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.AddTable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AddTableItemProvider addTableItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.AddTable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAddTableAdapter() {
		if (addTableItemProvider == null) {
			addTableItemProvider = new AddTableItemProvider(this);
		}

		return addTableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.RemoveTable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RemoveTableItemProvider removeTableItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.RemoveTable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRemoveTableAdapter() {
		if (removeTableItemProvider == null) {
			removeTableItemProvider = new RemoveTableItemProvider(this);
		}

		return removeTableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.DatabaseChangeSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DatabaseChangeSetItemProvider databaseChangeSetItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.DatabaseChangeSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDatabaseChangeSetAdapter() {
		if (databaseChangeSetItemProvider == null) {
			databaseChangeSetItemProvider = new DatabaseChangeSetItemProvider(this);
		}

		return databaseChangeSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.AlterTable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AlterTableItemProvider alterTableItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.AlterTable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAlterTableAdapter() {
		if (alterTableItemProvider == null) {
			alterTableItemProvider = new AlterTableItemProvider(this);
		}

		return alterTableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.RenameTableChange} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RenameTableChangeItemProvider renameTableChangeItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.RenameTableChange}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRenameTableChangeAdapter() {
		if (renameTableChangeItemProvider == null) {
			renameTableChangeItemProvider = new RenameTableChangeItemProvider(this);
		}

		return renameTableChangeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.AddColumnChange} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AddColumnChangeItemProvider addColumnChangeItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.AddColumnChange}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAddColumnChangeAdapter() {
		if (addColumnChangeItemProvider == null) {
			addColumnChangeItemProvider = new AddColumnChangeItemProvider(this);
		}

		return addColumnChangeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.RemoveColumnChange} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RemoveColumnChangeItemProvider removeColumnChangeItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.RemoveColumnChange}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRemoveColumnChangeAdapter() {
		if (removeColumnChangeItemProvider == null) {
			removeColumnChangeItemProvider = new RemoveColumnChangeItemProvider(this);
		}

		return removeColumnChangeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.RenameColumnChange} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RenameColumnChangeItemProvider renameColumnChangeItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.RenameColumnChange}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRenameColumnChangeAdapter() {
		if (renameColumnChangeItemProvider == null) {
			renameColumnChangeItemProvider = new RenameColumnChangeItemProvider(this);
		}

		return renameColumnChangeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.UpdateColumnChange} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UpdateColumnChangeItemProvider updateColumnChangeItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.UpdateColumnChange}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUpdateColumnChangeAdapter() {
		if (updateColumnChangeItemProvider == null) {
			updateColumnChangeItemProvider = new UpdateColumnChangeItemProvider(this);
		}

		return updateColumnChangeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.UpdateColumnCommentChange} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UpdateColumnCommentChangeItemProvider updateColumnCommentChangeItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.UpdateColumnCommentChange}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUpdateColumnCommentChangeAdapter() {
		if (updateColumnCommentChangeItemProvider == null) {
			updateColumnCommentChangeItemProvider = new UpdateColumnCommentChangeItemProvider(this);
		}

		return updateColumnCommentChangeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.UpdateTableCommentChange} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UpdateTableCommentChangeItemProvider updateTableCommentChangeItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.UpdateTableCommentChange}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUpdateTableCommentChangeAdapter() {
		if (updateTableCommentChangeItemProvider == null) {
			updateTableCommentChangeItemProvider = new UpdateTableCommentChangeItemProvider(this);
		}

		return updateTableCommentChangeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.AddPrimaryKey} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AddPrimaryKeyItemProvider addPrimaryKeyItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.AddPrimaryKey}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAddPrimaryKeyAdapter() {
		if (addPrimaryKeyItemProvider == null) {
			addPrimaryKeyItemProvider = new AddPrimaryKeyItemProvider(this);
		}

		return addPrimaryKeyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.RemovePrimaryKey} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RemovePrimaryKeyItemProvider removePrimaryKeyItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.RemovePrimaryKey}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRemovePrimaryKeyAdapter() {
		if (removePrimaryKeyItemProvider == null) {
			removePrimaryKeyItemProvider = new RemovePrimaryKeyItemProvider(this);
		}

		return removePrimaryKeyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.UpdatePrimaryKey} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UpdatePrimaryKeyItemProvider updatePrimaryKeyItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.UpdatePrimaryKey}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUpdatePrimaryKeyAdapter() {
		if (updatePrimaryKeyItemProvider == null) {
			updatePrimaryKeyItemProvider = new UpdatePrimaryKeyItemProvider(this);
		}

		return updatePrimaryKeyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.AddIndex} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AddIndexItemProvider addIndexItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.AddIndex}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAddIndexAdapter() {
		if (addIndexItemProvider == null) {
			addIndexItemProvider = new AddIndexItemProvider(this);
		}

		return addIndexItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.RemoveIndex} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RemoveIndexItemProvider removeIndexItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.RemoveIndex}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRemoveIndexAdapter() {
		if (removeIndexItemProvider == null) {
			removeIndexItemProvider = new RemoveIndexItemProvider(this);
		}

		return removeIndexItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.UpdateIndex} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UpdateIndexItemProvider updateIndexItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.UpdateIndex}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUpdateIndexAdapter() {
		if (updateIndexItemProvider == null) {
			updateIndexItemProvider = new UpdateIndexItemProvider(this);
		}

		return updateIndexItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.AddForeignKey} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AddForeignKeyItemProvider addForeignKeyItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.AddForeignKey}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAddForeignKeyAdapter() {
		if (addForeignKeyItemProvider == null) {
			addForeignKeyItemProvider = new AddForeignKeyItemProvider(this);
		}

		return addForeignKeyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.RemoveForeignKey} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RemoveForeignKeyItemProvider removeForeignKeyItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.RemoveForeignKey}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRemoveForeignKeyAdapter() {
		if (removeForeignKeyItemProvider == null) {
			removeForeignKeyItemProvider = new RemoveForeignKeyItemProvider(this);
		}

		return removeForeignKeyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.UpdateForeignKey} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UpdateForeignKeyItemProvider updateForeignKeyItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.UpdateForeignKey}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUpdateForeignKeyAdapter() {
		if (updateForeignKeyItemProvider == null) {
			updateForeignKeyItemProvider = new UpdateForeignKeyItemProvider(this);
		}

		return updateForeignKeyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.AddConstraint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AddConstraintItemProvider addConstraintItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.AddConstraint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAddConstraintAdapter() {
		if (addConstraintItemProvider == null) {
			addConstraintItemProvider = new AddConstraintItemProvider(this);
		}

		return addConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.RemoveConstraint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RemoveConstraintItemProvider removeConstraintItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.RemoveConstraint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRemoveConstraintAdapter() {
		if (removeConstraintItemProvider == null) {
			removeConstraintItemProvider = new RemoveConstraintItemProvider(this);
		}

		return removeConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.UpdateConstraint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UpdateConstraintItemProvider updateConstraintItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.UpdateConstraint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUpdateConstraintAdapter() {
		if (updateConstraintItemProvider == null) {
			updateConstraintItemProvider = new UpdateConstraintItemProvider(this);
		}

		return updateConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.AddSequence} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AddSequenceItemProvider addSequenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.AddSequence}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAddSequenceAdapter() {
		if (addSequenceItemProvider == null) {
			addSequenceItemProvider = new AddSequenceItemProvider(this);
		}

		return addSequenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.RemoveSequence} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RemoveSequenceItemProvider removeSequenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.RemoveSequence}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRemoveSequenceAdapter() {
		if (removeSequenceItemProvider == null) {
			removeSequenceItemProvider = new RemoveSequenceItemProvider(this);
		}

		return removeSequenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.UpdateSequence} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UpdateSequenceItemProvider updateSequenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.UpdateSequence}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUpdateSequenceAdapter() {
		if (updateSequenceItemProvider == null) {
			updateSequenceItemProvider = new UpdateSequenceItemProvider(this);
		}

		return updateSequenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.SchemaChange} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SchemaChangeItemProvider schemaChangeItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.SchemaChange}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSchemaChangeAdapter() {
		if (schemaChangeItemProvider == null) {
			schemaChangeItemProvider = new SchemaChangeItemProvider(this);
		}

		return schemaChangeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.AddSchema} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AddSchemaItemProvider addSchemaItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.AddSchema}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAddSchemaAdapter() {
		if (addSchemaItemProvider == null) {
			addSchemaItemProvider = new AddSchemaItemProvider(this);
		}

		return addSchemaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.RemoveSchema} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RemoveSchemaItemProvider removeSchemaItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.RemoveSchema}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRemoveSchemaAdapter() {
		if (removeSchemaItemProvider == null) {
			removeSchemaItemProvider = new RemoveSchemaItemProvider(this);
		}

		return removeSchemaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.AlterSchema} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AlterSchemaItemProvider alterSchemaItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.AlterSchema}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAlterSchemaAdapter() {
		if (alterSchemaItemProvider == null) {
			alterSchemaItemProvider = new AlterSchemaItemProvider(this);
		}

		return alterSchemaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.RenameSchemaChange} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RenameSchemaChangeItemProvider renameSchemaChangeItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.RenameSchemaChange}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRenameSchemaChangeAdapter() {
		if (renameSchemaChangeItemProvider == null) {
			renameSchemaChangeItemProvider = new RenameSchemaChangeItemProvider(this);
		}

		return renameSchemaChangeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.UpdateSchemaCommentChange} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UpdateSchemaCommentChangeItemProvider updateSchemaCommentChangeItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.UpdateSchemaCommentChange}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUpdateSchemaCommentChangeAdapter() {
		if (updateSchemaCommentChangeItemProvider == null) {
			updateSchemaCommentChangeItemProvider = new UpdateSchemaCommentChangeItemProvider(this);
		}

		return updateSchemaCommentChangeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.AddView} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AddViewItemProvider addViewItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.AddView}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAddViewAdapter() {
		if (addViewItemProvider == null) {
			addViewItemProvider = new AddViewItemProvider(this);
		}

		return addViewItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.RemoveView} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RemoveViewItemProvider removeViewItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.RemoveView}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRemoveViewAdapter() {
		if (removeViewItemProvider == null) {
			removeViewItemProvider = new RemoveViewItemProvider(this);
		}

		return removeViewItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.AlterView} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AlterViewItemProvider alterViewItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.AlterView}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAlterViewAdapter() {
		if (alterViewItemProvider == null) {
			alterViewItemProvider = new AlterViewItemProvider(this);
		}

		return alterViewItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.RenameViewChange} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RenameViewChangeItemProvider renameViewChangeItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.RenameViewChange}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRenameViewChangeAdapter() {
		if (renameViewChangeItemProvider == null) {
			renameViewChangeItemProvider = new RenameViewChangeItemProvider(this);
		}

		return renameViewChangeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.UpdateViewCommentChange} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UpdateViewCommentChangeItemProvider updateViewCommentChangeItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.UpdateViewCommentChange}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUpdateViewCommentChangeAdapter() {
		if (updateViewCommentChangeItemProvider == null) {
			updateViewCommentChangeItemProvider = new UpdateViewCommentChangeItemProvider(this);
		}

		return updateViewCommentChangeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.database.dbevolution.UpdateViewQueryChange} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UpdateViewQueryChangeItemProvider updateViewQueryChangeItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.database.dbevolution.UpdateViewQueryChange}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUpdateViewQueryChangeAdapter() {
		if (updateViewQueryChangeItemProvider == null) {
			updateViewQueryChangeItemProvider = new UpdateViewQueryChangeItemProvider(this);
		}

		return updateViewQueryChangeItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (databaseChangeSetItemProvider != null) databaseChangeSetItemProvider.dispose();
		if (addTableItemProvider != null) addTableItemProvider.dispose();
		if (removeTableItemProvider != null) removeTableItemProvider.dispose();
		if (alterTableItemProvider != null) alterTableItemProvider.dispose();
		if (renameTableChangeItemProvider != null) renameTableChangeItemProvider.dispose();
		if (updateTableCommentChangeItemProvider != null) updateTableCommentChangeItemProvider.dispose();
		if (addColumnChangeItemProvider != null) addColumnChangeItemProvider.dispose();
		if (removeColumnChangeItemProvider != null) removeColumnChangeItemProvider.dispose();
		if (renameColumnChangeItemProvider != null) renameColumnChangeItemProvider.dispose();
		if (updateColumnChangeItemProvider != null) updateColumnChangeItemProvider.dispose();
		if (updateColumnCommentChangeItemProvider != null) updateColumnCommentChangeItemProvider.dispose();
		if (addPrimaryKeyItemProvider != null) addPrimaryKeyItemProvider.dispose();
		if (removePrimaryKeyItemProvider != null) removePrimaryKeyItemProvider.dispose();
		if (updatePrimaryKeyItemProvider != null) updatePrimaryKeyItemProvider.dispose();
		if (addIndexItemProvider != null) addIndexItemProvider.dispose();
		if (removeIndexItemProvider != null) removeIndexItemProvider.dispose();
		if (updateIndexItemProvider != null) updateIndexItemProvider.dispose();
		if (addForeignKeyItemProvider != null) addForeignKeyItemProvider.dispose();
		if (removeForeignKeyItemProvider != null) removeForeignKeyItemProvider.dispose();
		if (updateForeignKeyItemProvider != null) updateForeignKeyItemProvider.dispose();
		if (addConstraintItemProvider != null) addConstraintItemProvider.dispose();
		if (removeConstraintItemProvider != null) removeConstraintItemProvider.dispose();
		if (updateConstraintItemProvider != null) updateConstraintItemProvider.dispose();
		if (addSequenceItemProvider != null) addSequenceItemProvider.dispose();
		if (removeSequenceItemProvider != null) removeSequenceItemProvider.dispose();
		if (updateSequenceItemProvider != null) updateSequenceItemProvider.dispose();
		if (schemaChangeItemProvider != null) schemaChangeItemProvider.dispose();
		if (addSchemaItemProvider != null) addSchemaItemProvider.dispose();
		if (removeSchemaItemProvider != null) removeSchemaItemProvider.dispose();
		if (alterSchemaItemProvider != null) alterSchemaItemProvider.dispose();
		if (renameSchemaChangeItemProvider != null) renameSchemaChangeItemProvider.dispose();
		if (updateSchemaCommentChangeItemProvider != null) updateSchemaCommentChangeItemProvider.dispose();
		if (addViewItemProvider != null) addViewItemProvider.dispose();
		if (removeViewItemProvider != null) removeViewItemProvider.dispose();
		if (alterViewItemProvider != null) alterViewItemProvider.dispose();
		if (renameViewChangeItemProvider != null) renameViewChangeItemProvider.dispose();
		if (updateViewCommentChangeItemProvider != null) updateViewCommentChangeItemProvider.dispose();
		if (updateViewQueryChangeItemProvider != null) updateViewQueryChangeItemProvider.dispose();
	}

}
